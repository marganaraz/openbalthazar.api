[{"SourceCode":"pragma solidity ^0.5.11;\r\n\r\ncontract digitalNotary\r\n{\r\n    \r\n    address payable private manager;\r\n    \r\n    bool private contractactive;\r\n    \r\n    uint private hashfee;\r\n    \r\n    uint private changehashownerfee;\r\n    \r\n    struct HashRegistration \r\n    {\r\n        address owner;\r\n        uint registrationtime;\r\n    }\r\n    \r\n    mapping(bytes32 =\u003E HashRegistration[]) HashList;\r\n    \r\n    uint private HashListLength;\r\n    \r\n    event  RegisterHashEvent(address indexed msgsender, bytes32 indexed hash, uint timestamp);\r\n    \r\n    event  ChangeHashOwnershipEvent(address indexed msgsender, address indexed newowner, bytes32 indexed hash, uint timestamp);\r\n    \r\n    constructor() public\r\n    {\r\n\r\n        manager = msg.sender;\r\n        \r\n        contractactive = true;\r\n        \r\n        hashfee = 5000000000000000;\r\n        \r\n        changehashownerfee = 25000000000000000;\r\n        \r\n        HashListLength = 0;\r\n        \r\n    }\r\n    \r\n    modifier onlyManager()\r\n    {\r\n        require(msg.sender == manager);\r\n        _;\r\n    }\r\n    \r\n    \r\n    function gethashfee() external view returns(uint)\r\n    {\r\n        return hashfee;\r\n    }\r\n    \r\n    function sethashfee(uint newfee) external onlyManager\r\n    {\r\n        require(newfee \u003E= 0);\r\n        \r\n        hashfee = newfee;\r\n    }\r\n    \r\n    function getchangehashownerfee() external view returns(uint)\r\n    {\r\n        return changehashownerfee;\r\n    }\r\n    \r\n     function setchangehashownerfee(uint newfee) external onlyManager\r\n    {\r\n        require(newfee \u003E= 0);\r\n        \r\n        changehashownerfee = newfee;\r\n    }\r\n    \r\n    function getcontractactive() external view returns (bool)\r\n    {\r\n        return contractactive;\r\n    }\r\n    \r\n    function setcontractactive(bool contactive) external onlyManager\r\n    {\r\n        contractactive = contactive;\r\n    }\r\n    \r\n     function getmanager() external view returns(address)\r\n    {\r\n        return manager;\r\n    }\r\n    \r\n    function setmanager(address payable newmngr) external onlyManager\r\n    {\r\n        require(newmngr.balance \u003E 0);\r\n        manager = newmngr;\r\n    }\r\n    \r\n    function getcontractbalance() public view returns(uint)\r\n    {\r\n       \r\n        return address(this).balance;\r\n    }\r\n    \r\n    function transfercontractbalance() external onlyManager\r\n    {\r\n        uint cb = address(this).balance;\r\n        \r\n        require(cb \u003E 0);\r\n        \r\n        manager.transfer(cb);\r\n    }\r\n    \r\n    function getHashOwnersCount(bytes32 hash) public view returns(uint)\r\n    {\r\n        return HashList[hash].length;\r\n    }\r\n    \r\n    function getNumberofHashesRegistered() external view returns(uint)\r\n    {\r\n        return HashListLength;\r\n    }\r\n    \r\n     function getHashDetails(bytes32 hash,uint indx) external view returns (address,uint)\r\n    {\r\n\r\n        uint owncount = getHashOwnersCount(hash);\r\n        require(owncount \u003E 0);\r\n        require(indx \u003C owncount);\r\n        \r\n        return (HashList[hash][indx].owner,HashList[hash][indx].registrationtime);\r\n    }\r\n    \r\n    function registerHash(bytes32 hash) external payable\r\n    {\r\n      \r\n        require(contractactive == true);\r\n        require(getHashOwnersCount(hash) == 0);\r\n        require(msg.value == hashfee);\r\n        \r\n        HashRegistration memory thisregistration;\r\n        thisregistration.owner = msg.sender;\r\n        thisregistration.registrationtime = now;\r\n        \r\n        HashList[hash].push(thisregistration);\r\n        \r\n        HashListLength\u002B\u002B;\r\n        \r\n        emit RegisterHashEvent(thisregistration.owner, hash, thisregistration.registrationtime);\r\n        \r\n    }\r\n    \r\n    function changeHashOwnership(bytes32 hash, address newowner) external payable\r\n    {\r\n        \r\n        require(contractactive == true);\r\n        uint owncount = getHashOwnersCount(hash);\r\n        require(owncount \u003E 0);\r\n        require(msg.sender == HashList[hash][owncount - 1].owner); \r\n        require(msg.value == changehashownerfee);\r\n        \r\n        HashRegistration memory thisregistration;\r\n        thisregistration.owner = newowner;\r\n        thisregistration.registrationtime = now;\r\n        \r\n        HashList[hash].push(thisregistration);\r\n        \r\n        emit ChangeHashOwnershipEvent(msg.sender, thisregistration.owner, hash, thisregistration.registrationtime);\r\n    }\r\n    \r\n    function () external\r\n    {\r\n      \t\r\n    }\r\n}","ABI":"[{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022newfee\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022setchangehashownerfee\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getNumberofHashesRegistered\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getchangehashownerfee\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022hash\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022newowner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022changeHashOwnership\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022gethashfee\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022contactive\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022name\u0022:\u0022setcontractactive\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022hash\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022registerHash\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022newfee\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022sethashfee\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022transfercontractbalance\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022hash\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022indx\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022getHashDetails\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022hash\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022getHashOwnersCount\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getcontractbalance\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getmanager\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022newmngr\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022setmanager\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getcontractactive\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022fallback\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022msgsender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022hash\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022timestamp\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022RegisterHashEvent\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022msgsender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022newowner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022hash\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022timestamp\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022ChangeHashOwnershipEvent\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"digitalNotary","CompilerVersion":"v0.5.11\u002Bcommit.c082d0b4","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c81a3a362bfc079ebd979749a0e020c7d88e69dda7c4a980d8e9e350158885aa"}]