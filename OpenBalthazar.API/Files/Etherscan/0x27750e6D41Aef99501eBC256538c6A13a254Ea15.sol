[{"SourceCode":"pragma solidity ^0.4.23;\r\n/*\r\n *             \u2554\u2550\u2557\u250C\u2500\u2510\u250C\u2500\u2510\u252C\u250C\u2500\u2510\u252C\u250C\u2500\u2510\u252C   \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2566 \u2566\u250C\u2500\u2510\u250C\u2510 \u2554\u2550\u2557\u252C\u250C\u252C\u2510\u250C\u2500\u2510\r\n *             \u2551 \u2551\u251C\u2524 \u251C\u2524 \u2502\u2502  \u2502\u251C\u2500\u2524\u2502   \u2502KOL Community Foundation \u2502 \u2551\u2551\u2551\u251C\u2524 \u251C\u2534\u2510\u255A\u2550\u2557\u2502 \u2502 \u251C\u2524\r\n *             \u255A\u2550\u255D\u2514  \u2514  \u2534\u2514\u2500\u2518\u2534\u2534 \u2534\u2534\u2500\u2518 \u2514\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2518 \u255A\u2569\u255D\u2514\u2500\u2518\u2514\u2500\u2518\u255A\u2550\u255D\u2534 \u2534 \u2514\u2500\u2518\r\n *   \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n *   \u2502    \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u2502\r\n *   \u2514\u2500\u2500\u2500\u2500\u2524 Dev:Jack Koe \u251C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 Special for:KOL Fund \u251C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 20200212   \u251C\u2500\u2500\u2518\r\n *        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n */\r\nlibrary SafeMath {\r\n\r\n  function mul(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\r\n    if (_a == 0) {\r\n      return 0;\r\n    }\r\n    c = _a * _b;\r\n    assert(c / _a == _b);\r\n    return c;\r\n  }\r\n  function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n    return _a / _b;\r\n  }\r\n  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n    assert(_b \u003C= _a);\r\n    return _a - _b;\r\n  }\r\n  function add(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\r\n    c = _a \u002B _b;\r\n    assert(c \u003E= _a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract UERC20Basic {\r\n    uint public _totalSupply;\r\n    function totalSupply() public constant returns (uint);\r\n    function balanceOf(address who) public constant returns (uint);\r\n    function transfer(address to, uint value) public;\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n}\r\n\r\ncontract UERC20 is UERC20Basic {\r\n    function allowance(address owner, address spender) public constant returns (uint);\r\n    function transferFrom(address from, address to, uint value) public;\r\n    function approve(address spender, uint value) public;\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\ncontract KERC20Basic {\r\n  function balanceOf(address _who) public view returns (uint256);\r\n  function transfer(address _to, uint256 _value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract KERC20 is KERC20Basic {\r\n  function allowance(address _owner, address _spender)\r\n    public view returns (uint256);\r\n\r\n  function transferFrom(address _from, address _to, uint256 _value)\r\n    public returns (bool);\r\n  function querySuperNode(address _addr)\r\n    public returns(bool);\r\n  function queryNode(address _addr)\r\n    public view returns(bool);\r\n  function approve(address _spender, uint256 _value) public returns (bool);\r\n  event Approval(\r\n    address indexed owner,\r\n    address indexed spender,\r\n    uint256 value\r\n  );\r\n}\r\n\r\ncontract Ownable {\r\n\r\n  address public owner;\r\n  event OwnershipTransferred(\r\n    address indexed previousOwner,\r\n    address indexed newOwner\r\n  );\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n  function _transferOwnership(address _newOwner) internal {\r\n    require(_newOwner != address(0));\r\n    emit OwnershipTransferred(owner, _newOwner);\r\n    owner = _newOwner;\r\n  }\r\n}\r\n\r\ncontract KOLUSDTFund is Ownable{\r\n  using SafeMath for uint256;\r\n  string public name = \u0022KOL USDT Foundation\u0022;\r\n  string public symbol = \u0022KOLUSDTFund\u0022;\r\n  KERC20 public kol;\r\n  UERC20 public usdt;\r\n\r\n  uint256 public dealTime =  3 days;\r\n  uint256 public missionId = 0;\r\n  uint256 public constant TENKOL = 100000 * (10 ** 18);\r\n  uint256 public constant TENUSDT = 100000 * (10 ** 6);\r\n\r\n\r\n  uint16 public constant halfSuperNodes = 11;\r\n  uint16 public constant minSuperNodes = 15;\r\n\r\n  mapping(address =\u003E mapping(uint256 =\u003E bool)) private Voter;\r\n\r\n  constructor(address _kolAddress,address _usdtAddress) public {\r\n    kol = KERC20(_kolAddress);\r\n    usdt = UERC20(_usdtAddress);\r\n  }\r\n\r\n  event MissionPassed(uint256 _missionId,bytes32 _name);\r\n  event OfferingFinished(uint256 _missionId,uint256 _totalAmount,uint256 _length);\r\n  event MissionLaunched(bytes32 _name,uint256 _missionId,address _whoLaunch);\r\n\r\n  modifier onlySuperNode() {\r\n    require(kol.querySuperNode(msg.sender));\r\n      _;\r\n  }\r\n\r\n/*\r\nisKol:true, mean kol\r\nisKol:false, mean usdt\r\n*/\r\n  struct KolMission{\r\n    bool isKol;\r\n    uint256 startTime;\r\n    uint256 endTime;\r\n    uint256 totalAmount;\r\n    uint256 offeringAmount;\r\n    bytes32 name;\r\n    uint16 agreeSuperNodes;\r\n    uint16 refuseSuperNodes;\r\n    bool superPassed;\r\n    bool done;\r\n  }\r\n  mapping (uint256 =\u003E KolMission) private missionList;\r\n\r\n  struct KolOffering{\r\n    address target;\r\n    uint256 targetAmount;\r\n  }\r\n  KolOffering[] private kolOfferings;\r\n  mapping(uint256 =\u003E KolOffering[]) private offeringList;\r\n\r\n  function missionPassed(uint256 _missionId) private {\r\n    emit MissionPassed(_missionId,missionList[_missionId].name);\r\n  }\r\n  function createKolMission(bytes32 _name,uint256 _totalAmount,bool _isKol) onlySuperNode public {\r\n      bytes32 iName = _name;\r\n      missionList[missionId] = KolMission(_isKol,\r\n                                          uint256(now),\r\n                                          uint256(now \u002B dealTime),\r\n                                          _totalAmount,\r\n                                          0,\r\n                                          iName,\r\n                                          0,\r\n                                          0,\r\n                                          false,\r\n                                          false);\r\n\r\n      missionId\u002B\u002B;\r\n      emit MissionLaunched(iName,missionId-1,msg.sender);\r\n  }\r\n  function voteMission(uint256 _missionId,bool _agree) onlySuperNode public{\r\n    require(now \u003C missionList[_missionId].endTime);\r\n    require(kol.querySuperNode(msg.sender));\r\n    require(!missionList[_missionId].done);\r\n    require(!Voter[msg.sender][_missionId]);\r\n\r\n    uint16 minSuperNodesNum = minSuperNodes;\r\n    uint16 passSuperNodes = halfSuperNodes;\r\n\r\n    uint256 TEN;\r\n    if (missionList[_missionId].isKol){\r\n      TEN = TENKOL;\r\n    }else{\r\n      TEN = TENUSDT;\r\n    }\r\n\r\n    if (missionList[_missionId].totalAmount \u003E= TEN){\r\n      passSuperNodes = minSuperNodes;\r\n    }\r\n\r\n    if(_agree == true){\r\n      missionList[_missionId].agreeSuperNodes\u002B\u002B;\r\n    }\r\n    else{\r\n      missionList[_missionId].refuseSuperNodes\u002B\u002B;\r\n    }\r\n    if (missionList[_missionId].agreeSuperNodes \u003E= passSuperNodes) {\r\n        missionList[_missionId].superPassed = true;\r\n        missionPassed(_missionId);\r\n    }else if (missionList[_missionId].refuseSuperNodes \u003E= passSuperNodes) {\r\n        missionList[_missionId].done = true;\r\n    }\r\n    Voter[msg.sender][_missionId] = true;\r\n  }\r\n  function addKolOffering(uint256 _missionId,address _target,uint256 _targetAmount) onlySuperNode public{\r\n    require(!missionList[_missionId].done);\r\n    if (missionList[_missionId].isKol){\r\n      require(kol.queryNode(_target)||kol.querySuperNode(_target));\r\n    }\r\n    require(missionList[_missionId].offeringAmount.add(_targetAmount) \u003C= missionList[_missionId].totalAmount);\r\n    offeringList[_missionId].push(KolOffering(_target,_targetAmount));\r\n    missionList[_missionId].offeringAmount = missionList[_missionId].offeringAmount.add(_targetAmount);\r\n\r\n  }\r\n  function excuteVote(uint256 _missionId) onlyOwner public {\r\n    require(!missionList[_missionId].done);\r\n    require(uint256(now) \u003C (missionList[_missionId].endTime \u002B uint256(dealTime)));\r\n    require(missionList[_missionId].superPassed);\r\n    require(missionList[_missionId].totalAmount == missionList[_missionId].offeringAmount);\r\n\r\n    bool isKol = missionList[_missionId].isKol;\r\n    for (uint m = 0; m \u003C offeringList[_missionId].length; m\u002B\u002B){\r\n      if (isKol){\r\n        kol.transfer(offeringList[_missionId][m].target, offeringList[_missionId][m].targetAmount);\r\n      }else{\r\n        usdt.transfer(offeringList[_missionId][m].target, offeringList[_missionId][m].targetAmount);\r\n      }\r\n\r\n    }\r\n\r\n    missionList[_missionId].done = true;\r\n    emit OfferingFinished(_missionId,missionList[_missionId].offeringAmount,offeringList[_missionId].length);\r\n\r\n  }\r\n  function getMission1(uint256 _missionId) public view returns(bool,\r\n                                                            uint256,\r\n                                                            uint256,\r\n                                                            uint256,\r\n                                                            uint256,\r\n                                                            bytes32){\r\n    return(missionList[_missionId].isKol,\r\n            missionList[_missionId].startTime,\r\n            missionList[_missionId].endTime,\r\n            missionList[_missionId].totalAmount,\r\n            missionList[_missionId].offeringAmount,\r\n            missionList[_missionId].name);\r\n  }\r\n  function getMission2(uint256 _missionId) public view returns(uint16,\r\n                                                              uint16,\r\n                                                              bool,\r\n                                                              bool){\r\n    return(\r\n          missionList[_missionId].agreeSuperNodes,\r\n          missionList[_missionId].refuseSuperNodes,\r\n          missionList[_missionId].superPassed,\r\n          missionList[_missionId].done);\r\n  }\r\n  function getOfferings(uint256 _missionId,uint256 _id) public view returns(address,uint256,uint256){\r\n    return(offeringList[_missionId][_id].target,offeringList[_missionId][_id].targetAmount,offeringList[_missionId].length);\r\n  }\r\n  function voted(address _node,uint256 _missionId) public view returns(bool){\r\n    return Voter[_node][_missionId];\r\n  }\r\n\r\n}","ABI":"[{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_missionId\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022excuteVote\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022name\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022kol\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022usdt\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_missionId\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_agree\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022name\u0022:\u0022voteMission\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022minSuperNodes\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint16\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_missionId\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_id\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022getOfferings\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022halfSuperNodes\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint16\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_missionId\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_target\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_targetAmount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022addKolOffering\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_name\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022name\u0022:\u0022_totalAmount\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_isKol\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022name\u0022:\u0022createKolMission\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022owner\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022symbol\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022TENKOL\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022missionId\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_missionId\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022getMission2\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint16\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint16\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022dealTime\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_node\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_missionId\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022voted\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_missionId\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022getMission1\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022TENUSDT\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[{\u0022name\u0022:\u0022_kolAddress\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_usdtAddress\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022_missionId\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022_name\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022MissionPassed\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022_missionId\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022_totalAmount\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022_length\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022OfferingFinished\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022_name\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022_missionId\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022_whoLaunch\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022MissionLaunched\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022previousOwner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022OwnershipTransferred\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"KOLUSDTFund","CompilerVersion":"v0.4.23\u002Bcommit.124ca40d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000946e36c2887025c389ef85ea5f9150e0bed4d69000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec7","Library":"","SwarmSource":"bzzr://18c2f3090758d83f5b7d2373706565554841ae893be71695b484534e7fd6eab2"}]