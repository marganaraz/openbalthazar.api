[{"SourceCode":"pragma solidity ^0.4.26;\r\n\r\ninterface Token {\r\n  function balanceOf(address who) external view returns (uint256);\r\n}\r\n\r\ncontract BalanceChecker {\r\n  function() external payable {\r\n    revert(\u0022BalanceChecker does not accept payments\u0022);\r\n  }\r\n\r\n  function balances(address[] users, address[] tokens) external view returns (uint256[] memory) {\r\n    uint256[] memory addrBalances = new uint256[](tokens.length * users.length);\r\n    for(uint i = 0; i \u003C users.length; i\u002B\u002B) {\r\n      for (uint j = 0; j \u003C tokens.length; j\u002B\u002B) {\r\n        uint addrIdx = j \u002B tokens.length * i;\r\n        if (tokens[j] != address(0x0)) {\r\n          Token erc20 = Token(tokens[j]);\r\n          addrBalances[addrIdx] = erc20.balanceOf(users[i]);\r\n        } else {\r\n          addrBalances[addrIdx] = users[i].balance;\r\n        }\r\n      }  \r\n    }\r\n  \r\n    return addrBalances;\r\n  }\r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022users\u0022,\u0022type\u0022:\u0022address[]\u0022},{\u0022name\u0022:\u0022tokens\u0022,\u0022type\u0022:\u0022address[]\u0022}],\u0022name\u0022:\u0022balances\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256[]\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022fallback\u0022}]","ContractName":"BalanceChecker","CompilerVersion":"v0.4.26\u002Bcommit.4563c3fc","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://3b5d459516779cf82a6bad1cbe72fa6c12c0854ae1a47aa51a052ea5c9251062"}]