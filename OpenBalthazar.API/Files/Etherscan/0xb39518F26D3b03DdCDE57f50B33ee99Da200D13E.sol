[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2019-07-11\r\n*/\r\n\r\npragma solidity ^0.5.10;\r\n\r\n/*\r\n * MintHelper and MultiSend for BSOV Mining Pool\r\n * BitcoinSoV (BSOV) Mineable \u0026 Deflationary\r\n *\r\n * https://www.btcsov.com\r\n * https://bsov-pool.hashtables.net\r\n *\r\n * Based off https://github.com/0xbitcoin/mint-helper\r\n */\r\n\r\n\r\ncontract Ownable {\r\n    address private _owner;\r\n    address private _payoutWallet;  // Added to prevent payouts interfering with minting requests. \r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () internal {\r\n        _owner = msg.sender;\r\n        _payoutWallet = msg.sender;\r\n\r\n        emit OwnershipTransferred(address(0), _owner);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n    \r\n    function payoutWallet() public view returns (address) {\r\n        return _payoutWallet;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == _owner, \u0022Ownable: caller is not the owner, minter, or payer.\u0022);\r\n        _;\r\n    }\r\n    \r\n    modifier onlyPayoutWallet() {\r\n        require(msg.sender == _owner || msg.sender == _payoutWallet, \u0022Ownable: caller is not the owner or payer.\u0022);\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        _transferOwnership(newOwner);\r\n    }\r\n    \r\n    function setPayoutWallet(address newAddress) public onlyOwner {\r\n        _payoutWallet = newAddress;\r\n    }\r\n    \r\n    function _transferOwnership(address newOwner) internal {\r\n        require(newOwner != address(0), \u0022Ownable: new owner is the zero address\u0022);\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract ERC20Interface {\r\n    function totalSupply() public view returns (uint);\r\n    function balanceOf(address tokenOwner) public view returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\ncontract ERC918Interface {\r\n  function totalSupply() public view returns (uint);\r\n  function getMiningDifficulty() public view returns (uint);\r\n  function getMiningTarget() public view returns (uint);\r\n  function getMiningReward() public view returns (uint);\r\n  function balanceOf(address tokenOwner) public view returns (uint balance);\r\n\r\n  function mint(uint256 nonce, bytes32 challenge_digest) public returns (bool success);\r\n\r\n  event Mint(address indexed from, uint reward_amount, uint epochCount, bytes32 newChallengeNumber);\r\n}\r\n\r\n/*\r\nThe mintingWallet will proxy mint requests to be credited to the contract address.\r\nThe payoutWallet will call the multisend method to send out payments.\r\n*/\r\n\r\ncontract PoolHelper is Ownable {\r\n    string public name;\r\n    address public mintableToken;\r\n    mapping(bytes32 =\u003E bool) successfulPayments;\r\n\r\n    event Payment(bytes32 _paymentId);\r\n    \r\n    constructor(address mToken, string memory mName)\r\n    public\r\n    {\r\n      mintableToken = mToken;\r\n      name = mName;\r\n    }\r\n\r\n    function setMintableToken(address mToken)\r\n    public onlyOwner\r\n    returns (bool)\r\n    {\r\n      mintableToken = mToken;\r\n      return true;\r\n    }\r\n\r\n    function paymentSuccessful(bytes32 paymentId) public view returns (bool){\r\n        return (successfulPayments[paymentId] == true);\r\n    }\r\n    \r\n    function proxyMint(uint256 nonce, bytes32 challenge_digest )\r\n    public\r\n    returns (bool)\r\n    {\r\n      require(ERC918Interface(mintableToken).mint(nonce, challenge_digest), \u0022Could not mint token\u0022);\r\n      return true;\r\n    }\r\n\r\n    //withdraw any eth inside\r\n    function withdraw()\r\n    public onlyOwner\r\n    {\r\n        msg.sender.transfer(address(this).balance);\r\n    }\r\n    \r\n    //send tokens out\r\n    function send(address _tokenAddr, bytes32 paymentId, address dest, uint value)\r\n    public onlyPayoutWallet\r\n    returns (bool)\r\n    {\r\n        require(successfulPayments[paymentId] != true, \u0022Payment ID already exists and was successful\u0022);\r\n        successfulPayments[paymentId] = true;\r\n        emit Payment(paymentId);\r\n        return ERC20Interface(_tokenAddr).transfer(dest, value);\r\n    }\r\n\r\n    //batch send tokens\r\n    function multisend(address _tokenAddr, bytes32 paymentId, address[] memory dests, uint256[] memory values)\r\n    public onlyPayoutWallet\r\n    returns (uint256)\r\n    {\r\n        require(dests.length \u003E 0, \u0022Must have more than 1 destination address\u0022);\r\n        require(values.length \u003E= dests.length, \u0022Address to Value array size mismatch\u0022);\r\n        require(successfulPayments[paymentId] != true, \u0022Payment ID already exists and was successful\u0022);\r\n\r\n        uint256 i = 0;\r\n        while (i \u003C dests.length) {\r\n           require(ERC20Interface(_tokenAddr).transfer(dests[i], values[i]));\r\n           i \u002B= 1;\r\n        }\r\n\r\n        successfulPayments[paymentId] = true;\r\n        emit Payment(paymentId);\r\n        return (i);\r\n    }\r\n}","ABI":"[{\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022mToken\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022string\u0022,\u0022name\u0022:\u0022mName\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022previousOwner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022OwnershipTransferred\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022_paymentId\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022Payment\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022mintableToken\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_tokenAddr\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022paymentId\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022internalType\u0022:\u0022address[]\u0022,\u0022name\u0022:\u0022dests\u0022,\u0022type\u0022:\u0022address[]\u0022},{\u0022internalType\u0022:\u0022uint256[]\u0022,\u0022name\u0022:\u0022values\u0022,\u0022type\u0022:\u0022uint256[]\u0022}],\u0022name\u0022:\u0022multisend\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022name\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022string\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022owner\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022paymentId\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022paymentSuccessful\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022payoutWallet\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022nonce\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022challenge_digest\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022proxyMint\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022renounceOwnership\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_tokenAddr\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022paymentId\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022dest\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022send\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022mToken\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022setMintableToken\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022newAddress\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022setPayoutWallet\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022transferOwnership\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022withdraw\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022}]","ContractName":"PoolHelper","CompilerVersion":"v0.5.12\u002Bcommit.7709ece9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000c7f6877b059e8bdf0253609bd636c01b89397dd30000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000a706f6f6c68656c70657200000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://10db778577cc57d828dfca4a706baeab86f71c1bbbcde3572fda18e2c9f1933a"}]