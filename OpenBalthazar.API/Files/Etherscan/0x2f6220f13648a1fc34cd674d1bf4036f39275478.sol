[{"SourceCode":"pragma solidity ^0.4.25;\r\n// Interface to ERC20 functions used in this contract\r\ninterface ERC20token {\r\n    function balanceOf(address who) constant returns (uint);\r\n    function transfer(address to, uint value) returns (bool ok);\r\n    function allowance(address owner, address spender) constant returns (uint);\r\n    function transferFrom(address from, address to, uint value) returns (bool ok);\r\n}\r\n\r\ncontract ExoTokensMarketSimple {\r\n    ERC20token ExoToken;\r\n    address owner;\r\n    uint256 gweiPerToken;\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    constructor() public {\r\n        owner = msg.sender;\r\n        gweiPerToken = 1000000;\r\n    }\r\n\r\n    function setGweiPerToken(uint256 _gweiPerToken) public onlyOwner {\r\n        gweiPerToken = _gweiPerToken;\r\n    }\r\n    function getGweiPerToken() public view returns(uint256) {\r\n        return gweiPerToken;\r\n    }\r\n    function setERC20Token(address tokenAddr) public onlyOwner  {\r\n        ExoToken = ERC20token(tokenAddr);\r\n    }\r\n    function getERC20Token() public view returns(address) {\r\n        return ExoToken;\r\n    }\r\n    function getERC20Balance() public view returns(uint256) {\r\n        return ExoToken.balanceOf(this);\r\n    }\r\n    function depositERC20Token(uint256 _exo_amount) public  {\r\n        require(ExoToken.allowance(msg.sender, this) \u003E= _exo_amount);\r\n        require(ExoToken.transferFrom(msg.sender, this, _exo_amount));\r\n    }\r\n\r\n    // ERC20(GUP) buying function\r\n    // All of the ETH included in the TX is converted to GUP\r\n    function BuyTokens() public payable{\r\n        require(msg.value \u003E 0, \u0022eth value must be non zero\u0022);\r\n        uint256 exo_balance = ExoToken.balanceOf(this);\r\n        uint256 tokensToXfer = (msg.value*gweiPerToken)/10**18;\r\n        require(exo_balance \u003E= tokensToXfer, \u0022Not enough tokens in contract\u0022);\r\n        require(ExoToken.transfer(msg.sender, tokensToXfer), \u0022Couldn\u0027t send funds\u0022);\r\n    }\r\n\r\n    // Withdraw erc20 tokens\r\n    function withdrawERC20Tokens(uint _val) public onlyOwner {\r\n        require(ExoToken.transfer(msg.sender, _val), \u0022Couldn\u0027t send funds\u0022);\r\n    }\r\n\r\n    // Withdraw Ether\r\n    function withdrawEther() public onlyOwner {\r\n        msg.sender.transfer(address(this).balance);\r\n    }\r\n\r\n    // change the owner\r\n    function setOwner(address _owner) public onlyOwner {\r\n        owner = _owner;\r\n    }\r\n    // fallback\r\n    function() external payable { }\r\n}","ABI":"[{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022setOwner\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getGweiPerToken\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022withdrawEther\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_exo_amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022depositERC20Token\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getERC20Token\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_val\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022withdrawERC20Tokens\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_gweiPerToken\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022setGweiPerToken\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getERC20Balance\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022BuyTokens\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022tokenAddr\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022setERC20Token\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022fallback\u0022}]","ContractName":"ExoTokensMarketSimple","CompilerVersion":"v0.4.25\u002Bcommit.59dbf8f1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://9ec8ccaa3f42d1872c2aa4eeb9970dfc2b938b2142760a301059fa1885a2ea62"}]