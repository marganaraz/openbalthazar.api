[{"SourceCode":"pragma solidity ^0.5.7;\r\ncontract ReentrancyGuard {\r\nbool private _notEntered;\r\nconstructor () internal {\r\n_notEntered = true;\r\n}\r\nmodifier nonReentrant() {\r\nrequire(_notEntered, \u0022\u0022);\r\n_notEntered = false;\r\n_;\r\n_notEntered = true;\r\n}\r\n}\r\npragma solidity ^0.5.0;\r\ncontract Context {\r\nconstructor () internal { }\r\nfunction _msgSender() internal view returns (address payable) {\r\nreturn msg.sender;\r\n}\r\nfunction _msgData() internal view returns (bytes memory) {\r\nthis; \r\nreturn msg.data;\r\n}\r\n}\r\npragma solidity ^0.5.0;\r\ncontract Ownable is Context {\r\naddress private _owner;\r\nevent OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\nconstructor () internal {\r\naddress msgSender = _msgSender();\r\n_owner = msgSender;\r\nemit OwnershipTransferred(address(0), msgSender);\r\n}\r\nfunction owner() public view returns (address) {\r\nreturn _owner;\r\n}\r\nmodifier onlyOwner() {\r\nrequire(isOwner(), \u0022\u0022);\r\n_;\r\n}\r\nfunction isOwner() public view returns (bool) {\r\nreturn _msgSender() == _owner;\r\n}\r\nfunction renounceOwnership() public onlyOwner {\r\nemit OwnershipTransferred(_owner, address(0));\r\n_owner = address(0);\r\n}\r\nfunction transferOwnership(address newOwner) public onlyOwner {\r\n_transferOwnership(newOwner);\r\n}\r\nfunction _transferOwnership(address newOwner) internal {\r\nrequire(newOwner != address(0), \u0022\u0022);\r\nemit OwnershipTransferred(_owner, newOwner);\r\n_owner = newOwner;\r\n}\r\n}\r\npragma solidity ^0.5.6;\r\ninterface IERC20 {\r\nfunction transfer(address to, uint256 value) external;\r\nfunction approve(address spender, uint256 value) external;\r\nfunction transferFrom(address from, address to, uint256 value) external;\r\nfunction totalSupply() external view returns (uint256);\r\nfunction balanceOf(address who) external view returns (uint256);\r\nfunction allowance(address owner, address spender)\r\nexternal\r\nview\r\nreturns (uint256);\r\nevent Transfer(address indexed from, address indexed to, uint256 value);\r\nevent Approval(\r\naddress indexed owner,\r\naddress indexed spender,\r\nuint256 value\r\n);\r\n}\r\npragma solidity ^0.5.7;\r\ninterface ISwaps {\r\nfunction createOrder(\r\nbytes32 _id,\r\naddress _baseAddress,\r\naddress _quoteAddress,\r\nuint _baseLimit,\r\nuint _quoteLimit,\r\nuint _expirationTimestamp,\r\naddress _baseOnlyInvestor,\r\nuint _minBaseInvestment,\r\nuint _minQuoteInvestment,\r\naddress _brokerAddress,\r\nuint _brokerBasePercent,\r\nuint _brokerQuotePercent\r\n) external;\r\nfunction deposit(bytes32 _id, address _token, uint _amount)\r\nexternal\r\npayable;\r\nfunction cancel(bytes32 _id) external;\r\nfunction refund(bytes32 _id, address _token) external;\r\n}\r\npragma solidity ^0.5.7;\r\ncontract Vault is Ownable {\r\naddress public swaps;\r\nmodifier onlySwaps() {\r\nrequire(msg.sender == swaps);\r\n_;\r\n}\r\nfunction() external payable {}\r\nfunction tokenFallback(address, uint, bytes calldata) external {}\r\nfunction setSwaps(address _swaps) public onlyOwner {\r\nswaps = _swaps;\r\n}\r\nfunction withdraw(address _token, address _receiver, uint _amount)\r\npublic\r\nonlySwaps\r\n{\r\nif (_token == address(0)) {\r\naddress(uint160(_receiver)).transfer(_amount);\r\n} else {\r\nIERC20(_token).transfer(_receiver, _amount);\r\n}\r\n}\r\n}\r\npragma solidity ^0.5.0;\r\nlibrary SafeMath {\r\nfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\r\nuint256 c = a \u002B b;\r\nrequire(c \u003E= a, \u0022\u0022);\r\nreturn c;\r\n}\r\nfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\nreturn sub(a, b, \u0022\u0022);\r\n}\r\nfunction sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\nrequire(b \u003C= a, errorMessage);\r\nuint256 c = a - b;\r\nreturn c;\r\n}\r\nfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\nif (a == 0) {\r\nreturn 0;\r\n}\r\nuint256 c = a * b;\r\nrequire(c / a == b, \u0022\u0022);\r\nreturn c;\r\n}\r\nfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\r\nreturn div(a, b, \u0022\u0022);\r\n}\r\nfunction div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\nrequire(b \u003E 0, errorMessage);\r\nuint256 c = a / b;\r\nreturn c;\r\n}\r\nfunction mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\nreturn mod(a, b, \u0022\u0022);\r\n}\r\nfunction mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\nrequire(b != 0, errorMessage);\r\nreturn a % b;\r\n}\r\n}\r\ncontract Swaps is Ownable, ISwaps, ReentrancyGuard {\r\nusing SafeMath for uint;\r\nuint public MAX_INVESTORS = 10;\r\nVault public vault;\r\nmapping(bytes32 =\u003E address) public baseOnlyInvestor;\r\nmapping(bytes32 =\u003E address) public owners;\r\nmapping(bytes32 =\u003E address) public baseAddresses;\r\nmapping(bytes32 =\u003E address) public quoteAddresses;\r\nmapping(bytes32 =\u003E uint) public expirationTimestamps;\r\nmapping(bytes32 =\u003E bool) public isSwapped;\r\nmapping(bytes32 =\u003E bool) public isCancelled;\r\nmapping(bytes32 =\u003E mapping(address =\u003E uint)) public limits;\r\nmapping(bytes32 =\u003E mapping(address =\u003E uint)) public raised;\r\nmapping(bytes32 =\u003E mapping(address =\u003E address[])) public investors;\r\nmapping(bytes32 =\u003E mapping(address =\u003E mapping(address =\u003E uint))) public investments;\r\nmapping(bytes32 =\u003E mapping(address =\u003E uint)) public minInvestments;\r\nmapping(bytes32 =\u003E address[]) public brokers;\r\nmapping(bytes32 =\u003E mapping(address =\u003E mapping(address =\u003E uint))) public brokerPercents;\r\nuint public myWishBasePercent;\r\nuint public myWishQuotePercent;\r\naddress public myWishAddress;\r\nmodifier onlyInvestor(bytes32 _id, address _token) {\r\nrequire(\r\n_isInvestor(_id, _token, msg.sender),\r\n\u0022\u0022\r\n);\r\n_;\r\n}\r\nmodifier onlyWhenVaultDefined() {\r\nrequire(address(vault) != address(0), \u0022\u0022);\r\n_;\r\n}\r\nmodifier onlyOrderOwner(bytes32 _id) {\r\nrequire(msg.sender == owners[_id], \u0022\u0022);\r\n_;\r\n}\r\nmodifier onlyWhenOrderExists(bytes32 _id) {\r\nrequire(owners[_id] != address(0), \u0022\u0022);\r\n_;\r\n}\r\nevent OrderCreated(\r\nbytes32 id,\r\naddress owner,\r\naddress baseAddress,\r\naddress quoteAddress,\r\nuint baseLimit,\r\nuint quoteLimit,\r\nuint expirationTimestamp,\r\naddress baseOnlyInvestor,\r\nuint minBaseInvestment,\r\nuint minQuoteInvestment,\r\naddress broker,\r\nuint brokerBasePercent,\r\nuint brokerQuotePercent\r\n);\r\nevent OrderCancelled(bytes32 id);\r\nevent Deposit(\r\nbytes32 id,\r\naddress token,\r\naddress user,\r\nuint amount,\r\nuint balance\r\n);\r\nevent Refund(bytes32 id, address token, address user, uint amount);\r\nevent OrderSwapped(bytes32 id, address byUser);\r\nevent SwapSend(bytes32 id, address token, address user, uint amount);\r\nevent BrokerSend(bytes32 id, address token, address broker, uint amount);\r\nevent MyWishAddressChange(\r\naddress oldMyWishAddress,\r\naddress newMyWishAddress\r\n);\r\nevent MyWishPercentsChange(\r\nuint oldBasePercent,\r\nuint oldQuotePercent,\r\nuint newBasePercent,\r\nuint newQuotePercent\r\n);\r\nfunction tokenFallback(address, uint, bytes calldata) external {}\r\nfunction createOrder(\r\nbytes32 _id,\r\naddress _baseAddress,\r\naddress _quoteAddress,\r\nuint _baseLimit,\r\nuint _quoteLimit,\r\nuint _expirationTimestamp,\r\naddress _baseOnlyInvestor,\r\nuint _minBaseInvestment,\r\nuint _minQuoteInvestment,\r\naddress _brokerAddress,\r\nuint _brokerBasePercent,\r\nuint _brokerQuotePercent\r\n) external nonReentrant onlyWhenVaultDefined {\r\nrequire(owners[_id] == address(0), \u0022\u0022);\r\nrequire(\r\n_baseAddress != _quoteAddress,\r\n\u0022\u0022\r\n);\r\nrequire(_baseLimit \u003E 0, \u0022\u0022);\r\nrequire(_quoteLimit \u003E 0, \u0022\u0022);\r\nrequire(\r\n_expirationTimestamp \u003E now,\r\n\u0022\u0022\r\n);\r\nrequire(\r\n_brokerBasePercent.add(myWishBasePercent) \u003C= 10000,\r\n\u0022\u0022\r\n);\r\nrequire(\r\n_brokerQuotePercent.add(myWishQuotePercent) \u003C= 10000,\r\n\u0022\u0022\r\n);\r\nowners[_id] = msg.sender;\r\nbaseAddresses[_id] = _baseAddress;\r\nquoteAddresses[_id] = _quoteAddress;\r\nexpirationTimestamps[_id] = _expirationTimestamp;\r\nlimits[_id][_baseAddress] = _baseLimit;\r\nlimits[_id][_quoteAddress] = _quoteLimit;\r\nbaseOnlyInvestor[_id] = _baseOnlyInvestor;\r\nminInvestments[_id][_baseAddress] = _minBaseInvestment;\r\nminInvestments[_id][_quoteAddress] = _minQuoteInvestment;\r\nif (_brokerAddress != address(0)) {\r\nbrokers[_id].push(_brokerAddress);\r\nbrokerPercents[_id][_baseAddress][_brokerAddress] = _brokerBasePercent;\r\nbrokerPercents[_id][_quoteAddress][_brokerAddress] = _brokerQuotePercent;\r\n}\r\nif (myWishAddress != address(0)) {\r\nbrokers[_id].push(myWishAddress);\r\nbrokerPercents[_id][_baseAddress][myWishAddress] = myWishBasePercent;\r\nbrokerPercents[_id][_quoteAddress][myWishAddress] = myWishQuotePercent;\r\n}\r\nemit OrderCreated(\r\n_id,\r\nmsg.sender,\r\n_baseAddress,\r\n_quoteAddress,\r\n_baseLimit,\r\n_quoteLimit,\r\n_expirationTimestamp,\r\n_baseOnlyInvestor,\r\n_minBaseInvestment,\r\n_minQuoteInvestment,\r\n_brokerAddress,\r\n_brokerBasePercent,\r\n_brokerQuotePercent\r\n);\r\n}\r\nfunction deposit(bytes32 _id, address _token, uint _amount)\r\nexternal\r\npayable\r\nnonReentrant\r\nonlyWhenVaultDefined\r\nonlyWhenOrderExists(_id)\r\n{\r\nif (_token == address(0)) {\r\nrequire(\r\nmsg.value == _amount,\r\n\u0022\u0022\r\n);\r\naddress(vault).transfer(msg.value);\r\n} else {\r\nrequire(msg.value == 0, \u0022\u0022);\r\nuint allowance = IERC20(_token).allowance(\r\nmsg.sender,\r\naddress(this)\r\n);\r\nrequire(\r\n_amount \u003C= allowance,\r\n\u0022\u0022\r\n);\r\nIERC20(_token).transferFrom(msg.sender, address(vault), _amount);\r\n}\r\n_deposit(_id, _token, msg.sender, _amount);\r\n}\r\nfunction cancel(bytes32 _id)\r\nexternal\r\nnonReentrant\r\nonlyOrderOwner(_id)\r\nonlyWhenVaultDefined\r\nonlyWhenOrderExists(_id)\r\n{\r\nrequire(!isCancelled[_id], \u0022\u0022);\r\nrequire(!isSwapped[_id], \u0022\u0022);\r\naddress[2] memory tokens = [baseAddresses[_id], quoteAddresses[_id]];\r\nfor (uint t = 0; t \u003C tokens.length; t\u002B\u002B) {\r\naddress token = tokens[t];\r\nfor (uint u = 0; u \u003C investors[_id][token].length; u\u002B\u002B) {\r\naddress user = investors[_id][token][u];\r\nuint userInvestment = investments[_id][token][user];\r\nvault.withdraw(token, user, userInvestment);\r\n}\r\n}\r\nisCancelled[_id] = true;\r\nemit OrderCancelled(_id);\r\n}\r\nfunction refund(bytes32 _id, address _token)\r\nexternal\r\nnonReentrant\r\nonlyInvestor(_id, _token)\r\nonlyWhenVaultDefined\r\nonlyWhenOrderExists(_id)\r\n{\r\nrequire(!isCancelled[_id], \u0022\u0022);\r\nrequire(!isSwapped[_id], \u0022\u0022);\r\naddress user = msg.sender;\r\nuint investment = investments[_id][_token][user];\r\nif (investment \u003E 0) {\r\ndelete investments[_id][_token][user];\r\n}\r\n_removeInvestor(investors[_id][_token], user);\r\nif (investment \u003E 0) {\r\nraised[_id][_token] = raised[_id][_token].sub(investment);\r\nvault.withdraw(_token, user, investment);\r\n}\r\nemit Refund(_id, _token, user, investment);\r\n}\r\nfunction setVault(Vault _vault) external onlyOwner {\r\nvault = _vault;\r\n}\r\nfunction setMyWishPercents(uint _basePercent, uint _quotePercent)\r\nexternal\r\nonlyOwner\r\n{\r\nrequire(_basePercent \u003C= 10000, \u0022\u0022);\r\nrequire(\r\n_quotePercent \u003C= 10000,\r\n\u0022\u0022\r\n);\r\nemit MyWishPercentsChange(\r\nmyWishBasePercent,\r\nmyWishQuotePercent,\r\n_basePercent,\r\n_quotePercent\r\n);\r\nmyWishBasePercent = _basePercent;\r\nmyWishQuotePercent = _quotePercent;\r\n}\r\nfunction setMyWishAddress(address _myWishAddress) external onlyOwner {\r\nemit MyWishAddressChange(myWishAddress, _myWishAddress);\r\nmyWishAddress = _myWishAddress;\r\n}\r\nfunction createKey(address _owner) public view returns (bytes32 result) {\r\nuint creationTime = now;\r\nresult = 0x0000000000000000000000000000000000000000000000000000000000000000;\r\nassembly {\r\nresult := or(result, mul(_owner, 0x1000000000000000000000000))\r\nresult := or(result, and(creationTime, 0xffffffffffffffffffffffff))\r\n}\r\n}\r\nfunction allBrokersBasePercent(bytes32 _id) public view returns (uint) {\r\nreturn _allBrokersPercent(baseAddresses[_id], _id);\r\n}\r\nfunction allBrokersQuotePercent(bytes32 _id) public view returns (uint) {\r\nreturn _allBrokersPercent(quoteAddresses[_id], _id);\r\n}\r\nfunction baseLimit(bytes32 _id) public view returns (uint) {\r\nreturn limits[_id][baseAddresses[_id]];\r\n}\r\nfunction quoteLimit(bytes32 _id) public view returns (uint) {\r\nreturn limits[_id][quoteAddresses[_id]];\r\n}\r\nfunction baseRaised(bytes32 _id) public view returns (uint) {\r\nreturn raised[_id][baseAddresses[_id]];\r\n}\r\nfunction quoteRaised(bytes32 _id) public view returns (uint) {\r\nreturn raised[_id][quoteAddresses[_id]];\r\n}\r\nfunction isBaseFilled(bytes32 _id) public view returns (bool) {\r\nreturn raised[_id][baseAddresses[_id]] == limits[_id][baseAddresses[_id]];\r\n}\r\nfunction isQuoteFilled(bytes32 _id) public view returns (bool) {\r\nreturn raised[_id][quoteAddresses[_id]] == limits[_id][quoteAddresses[_id]];\r\n}\r\nfunction baseInvestors(bytes32 _id) public view returns (address[] memory) {\r\nreturn investors[_id][baseAddresses[_id]];\r\n}\r\nfunction quoteInvestors(bytes32 _id)\r\npublic\r\nview\r\nreturns (address[] memory)\r\n{\r\nreturn investors[_id][quoteAddresses[_id]];\r\n}\r\nfunction baseUserInvestment(bytes32 _id, address _user)\r\npublic\r\nview\r\nreturns (uint)\r\n{\r\nreturn investments[_id][baseAddresses[_id]][_user];\r\n}\r\nfunction quoteUserInvestment(bytes32 _id, address _user)\r\npublic\r\nview\r\nreturns (uint)\r\n{\r\nreturn investments[_id][quoteAddresses[_id]][_user];\r\n}\r\nfunction orderBrokers(bytes32 _id) public view returns (address[] memory) {\r\nreturn brokers[_id];\r\n}\r\nfunction _allBrokersPercent(address _side, bytes32 _id)\r\ninternal\r\nview\r\nreturns (uint)\r\n{\r\nuint percents;\r\nfor (uint i = 0; i \u003C brokers[_id].length; i\u002B\u002B) {\r\naddress broker = brokers[_id][i];\r\nuint percent = brokerPercents[_id][_side][broker];\r\npercents = percents.add(percent);\r\n}\r\nreturn percents;\r\n}\r\nfunction _swap(bytes32 _id) internal {\r\nrequire(!isSwapped[_id], \u0022\u0022);\r\nrequire(!isCancelled[_id], \u0022\u0022);\r\nrequire(isBaseFilled(_id), \u0022\u0022);\r\nrequire(isQuoteFilled(_id), \u0022\u0022);\r\nrequire(now \u003C= expirationTimestamps[_id], \u0022\u0022);\r\n_distribute(_id, baseAddresses[_id], quoteAddresses[_id]);\r\n_distribute(_id, quoteAddresses[_id], baseAddresses[_id]);\r\nisSwapped[_id] = true;\r\nemit OrderSwapped(_id, msg.sender);\r\n}\r\nfunction _distribute(bytes32 _id, address _aSide, address _bSide) internal {\r\nuint brokersPercent;\r\nfor (uint i = 0; i \u003C brokers[_id].length; i\u002B\u002B) {\r\naddress broker = brokers[_id][i];\r\nuint percent = brokerPercents[_id][_bSide][broker];\r\nbrokersPercent = brokersPercent.add(percent);\r\n}\r\nuint toPayBrokers = raised[_id][_bSide].mul(brokersPercent).div(10000);\r\nuint toPayInvestors = raised[_id][_bSide].sub(toPayBrokers);\r\nuint remainder = toPayInvestors;\r\nfor (uint i = 0; i \u003C investors[_id][_aSide].length; i\u002B\u002B) {\r\naddress user = investors[_id][_aSide][i];\r\nuint toPay;\r\n// last\r\nif (i \u002B 1 == investors[_id][_aSide].length) {\r\ntoPay = remainder;\r\n} else {\r\nuint aSideRaised = raised[_id][_aSide];\r\nuint userInvestment = investments[_id][_aSide][user];\r\ntoPay = userInvestment.mul(toPayInvestors).div(aSideRaised);\r\nremainder = remainder.sub(toPay);\r\n}\r\nvault.withdraw(_bSide, user, toPay);\r\nemit SwapSend(_id, _bSide, user, toPay);\r\n}\r\nremainder = toPayBrokers;\r\nfor (uint i = 0; i \u003C brokers[_id].length; i\u002B\u002B) {\r\naddress broker = brokers[_id][i];\r\nuint toPay;\r\nif (i \u002B 1 == brokers[_id].length) {\r\ntoPay = remainder;\r\n} else {\r\nuint percent = brokerPercents[_id][_bSide][broker];\r\ntoPay = toPayBrokers.mul(percent).div(brokersPercent);\r\nremainder = remainder.sub(toPay);\r\n}\r\nvault.withdraw(_bSide, broker, toPay);\r\nemit BrokerSend(_id, _bSide, broker, toPay);\r\n}\r\n}\r\nfunction _removeInvestor(address[] storage _array, address _investor)\r\ninternal\r\n{\r\nuint idx = _array.length - 1;\r\nfor (uint i = 0; i \u003C _array.length - 1; i\u002B\u002B) {\r\nif (_array[i] == _investor) {\r\nidx = i;\r\nbreak;\r\n}\r\n}\r\n_array[idx] = _array[_array.length - 1];\r\ndelete _array[_array.length - 1];\r\n_array.length--;\r\n}\r\nfunction _deposit(bytes32 _id, address _token, address _from, uint _amount)\r\ninternal\r\n{\r\nuint amount = _amount;\r\nrequire(\r\nbaseAddresses[_id] == _token || quoteAddresses[_id] == _token,\r\n\u0022\u0022\r\n);\r\nrequire(\r\nraised[_id][_token] \u003C limits[_id][_token],\r\n\u0022\u0022\r\n);\r\nrequire(now \u003C= expirationTimestamps[_id], \u0022\u0022);\r\nif (baseAddresses[_id] == _token \u0026\u0026 baseOnlyInvestor[_id] != address(\r\n0\r\n)) {\r\nrequire(\r\nmsg.sender == baseOnlyInvestor[_id],\r\n\u0022\u0022\r\n);\r\n}\r\nif (limits[_id][_token].sub(\r\nraised[_id][_token]\r\n) \u003E minInvestments[_id][_token]) {\r\nrequire(\r\n_amount \u003E= minInvestments[_id][_token],\r\n\u0022\u0022\r\n);\r\n}\r\nif (!_isInvestor(_id, _token, _from)) {\r\nrequire(\r\ninvestors[_id][_token].length \u003C MAX_INVESTORS,\r\n\u0022\u0022\r\n);\r\ninvestors[_id][_token].push(_from);\r\n}\r\nuint raisedWithOverflow = raised[_id][_token].add(amount);\r\nif (raisedWithOverflow \u003E limits[_id][_token]) {\r\nuint overflow = raisedWithOverflow.sub(limits[_id][_token]);\r\nvault.withdraw(_token, _from, overflow);\r\namount = amount.sub(overflow);\r\n}\r\ninvestments[_id][_token][_from] = investments[_id][_token][_from].add(\r\namount\r\n);\r\nraised[_id][_token] = raised[_id][_token].add(amount);\r\nemit Deposit(\r\n_id,\r\n_token,\r\n_from,\r\namount,\r\ninvestments[_id][_token][_from]\r\n);\r\nif (isBaseFilled(_id) \u0026\u0026 isQuoteFilled(_id)) {\r\n_swap(_id);\r\n}\r\n}\r\nfunction _isInvestor(bytes32 _id, address _token, address _who)\r\ninternal\r\nview\r\nreturns (bool)\r\n{\r\nreturn investments[_id][_token][_who] \u003E 0;\r\n}\r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022raised\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022myWishBasePercent\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022isSwapped\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022quoteAddresses\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022expirationTimestamps\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022baseOnlyInvestor\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022myWishAddress\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_id\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022quoteInvestors\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address[]\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_id\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022name\u0022:\u0022_token\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022refund\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_myWishAddress\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022setMyWishAddress\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_id\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022quoteRaised\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022limits\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_vault\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022setVault\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_id\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022isQuoteFilled\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022MAX_INVESTORS\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022renounceOwnership\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022myWishQuotePercent\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022brokers\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022investors\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022minInvestments\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_id\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022name\u0022:\u0022_baseAddress\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_quoteAddress\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_baseLimit\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_quoteLimit\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_expirationTimestamp\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_baseOnlyInvestor\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_minBaseInvestment\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_minQuoteInvestment\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_brokerAddress\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_brokerBasePercent\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_brokerQuotePercent\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022createOrder\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022owner\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022isOwner\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022isCancelled\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_basePercent\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_quotePercent\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022setMyWishPercents\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_id\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022allBrokersBasePercent\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_id\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022baseLimit\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_id\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022baseInvestors\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address[]\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_id\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022baseRaised\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bytes\u0022}],\u0022name\u0022:\u0022tokenFallback\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022brokerPercents\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_id\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022quoteLimit\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_id\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022cancel\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022createKey\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022result\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_id\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022name\u0022:\u0022_user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022baseUserInvestment\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022investments\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_id\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022isBaseFilled\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_id\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022name\u0022:\u0022_user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022quoteUserInvestment\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_id\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022name\u0022:\u0022_token\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022deposit\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022baseAddresses\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022transferOwnership\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_id\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022allBrokersQuotePercent\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_id\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022orderBrokers\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address[]\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022owners\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022vault\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022id\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022baseAddress\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022quoteAddress\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022baseLimit\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022quoteLimit\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022expirationTimestamp\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022baseOnlyInvestor\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022minBaseInvestment\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022minQuoteInvestment\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022broker\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022brokerBasePercent\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022brokerQuotePercent\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022OrderCreated\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022id\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022OrderCancelled\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022id\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022token\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022balance\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Deposit\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022id\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022token\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Refund\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022id\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022byUser\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022OrderSwapped\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022id\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022token\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022SwapSend\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022id\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022token\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022broker\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022BrokerSend\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022oldMyWishAddress\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022newMyWishAddress\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022MyWishAddressChange\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022oldBasePercent\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022oldQuotePercent\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022newBasePercent\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022newQuotePercent\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022MyWishPercentsChange\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022previousOwner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022OwnershipTransferred\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"Swaps","CompilerVersion":"v0.5.7\u002Bcommit.6da8b019","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://9d1a01e655b9e7e1fe7215b20a9199843e6ec6faf8d970e648285f2300c763ce"}]