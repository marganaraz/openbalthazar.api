[{"SourceCode":"pragma solidity ^0.5.8;\r\n\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(\r\n            msg.sender == owner,\r\n            \u0022The function can only be called by the owner\u0022\r\n        );\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        if (newOwner != address(0)) {\r\n            owner = newOwner;\r\n        }\r\n    }\r\n}\r\n\r\ncontract DepositLockerInterface {\r\n    function slash(address _depositorToBeSlashed) public;\r\n\r\n}\r\n\r\ncontract DepositLocker is DepositLockerInterface, Ownable {\r\n    bool public initialized = false;\r\n    bool public deposited = false;\r\n\r\n    /* We maintain two special addresses:\r\n       - the slasher, that is allowed to call the slash function\r\n       - the depositorsProxy that registers depositors and deposits a value for\r\n         all of the registered depositors with the deposit function. In our case\r\n         this will be the auction contract.\r\n    */\r\n\r\n    address public slasher;\r\n    address public depositorsProxy;\r\n    uint public releaseTimestamp;\r\n\r\n    mapping(address =\u003E bool) public canWithdraw;\r\n    uint numberOfDepositors = 0;\r\n    uint valuePerDepositor;\r\n\r\n    event DepositorRegistered(\r\n        address depositorAddress,\r\n        uint numberOfDepositors\r\n    );\r\n    event Deposit(\r\n        uint totalValue,\r\n        uint valuePerDepositor,\r\n        uint numberOfDepositors\r\n    );\r\n    event Withdraw(address withdrawer, uint value);\r\n    event Slash(address slashedDepositor, uint slashedValue);\r\n\r\n    modifier isInitialised() {\r\n        require(initialized, \u0022The contract was not initialized.\u0022);\r\n        _;\r\n    }\r\n\r\n    modifier isDeposited() {\r\n        require(deposited, \u0022no deposits yet\u0022);\r\n        _;\r\n    }\r\n\r\n    modifier isNotDeposited() {\r\n        require(!deposited, \u0022already deposited\u0022);\r\n        _;\r\n    }\r\n\r\n    modifier onlyDepositorsProxy() {\r\n        require(\r\n            msg.sender == depositorsProxy,\r\n            \u0022Only the depositorsProxy can call this function.\u0022\r\n        );\r\n        _;\r\n    }\r\n\r\n    function() external {}\r\n\r\n    function init(\r\n        uint _releaseTimestamp,\r\n        address _slasher,\r\n        address _depositorsProxy\r\n    ) external onlyOwner {\r\n        require(!initialized, \u0022The contract is already initialised.\u0022);\r\n        require(\r\n            _releaseTimestamp \u003E now,\r\n            \u0022The release timestamp must be in the future\u0022\r\n        );\r\n\r\n        releaseTimestamp = _releaseTimestamp;\r\n        slasher = _slasher;\r\n        depositorsProxy = _depositorsProxy;\r\n        initialized = true;\r\n        owner = address(0);\r\n    }\r\n\r\n    function registerDepositor(address _depositor)\r\n        public\r\n        isInitialised\r\n        isNotDeposited\r\n        onlyDepositorsProxy\r\n    {\r\n        require(\r\n            canWithdraw[_depositor] == false,\r\n            \u0022can only register Depositor once\u0022\r\n        );\r\n        canWithdraw[_depositor] = true;\r\n        numberOfDepositors \u002B= 1;\r\n        emit DepositorRegistered(_depositor, numberOfDepositors);\r\n    }\r\n\r\n    function deposit(uint _valuePerDepositor)\r\n        public\r\n        payable\r\n        isInitialised\r\n        isNotDeposited\r\n        onlyDepositorsProxy\r\n    {\r\n        require(numberOfDepositors \u003E 0, \u0022no depositors\u0022);\r\n        require(_valuePerDepositor \u003E 0, \u0022_valuePerDepositor must be positive\u0022);\r\n\r\n        uint depositAmount = numberOfDepositors * _valuePerDepositor;\r\n        require(\r\n            _valuePerDepositor == depositAmount / numberOfDepositors,\r\n            \u0022Overflow in depositAmount calculation\u0022\r\n        );\r\n        require(\r\n            msg.value == depositAmount,\r\n            \u0022the deposit does not match the required value\u0022\r\n        );\r\n\r\n        valuePerDepositor = _valuePerDepositor;\r\n        deposited = true;\r\n        emit Deposit(msg.value, valuePerDepositor, numberOfDepositors);\r\n    }\r\n\r\n    function withdraw() public isInitialised isDeposited {\r\n        require(\r\n            now \u003E= releaseTimestamp,\r\n            \u0022The deposit cannot be withdrawn yet.\u0022\r\n        );\r\n        require(canWithdraw[msg.sender], \u0022cannot withdraw from sender\u0022);\r\n\r\n        canWithdraw[msg.sender] = false;\r\n        msg.sender.transfer(valuePerDepositor);\r\n        emit Withdraw(msg.sender, valuePerDepositor);\r\n    }\r\n\r\n    function slash(address _depositorToBeSlashed)\r\n        public\r\n        isInitialised\r\n        isDeposited\r\n    {\r\n        require(\r\n            msg.sender == slasher,\r\n            \u0022Only the slasher can call this function.\u0022\r\n        );\r\n        require(canWithdraw[_depositorToBeSlashed], \u0022cannot slash address\u0022);\r\n        canWithdraw[_depositorToBeSlashed] = false;\r\n        address(0).transfer(valuePerDepositor);\r\n        emit Slash(_depositorToBeSlashed, valuePerDepositor);\r\n    }\r\n}\r\n\r\ncontract ValidatorAuction is Ownable {\r\n    // auction constants set on deployment\r\n    uint public auctionDurationInDays;\r\n    uint public startPrice;\r\n    uint public minimalNumberOfParticipants;\r\n    uint public maximalNumberOfParticipants;\r\n\r\n    AuctionState public auctionState;\r\n    DepositLocker public depositLocker;\r\n    mapping(address =\u003E bool) public whitelist;\r\n    mapping(address =\u003E uint) public bids;\r\n    address[] public bidders;\r\n    uint public startTime;\r\n    uint public closeTime;\r\n    uint public lowestSlotPrice;\r\n\r\n    event BidSubmitted(\r\n        address bidder,\r\n        uint bidValue,\r\n        uint slotPrice,\r\n        uint timestamp\r\n    );\r\n    event AddressWhitelisted(address whitelistedAddress);\r\n    event AuctionDeployed(\r\n        uint startPrice,\r\n        uint auctionDurationInDays,\r\n        uint minimalNumberOfParticipants,\r\n        uint maximalNumberOfParticipants\r\n    );\r\n    event AuctionStarted(uint startTime);\r\n    event AuctionDepositPending(\r\n        uint closeTime,\r\n        uint lowestSlotPrice,\r\n        uint totalParticipants\r\n    );\r\n    event AuctionEnded(\r\n        uint closeTime,\r\n        uint lowestSlotPrice,\r\n        uint totalParticipants\r\n    );\r\n    event AuctionFailed(uint closeTime, uint numberOfBidders);\r\n\r\n    enum AuctionState {\r\n        Deployed,\r\n        Started,\r\n        DepositPending, /* all slots sold, someone needs to call depositBids */\r\n        Ended,\r\n        Failed\r\n    }\r\n\r\n    modifier stateIs(AuctionState state) {\r\n        require(\r\n            auctionState == state,\r\n            \u0022Auction is not in the proper state for desired action.\u0022\r\n        );\r\n        _;\r\n    }\r\n\r\n    constructor(\r\n        uint _startPriceInWei,\r\n        uint _auctionDurationInDays,\r\n        uint _minimalNumberOfParticipants,\r\n        uint _maximalNumberOfParticipants,\r\n        DepositLocker _depositLocker\r\n    ) public {\r\n        require(\r\n            _auctionDurationInDays \u003E 0,\r\n            \u0022Duration of auction must be greater than 0\u0022\r\n        );\r\n        require(\r\n            _auctionDurationInDays \u003C 100 * 365,\r\n            \u0022Duration of auction must be less than 100 years\u0022\r\n        );\r\n        require(\r\n            _minimalNumberOfParticipants \u003E 0,\r\n            \u0022Minimal number of participants must be greater than 0\u0022\r\n        );\r\n        require(\r\n            _maximalNumberOfParticipants \u003E 0,\r\n            \u0022Number of participants must be greater than 0\u0022\r\n        );\r\n        require(\r\n            _minimalNumberOfParticipants \u003C= _maximalNumberOfParticipants,\r\n            \u0022The minimal number of participants must be smaller than the maximal number of participants.\u0022\r\n        );\r\n        require(\r\n            // To prevent overflows\r\n            _startPriceInWei \u003C 10 ** 30,\r\n            \u0022The start price is too big.\u0022\r\n        );\r\n\r\n        startPrice = _startPriceInWei;\r\n        auctionDurationInDays = _auctionDurationInDays;\r\n        maximalNumberOfParticipants = _maximalNumberOfParticipants;\r\n        minimalNumberOfParticipants = _minimalNumberOfParticipants;\r\n        depositLocker = _depositLocker;\r\n\r\n        lowestSlotPrice = ~uint(0);\r\n\r\n        emit AuctionDeployed(\r\n            startPrice,\r\n            auctionDurationInDays,\r\n            _minimalNumberOfParticipants,\r\n            _maximalNumberOfParticipants\r\n        );\r\n        auctionState = AuctionState.Deployed;\r\n    }\r\n\r\n    function() external payable stateIs(AuctionState.Started) {\r\n        bid();\r\n    }\r\n\r\n    function bid() public payable stateIs(AuctionState.Started) {\r\n        require(now \u003E startTime, \u0022It is too early to bid.\u0022);\r\n        require(\r\n            now \u003C= startTime \u002B auctionDurationInDays * 1 days,\r\n            \u0022Auction has already ended.\u0022\r\n        );\r\n        uint slotPrice = currentPrice();\r\n        require(\r\n            msg.value \u003E= slotPrice,\r\n            \u0022Not enough ether was provided for bidding.\u0022\r\n        );\r\n        require(whitelist[msg.sender], \u0022The sender is not whitelisted.\u0022);\r\n        require(!isSenderContract(), \u0022The sender cannot be a contract.\u0022);\r\n        require(\r\n            bidders.length \u003C maximalNumberOfParticipants,\r\n            \u0022The limit of participants has already been reached.\u0022\r\n        );\r\n        require(bids[msg.sender] == 0, \u0022The sender has already bid.\u0022);\r\n\r\n        bids[msg.sender] = msg.value;\r\n        bidders.push(msg.sender);\r\n        if (slotPrice \u003C lowestSlotPrice) {\r\n            lowestSlotPrice = slotPrice;\r\n        }\r\n\r\n        depositLocker.registerDepositor(msg.sender);\r\n        emit BidSubmitted(msg.sender, msg.value, slotPrice, now);\r\n\r\n        if (bidders.length == maximalNumberOfParticipants) {\r\n            transitionToDepositPending();\r\n        }\r\n    }\r\n\r\n    function startAuction() public onlyOwner stateIs(AuctionState.Deployed) {\r\n        require(\r\n            depositLocker.initialized(),\r\n            \u0022The deposit locker contract is not initialized\u0022\r\n        );\r\n\r\n        auctionState = AuctionState.Started;\r\n        startTime = now;\r\n\r\n        emit AuctionStarted(now);\r\n    }\r\n\r\n    function depositBids() public stateIs(AuctionState.DepositPending) {\r\n        auctionState = AuctionState.Ended;\r\n        depositLocker.deposit.value(lowestSlotPrice * bidders.length)(\r\n            lowestSlotPrice\r\n        );\r\n        emit AuctionEnded(closeTime, lowestSlotPrice, bidders.length);\r\n    }\r\n\r\n    function closeAuction() public stateIs(AuctionState.Started) {\r\n        require(\r\n            now \u003E startTime \u002B auctionDurationInDays * 1 days,\r\n            \u0022The auction cannot be closed this early.\u0022\r\n        );\r\n        assert(bidders.length \u003C maximalNumberOfParticipants);\r\n\r\n        if (bidders.length \u003E= minimalNumberOfParticipants) {\r\n            transitionToDepositPending();\r\n        } else {\r\n            transitionToAuctionFailed();\r\n        }\r\n    }\r\n\r\n    function addToWhitelist(address[] memory addressesToWhitelist)\r\n        public\r\n        onlyOwner\r\n        stateIs(AuctionState.Deployed)\r\n    {\r\n        for (uint32 i = 0; i \u003C addressesToWhitelist.length; i\u002B\u002B) {\r\n            whitelist[addressesToWhitelist[i]] = true;\r\n            emit AddressWhitelisted(addressesToWhitelist[i]);\r\n        }\r\n    }\r\n\r\n    function withdraw() public {\r\n        require(\r\n            auctionState == AuctionState.Ended ||\r\n                auctionState == AuctionState.Failed,\r\n            \u0022You cannot withdraw before the auction is ended or it failed.\u0022\r\n        );\r\n\r\n        if (auctionState == AuctionState.Ended) {\r\n            withdrawAfterAuctionEnded();\r\n        } else if (auctionState == AuctionState.Failed) {\r\n            withdrawAfterAuctionFailed();\r\n        } else {\r\n            assert(false); // Should be unreachable\r\n        }\r\n    }\r\n\r\n    function currentPrice()\r\n        public\r\n        view\r\n        stateIs(AuctionState.Started)\r\n        returns (uint)\r\n    {\r\n        assert(now \u003E= startTime);\r\n        uint secondsSinceStart = (now - startTime);\r\n        return priceAtElapsedTime(secondsSinceStart);\r\n    }\r\n\r\n    function priceAtElapsedTime(uint secondsSinceStart)\r\n        public\r\n        view\r\n        returns (uint)\r\n    {\r\n        // To prevent overflows\r\n        require(\r\n            secondsSinceStart \u003C 100 * 365 days,\r\n            \u0022Times longer than 100 years are not supported.\u0022\r\n        );\r\n        uint msSinceStart = 1000 * secondsSinceStart;\r\n        uint relativeAuctionTime = msSinceStart / auctionDurationInDays;\r\n        uint decayDivisor = 746571428571;\r\n        uint decay = relativeAuctionTime ** 3 / decayDivisor;\r\n        uint price = startPrice *\r\n            (1 \u002B relativeAuctionTime) /\r\n            (1 \u002B relativeAuctionTime \u002B decay);\r\n        return price;\r\n    }\r\n\r\n    function withdrawAfterAuctionEnded() internal stateIs(AuctionState.Ended) {\r\n        require(\r\n            bids[msg.sender] \u003E lowestSlotPrice,\r\n            \u0022The sender has nothing to withdraw.\u0022\r\n        );\r\n\r\n        uint valueToWithdraw = bids[msg.sender] - lowestSlotPrice;\r\n        assert(valueToWithdraw \u003C= bids[msg.sender]);\r\n\r\n        bids[msg.sender] = lowestSlotPrice;\r\n\r\n        msg.sender.transfer(valueToWithdraw);\r\n    }\r\n\r\n    function withdrawAfterAuctionFailed()\r\n        internal\r\n        stateIs(AuctionState.Failed)\r\n    {\r\n        require(bids[msg.sender] \u003E 0, \u0022The sender has nothing to withdraw.\u0022);\r\n\r\n        uint valueToWithdraw = bids[msg.sender];\r\n\r\n        bids[msg.sender] = 0;\r\n\r\n        msg.sender.transfer(valueToWithdraw);\r\n    }\r\n\r\n    function transitionToDepositPending()\r\n        internal\r\n        stateIs(AuctionState.Started)\r\n    {\r\n        auctionState = AuctionState.DepositPending;\r\n        closeTime = now;\r\n        emit AuctionDepositPending(closeTime, lowestSlotPrice, bidders.length);\r\n    }\r\n\r\n    function transitionToAuctionFailed()\r\n        internal\r\n        stateIs(AuctionState.Started)\r\n    {\r\n        auctionState = AuctionState.Failed;\r\n        closeTime = now;\r\n        emit AuctionFailed(closeTime, bidders.length);\r\n    }\r\n\r\n    function isSenderContract() internal view returns (bool isContract) {\r\n        uint32 size;\r\n        address sender = msg.sender;\r\n        // solium-disable-next-line security/no-inline-assembly\r\n        assembly {\r\n            size := extcodesize(sender)\r\n        }\r\n        return (size \u003E 0);\r\n    }\r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022lowestSlotPrice\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022bid\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022closeAuction\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022withdraw\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022depositBids\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022maximalNumberOfParticipants\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022auctionDurationInDays\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022closeTime\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022bids\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022startAuction\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022secondsSinceStart\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022priceAtElapsedTime\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022startTime\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022addressesToWhitelist\u0022,\u0022type\u0022:\u0022address[]\u0022}],\u0022name\u0022:\u0022addToWhitelist\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022auctionState\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint8\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022owner\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022whitelist\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022currentPrice\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022depositLocker\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022bidders\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022startPrice\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022transferOwnership\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022minimalNumberOfParticipants\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[{\u0022name\u0022:\u0022_startPriceInWei\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_auctionDurationInDays\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_minimalNumberOfParticipants\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_maximalNumberOfParticipants\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_depositLocker\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022fallback\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022bidder\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022bidValue\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022slotPrice\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022timestamp\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022BidSubmitted\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022whitelistedAddress\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022AddressWhitelisted\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022startPrice\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022auctionDurationInDays\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022minimalNumberOfParticipants\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022maximalNumberOfParticipants\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022AuctionDeployed\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022startTime\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022AuctionStarted\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022closeTime\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022lowestSlotPrice\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022totalParticipants\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022AuctionDepositPending\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022closeTime\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022lowestSlotPrice\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022totalParticipants\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022AuctionEnded\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022closeTime\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022numberOfBidders\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022AuctionFailed\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"ValidatorAuction","CompilerVersion":"v0.5.8\u002Bcommit.23d335f2","OptimizationUsed":"1","Runs":"100","ConstructorArguments":"00000000000000000000000000000000000000000000021e19e0c9bab2400000000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000037000000000000000000000000d56a61ad1b16f1f0326785902593c7adbf733e34","Library":"","SwarmSource":"bzzr://f025cff7210cac5fcc23120e5900e104ad7dbd8f5d92c0b8a6288f0d5ca95057"}]