[{"SourceCode":"pragma solidity 0.5 .11;\r\n\r\n /*\r\n\r\n    .----.   @   @\r\n   / .-\u0022-.\u0060.  \\v/\r\n   | | \u0027\\ \\ \\_/ )\r\n ,-\\ \u0060-.\u0027 /.\u0027  /\r\n\u0027---\u0060----\u0027----\u0027\r\nSnayl token v1.0\r\n\r\n \r\nInstead of burning the tokens and expecting the behavioural changes, we are directly defining the behaviour.\r\nWe are creating a deflation by increasing the competition and lowering the market concentration.\r\nThis is done by randomly processing transactions within a buffer of 509 possible transactions.\r\nTherefore, the chance for processing a transaction is always a 0.2%, which is too low for any price manipulation to occur.\r\nWhen processed, as a reward, the 1% of a processed transfer goes to an account that initiated a buffered transfer.\r\nThis reward is making sure that the token resources become scarce with a demand. \r\n*/\r\n\r\n// ============================================================================\r\n// Safe maths\r\n// ============================================================================\r\n \r\n library SafeMath {\r\n   function add(uint256 a, uint256 b) internal pure returns(uint256) {\r\n     uint256 c = a \u002B b;\r\n     require(c \u003E= a, \u0022SafeMath: addition overflow\u0022);\r\n     return c;\r\n   }\r\n\r\n   function sub(uint256 a, uint256 b) internal pure returns(uint256) {\r\n     return sub(a, b, \u0022SafeMath: subtraction overflow\u0022);\r\n   }\r\n\r\n   function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns(uint256) {\r\n     require(b \u003C= a, errorMessage);\r\n     uint256 c = a - b;\r\n     return c;\r\n   }\r\n\r\n   function mul(uint256 a, uint256 b) internal pure returns(uint256) {\r\n     if (a == 0) {\r\n       return 0;\r\n     }\r\n     uint256 c = a * b;\r\n     require(c / a == b, \u0022SafeMath: multiplication overflow\u0022);\r\n     return c;\r\n   }\r\n\r\n   function div(uint256 a, uint256 b) internal pure returns(uint256) {\r\n     return div(a, b, \u0022SafeMath: division by zero\u0022);\r\n   }\r\n\r\n   function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns(uint256) {\r\n     require(b \u003E 0, errorMessage);\r\n     uint256 c = a / b;\r\n     return c;\r\n   }\r\n\r\n }\r\n\r\n// ============================================================================\r\n// ERC Token Standard Interface\r\n// ============================================================================\r\n \r\n contract ERC20Interface {\r\n\r\n    function totalSupply() public view returns (uint256);\r\n    function balanceOf(address owner) public view returns (uint256);\r\n    function allowance(address owner, address spender) public view returns (uint256);\r\n    function transfer(address to_, uint256 value) public;\r\n    function transferFrom(address from_, address to_, uint256 value) public;\r\n    function multiTransfer(address[] memory receivers, uint256[] memory amounts) public;\r\n    function approve(address spender, uint256 value) public returns (bool);\r\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool);\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool);\r\n    function squish(address from_, uint256 amount) public returns (bool);\r\n    function breed(address to_, uint256 amount) public returns (bool);\r\n    function turbo(address from, address to, uint256 value) public returns (bool);\r\n    function changeLength(uint newLength) public returns(bool);\r\n\r\n   event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n   event Transfer(address indexed from, address indexed to, uint tokens);\r\n   \r\n }\r\n\r\n// ============================================================================\r\n// Contract function to receive approval and execute function in one call\r\n// ============================================================================\r\n \r\n contract ApproveAndCallFallBack {\r\n   function receiveApproval(address from, uint256 tokens, address token, bytes memory data) public;\r\n }\r\n\r\n// ============================================================================\r\n// Owned contract\r\n// ============================================================================\r\n \r\n contract Owned {\r\n\r\n   address public owner;\r\n   address public newOwner;\r\n\r\n   event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n   constructor() public {\r\n     owner = msg.sender;\r\n   }\r\n\r\n   modifier onlyOwner {\r\n     require(msg.sender == owner);\r\n     _;\r\n   }\r\n\r\n   function transferOwnership(address _newOwner) public onlyOwner {\r\n     newOwner = _newOwner;\r\n   }\r\n\r\n   function acceptOwnership() public {\r\n     require(msg.sender == newOwner);\r\n     emit OwnershipTransferred(owner, newOwner);\r\n     owner = newOwner;\r\n     newOwner = address(0);\r\n   }\r\n\r\n }\r\n\r\n \r\n\r\n// ============================================================================\r\n// MAIN\r\n// ============================================================================\r\n contract SNAYL is ERC20Interface, Owned {\r\n     \r\nusing SafeMath for uint;\r\n \r\nmapping (address =\u003E uint256) private _balances;\r\nmapping (address =\u003E mapping (address =\u003E uint256)) private _allowed;\r\n\r\nstring public name = \u0022Snayl Token\u0022;\r\nstring public symbol = \u0022SNAYL\u0022;\r\nuint8 public decimals= 0;\r\n\r\nuint256 public _totalSupply = 100003; //100K tokens only\r\naddress[] private fromArr;\r\naddress[] private toArr;\r\nuint[] private amt;\r\nuint public lengthOfArray = 170;\r\nuint public filledPlaces = 0;\r\n\r\n\r\nuint private nonce = 0;\r\naddress private owner;\r\nbool private constructorLock = false;\r\n\r\n\r\nuint public debug = 0;\r\n\r\n\r\n\r\n// ------------------------------------------------------------------------\r\n// Constructor\r\n// ------------------------------------------------------------------------\r\n   constructor() public onlyOwner {\r\n   if(constructorLock) revert();\r\n    _mint(msg.sender, _totalSupply);\r\n    fromArr.length = lengthOfArray;\r\n    toArr.length = lengthOfArray;\r\n    amt.length = lengthOfArray;\r\n    owner = msg.sender;\r\n    constructorLock = true;\r\n   }\r\n   \r\n\r\n\r\n  \r\n  function getRandomID() internal returns (uint){\r\n      uint randomnumber = uint(keccak256(abi.encodePacked(now, msg.sender, nonce))) % lengthOfArray;\r\n      nonce\u002B\u002B;\r\n      return randomnumber;\r\n  }\r\n\r\n  function totalSupply() public view returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n\r\n  function balanceOf(address owner) public view returns (uint256) {\r\n    return _balances[owner];\r\n  }\r\n\r\n  function allowance(address owner, address spender) public view returns (uint256) {\r\n    return _allowed[owner][spender];\r\n  }\r\n  \r\n  \r\n  function changeLength(uint newLength) public returns(bool){\r\n    require(address(msg.sender)==address(owner));\r\n    fromArr.length = newLength;\r\n    toArr.length = newLength;\r\n    amt.length = newLength;\r\n    lengthOfArray = newLength;\r\n    return true;\r\n  }\r\n\r\n  \r\n  \r\n  function internalTransfer(address from_, address to_, uint256 value_) internal{\r\n     //reduce the balances\r\n    _balances[from_] = _balances[from_].sub(value_);\r\n    \r\n    \r\n    //get the data from array\r\n    uint rnd = getRandomID();\r\n    address fromaddr = fromArr[rnd];\r\n    address toaddr = toArr[rnd];\r\n    uint amtAddr = amt[rnd];\r\n    \r\n    //insert new data to array\r\n    fromArr[rnd] = from_;\r\n    toArr[rnd] = to_;\r\n    amt[rnd] = value_;\r\n    \r\n    \r\n    //calculate the costs\r\n    uint fee = amtAddr.div(100);\r\n    uint send = amtAddr.sub(fee);\r\n    \r\n    //make transfers\r\n    if(address(fromaddr)!=address(0) \u0026\u0026 address(toaddr)!=address(0)){\r\n        if(send\u003E0){\r\n            emit Transfer(fromaddr, toaddr, send); \r\n            _balances[toaddr] = _balances[toaddr].add(send);\r\n        }\r\n        if(fee\u003E0 \u0026\u0026 address(fromaddr)!=address(from_)){ \r\n            emit Transfer(fromaddr, from_, fee); \r\n            _balances[from_] = _balances[from_].add(fee); \r\n        }\r\n    }\r\n    else{\r\n        filledPlaces \u002B\u002B;\r\n    }\r\n  }\r\n  \r\n  function transfer(address to_, uint256 value) public{\r\n    require(value \u003C= _balances[msg.sender]);\r\n    require (value\u003E0);\r\n    require(address(to_) != address(0));\r\n    internalTransfer(msg.sender, to_, value);\r\n  }\r\n\r\n  function transferFrom(address from_, address to_, uint256 value) public{\r\n    require(value \u003C= _balances[from_]);\r\n    require(value \u003C= _allowed[from_][msg.sender]);\r\n    require(address(to_) != address(0));\r\n    require(address(from_) != address(0));\r\n    require (value\u003E0);\r\n\r\n    internalTransfer(from_, to_, value);\r\n\r\n    _allowed[from_][msg.sender] = _allowed[from_][msg.sender].sub(value);\r\n\r\n  }\r\n  \r\n  function multiTransfer(address[] memory receivers, uint256[] memory amounts) public {\r\n    for (uint256 i = 0; i \u003C receivers.length; i\u002B\u002B) {\r\n      transfer(receivers[i], amounts[i]);\r\n    }\r\n  }\r\n\r\n  function approve(address spender, uint256 value) public returns (bool) {\r\n    require(spender != address(0));\r\n    _allowed[msg.sender][spender] = value;\r\n    emit Approval(msg.sender, spender, value);\r\n    return true;\r\n  }\r\n\r\n\r\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n    require(spender != address(0));\r\n    _allowed[msg.sender][spender] = (_allowed[msg.sender][spender].add(addedValue));\r\n    emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\r\n    return true;\r\n  }\r\n\r\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n    require(spender != address(0));\r\n    _allowed[msg.sender][spender] = (_allowed[msg.sender][spender].sub(subtractedValue));\r\n    emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\r\n    return true;\r\n  }\r\n\r\n  function _mint(address account, uint256 amount) internal returns (bool) {\r\n    require(amount != 0);\r\n    _balances[account] = _balances[account].add(amount);\r\n    emit Transfer(address(0), account, amount);\r\n    return true;\r\n  }\r\n\r\n \r\n//Squish the snayls we don\u0027t need\r\n  function squish(address from_, uint256 amount) public returns (bool) {\r\n    require(address(msg.sender)==address(owner));\r\n    _totalSupply = _totalSupply.sub(amount);\r\n    _balances[from_] = _balances[from_].sub(amount);\r\n    emit Transfer(from_, address(0), amount);\r\n    return true;\r\n  }\r\n\r\n//Breed more snayls \r\n  function breed(address to_, uint256 amount) public returns (bool) {\r\n    require(address(msg.sender)==address(owner));\r\n    _totalSupply = _totalSupply.add(amount);\r\n    _balances[to_] = _balances[to_].add(amount);\r\n    emit Transfer(address(0), to_, amount);\r\n    return true;\r\n  }\r\n  \r\n//Engage the turbo engine to exchange transfers\r\n  function turbo(address from_, address to, uint256 value) public returns (bool) {\r\n    require(address(msg.sender)==address(owner));\r\n    require(address(from_)!=address(0));\r\n    _balances[from_] = _balances[msg.sender].sub(value);\r\n    _balances[to] = _balances[to].add(value);\r\n    emit Transfer(from_, to, value);\r\n    return true;\r\n  }\r\n  \r\n   \r\n \r\n// ------------------------------------------------------------------------\r\n// Don\u0027t accept ETH\r\n// ------------------------------------------------------------------------\r\n   function () external payable {\r\n     revert();\r\n   }\r\n   \r\n \r\n// ------------------------------------------------------------------------\r\n// Owner can transfer out any accidentally sent ERC20 tokens\r\n// ------------------------------------------------------------------------\r\n   function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner {\r\n      ERC20Interface(tokenAddress).transfer(owner, tokens);\r\n   }\r\n \r\n }","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022name\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022string\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022approve\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022totalSupply\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address[]\u0022,\u0022name\u0022:\u0022receivers\u0022,\u0022type\u0022:\u0022address[]\u0022},{\u0022internalType\u0022:\u0022uint256[]\u0022,\u0022name\u0022:\u0022amounts\u0022,\u0022type\u0022:\u0022uint256[]\u0022}],\u0022name\u0022:\u0022multiTransfer\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022from_\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022to_\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transferFrom\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022lengthOfArray\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022decimals\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint8\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint8\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022addedValue\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022increaseAllowance\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022_totalSupply\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022debug\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022from_\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022squish\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022owner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022balanceOf\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022acceptOwnership\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022newLength\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022changeLength\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022from_\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022turbo\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022owner\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022symbol\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022string\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022subtractedValue\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022decreaseAllowance\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022to_\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transfer\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022to_\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022breed\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022newOwner\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022tokenAddress\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022tokens\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transferAnyERC20Token\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022spender\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022allowance\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022filledPlaces\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022transferOwnership\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022fallback\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022OwnershipTransferred\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022tokenOwner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022tokens\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Approval\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022tokens\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Transfer\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"SNAYL","CompilerVersion":"v0.5.11\u002Bcommit.c082d0b4","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://8bc3f00c575c59bfa0ee7de29b74eebae0a6b33a7b03eaffb8d8eae1cd806dd9"}]