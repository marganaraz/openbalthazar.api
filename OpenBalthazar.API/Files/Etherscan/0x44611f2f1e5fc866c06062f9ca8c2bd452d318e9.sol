[{"SourceCode":"pragma solidity ^0.6.0;\r\npragma experimental ABIEncoderV2;\r\n\r\n/**\r\n * @title InstaAccount.\r\n * @dev Smart Account Wallet.\r\n */\r\n\r\ninterface IndexInterface {\r\n    function connectors(uint version) external view returns (address);\r\n    function check(uint version) external view returns (address);\r\n    function list() external view returns (address);\r\n}\r\n\r\ninterface ConnectorsInterface {\r\n    function isConnector(address[] calldata logicAddr) external view returns (bool);\r\n    function isStaticConnector(address[] calldata logicAddr) external view returns (bool);\r\n}\r\n\r\ninterface CheckInterface {\r\n    function isOk() external view returns (bool);\r\n}\r\n\r\ninterface ListInterface {\r\n    function addAuth(address user) external;\r\n    function removeAuth(address user) external;\r\n}\r\n\r\n\r\ncontract Record {\r\n\r\n    event LogEnable(address indexed user);\r\n    event LogDisable(address indexed user);\r\n    event LogSwitchShield(bool _shield);\r\n\r\n    // The InstaIndex Address.\r\n    address public constant instaIndex = 0x1c503F1544500C05da80cd326D97342f2B13a732;\r\n    // The Account Module Version.\r\n    uint public constant version = 1;\r\n    // Auth Module(Address of Auth =\u003E bool).\r\n    mapping (address =\u003E bool) private auth;\r\n    // Is shield true/false.\r\n    bool public shield;\r\n\r\n    /**\r\n     * @dev Check for Auth if enabled.\r\n     * @param user address/user/owner.\r\n     */\r\n    function isAuth(address user) public view returns (bool) {\r\n        return auth[user];\r\n    }\r\n\r\n    /**\r\n     * @dev Change Shield State.\r\n    */\r\n    function switchShield() external {\r\n        require(auth[msg.sender], \u0022not-self\u0022);\r\n        shield = !shield;\r\n        emit LogSwitchShield(shield);\r\n    }\r\n\r\n    /**\r\n     * @dev Enable New User.\r\n     * @param user Owner of the Smart Account.\r\n    */\r\n    function enable(address user) public {\r\n        require(msg.sender == address(this) || msg.sender == instaIndex, \u0022not-self-index\u0022);\r\n        require(user != address(0), \u0022not-valid\u0022);\r\n        require(!auth[user], \u0022already-enabled\u0022);\r\n        auth[user] = true;\r\n        ListInterface(IndexInterface(instaIndex).list()).addAuth(user);\r\n        emit LogEnable(user);\r\n    }\r\n\r\n    /**\r\n     * @dev Disable User.\r\n     * @param user Owner of the Smart Account.\r\n    */\r\n    function disable(address user) public {\r\n        require(msg.sender == address(this), \u0022not-self\u0022);\r\n        require(user != address(0), \u0022not-valid\u0022);\r\n        require(auth[user], \u0022already-disabled\u0022);\r\n        delete auth[user];\r\n        ListInterface(IndexInterface(instaIndex).list()).removeAuth(user);\r\n        emit LogDisable(user);\r\n    }\r\n\r\n}\r\n\r\ncontract InstaAccount is Record {\r\n\r\n    event LogCast(address indexed origin, address indexed sender, uint value);\r\n    event LogEthDeposit(address indexed _sender, uint _amt);\r\n\r\n    /**\r\n     * @dev Emit event if Eth is deposited.\r\n    */\r\n    receive() external payable {\r\n        emit LogEthDeposit(msg.sender, msg.value);\r\n    }  \r\n\r\n     /**\r\n     * @dev Delegate the calls to Connector And this function is runned by cast().\r\n     * @param _target Target to of Connector.\r\n     * @param _data CallData of function in Connector.\r\n    */\r\n    function spell(address _target, bytes memory _data) internal {\r\n        require(_target != address(0), \u0022target-invalid\u0022);\r\n        assembly {\r\n            let succeeded := delegatecall(sub(gas(), 5000), _target, add(_data, 0x20), mload(_data), 0, 32)\r\n            switch iszero(succeeded)\r\n            case 1 {\r\n                revert(0, 0)\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev This is the main function, Where all the different functions are called\r\n     * from Smart Account.\r\n     * @param _targets Array of Target(s) to of Connector.\r\n     * @param _datas Array of Calldata(S) of function.\r\n    */\r\n    function cast(\r\n        address[] calldata _targets,\r\n        bytes[] calldata _datas,\r\n        address _origin\r\n    )\r\n    external\r\n    payable\r\n    {\r\n        require(isAuth(msg.sender) || msg.sender == instaIndex, \u0022permission-denied\u0022);\r\n        require(_targets.length == _datas.length , \u0022array-length-invalid\u0022);\r\n        IndexInterface indexContract = IndexInterface(instaIndex);\r\n        bool isShield = shield;\r\n        if (!isShield) {\r\n            require(ConnectorsInterface(indexContract.connectors(version)).isConnector(_targets), \u0022not-connector\u0022);\r\n        } else {\r\n            require(ConnectorsInterface(indexContract.connectors(version)).isStaticConnector(_targets), \u0022not-static-connector\u0022);\r\n        }\r\n        for (uint i = 0; i \u003C _targets.length; i\u002B\u002B) {\r\n            spell(_targets[i], _datas[i]);\r\n        }\r\n        address _check = indexContract.check(version);\r\n        if (_check != address(0) \u0026\u0026 !isShield) require(CheckInterface(_check).isOk(), \u0022not-ok\u0022);\r\n        emit LogCast(_origin, msg.sender, msg.value);\r\n    }\r\n\r\n}","ABI":"[{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022origin\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022sender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022LogCast\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022LogDisable\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022LogEnable\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_sender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_amt\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022LogEthDeposit\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022_shield\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022name\u0022:\u0022LogSwitchShield\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address[]\u0022,\u0022name\u0022:\u0022_targets\u0022,\u0022type\u0022:\u0022address[]\u0022},{\u0022internalType\u0022:\u0022bytes[]\u0022,\u0022name\u0022:\u0022_datas\u0022,\u0022type\u0022:\u0022bytes[]\u0022},{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_origin\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022cast\u0022,\u0022outputs\u0022:[],\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022disable\u0022,\u0022outputs\u0022:[],\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022enable\u0022,\u0022outputs\u0022:[],\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[],\u0022name\u0022:\u0022instaIndex\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022isAuth\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[],\u0022name\u0022:\u0022shield\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[],\u0022name\u0022:\u0022switchShield\u0022,\u0022outputs\u0022:[],\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[],\u0022name\u0022:\u0022version\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022receive\u0022}]","ContractName":"InstaAccount","CompilerVersion":"v0.6.1\u002Bcommit.e6f7d5a4","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"ipfs://39e095975f2d973d9fe2a1905726cfc83799954c63ee207b3fb485a252498254"}]