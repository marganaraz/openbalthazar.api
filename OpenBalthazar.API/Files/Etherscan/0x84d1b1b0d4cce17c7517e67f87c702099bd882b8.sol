[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\ncontract CrowdsaleToken {\r\n    /* Public variables of the token */\r\n    string public constant name = \u0027Rocketclock\u0027;\r\n    string public constant symbol = \u0027RCLK\u0027;\r\n    //uint256 public constant decimals = 6;\r\n    address payable owner;\r\n    address payable contractaddress;\r\n    uint256 public constant totalSupply = 1000;\r\n\r\n    /* This creates an array with all balances */\r\n    mapping (address =\u003E uint256) public balanceOf;\r\n    //mapping (address =\u003E mapping (address =\u003E uint256)) public allowance;\r\n\r\n    /* This generates a public event on the blockchain that will notify clients */\r\n    event Transfer(address payable indexed from, address payable indexed to, uint256 value);\r\n    //event LogWithdrawal(address receiver, uint amount);\r\n\r\n    modifier onlyOwner() {\r\n        // Only owner is allowed to do this action.\r\n        if (msg.sender != owner) {\r\n            revert();\r\n        }\r\n        _;\r\n    }\r\n\r\n    /* Initializes contract with initial supply tokens to the creator of the contract */\r\n    constructor() public{\r\n        contractaddress = address(this);\r\n        owner = msg.sender;\r\n        balanceOf[owner] = totalSupply;\r\n        //balanceOf[contractaddress] = totalSupply;\r\n\r\n    }\r\n\r\n    /*ERC20*/\r\n    /* Internal transfer, only can be called by this contract */\r\n    function _transfer(address payable _from, address payable _to, uint256 _value) internal {\r\n    //function _transfer(address _from, address _to, uint _value) public {\r\n        require (_to != address(0x0));                               // Prevent transfer to 0x0 address. Use burn() instead\r\n        require (balanceOf[_from] \u003E _value);                // Check if the sender has enough\r\n        require (balanceOf[_to] \u002B _value \u003E balanceOf[_to]); // Check for overflows\r\n        balanceOf[_from] -= _value;                         // Subtract from the sender\r\n        balanceOf[_to] \u002B= _value;                            // Add the same to the recipient\r\n        emit Transfer(_from, _to, _value);\r\n    }\r\n\r\n    /// @notice Send \u0060_value\u0060 tokens to \u0060_to\u0060 from your account\r\n    /// @param _to The address of the recipient\r\n    /// @param _value the amount to send\r\n    function transfer(address payable _to, uint256 _value) public returns (bool success) {\r\n\r\n        _transfer(msg.sender, _to, _value);\r\n        return true;\r\n\r\n    }\r\n\r\n    /*fallback function*/\r\n    function () external payable onlyOwner{}\r\n\r\n\r\n    function getBalance(address addr) public view returns(uint256) {\r\n  \t\treturn balanceOf[addr];\r\n  \t}\r\n\r\n    function getEtherBalance() public view returns(uint256) {\r\n  \t\t//return contract ether balance;\r\n      return address(this).balance;\r\n  \t}\r\n\r\n    function getOwner() public view returns(address) {\r\n      return owner;\r\n    }\r\n\r\n}\r\n\r\ncontract CrowdSale {\r\n    address payable public beneficiary;\r\n    address payable public crowdsaleAddress;\r\n    //debugging\r\n    address payable public tokenAddress;\r\n    address payable public owner;\r\n    uint public fundingGoal;\r\n    uint public amountRaised;\r\n    uint public tokensSold;\r\n    uint public deadline;\r\n    uint public initiation;\r\n    //uint public price;\r\n    //0.25 eth\r\n    uint256 public constant price = 250 finney;\r\n    uint public constant amount = 1;\r\n\r\n    CrowdsaleToken public tokenReward;\r\n    mapping(address =\u003E uint256) public balanceOf;\r\n    bool public fundingGoalReached = false;\r\n    bool public crowdsaleClosed = false;\r\n\r\n    event GoalReached(address beneficiary, uint amountRaised);\r\n    event FundTransfer(address backer, uint amount, bool isContribution);\r\n\r\n    modifier onlyOwner() {\r\n        // Only owner is allowed to do this action.\r\n        if (msg.sender != owner) {\r\n            revert();\r\n        }\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * Constructor function\r\n     *\r\n     * Setup the owner\r\n     */\r\n    constructor(\r\n        address payable ifSuccessfulSendTo,\r\n        address payable addressOfTokenUsedAsReward\r\n    )public {\r\n        beneficiary = ifSuccessfulSendTo;\r\n        fundingGoal = 100 * 1 ether;\r\n        deadline = now \u002B 60 * 1 days;\r\n        initiation = now;\r\n        crowdsaleAddress = address(this);\r\n        tokenAddress = addressOfTokenUsedAsReward;\r\n        tokenReward = CrowdsaleToken(addressOfTokenUsedAsReward);\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n     * Fallback function\r\n     *\r\n     * The function without name is the default function that is called whenever anyone sends funds to a contract\r\n     */\r\n\r\n    function () external payable {\r\n\r\n        //for funding of contract\r\n        if(msg.sender != owner){\r\n\r\n          require(!crowdsaleClosed);\r\n          if (now \u003C= deadline){\r\n\r\n            if(msg.value \u003E= price){\r\n              balanceOf[msg.sender] \u002B= msg.value;\r\n              tokensSold \u002B= amount;\r\n              amountRaised \u002B= msg.value;\r\n              tokenReward.transfer(msg.sender, amount);\r\n              emit FundTransfer(msg.sender, amount, true);\r\n            }\r\n            else{\r\n              //donation\r\n              amountRaised \u002B= msg.value;\r\n            }\r\n          }\r\n          else{\r\n            revert();\r\n          }\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    function depositFunds() public payable\r\n    {\r\n      require(!crowdsaleClosed);\r\n      if (now \u003C= deadline){\r\n\r\n        if(msg.value \u003E= price){\r\n          balanceOf[msg.sender] \u002B= msg.value;\r\n          tokensSold \u002B= amount;\r\n          amountRaised \u002B= msg.value;\r\n          tokenReward.transfer(msg.sender, amount);\r\n          emit FundTransfer(msg.sender, amount, true);\r\n        }\r\n        else{\r\n          //donation\r\n          amountRaised \u002B= msg.value;\r\n        }\r\n      }\r\n      else{\r\n        revert();\r\n      }\r\n\r\n    }\r\n\r\n    modifier afterDeadline() { if (now \u003E= deadline) _; }\r\n    modifier goalReached() { if (amountRaised \u003E= fundingGoal) _; }\r\n\r\n    /**\r\n     * Check if goal was reached\r\n     *\r\n     * Checks if the goal or time limit has been reached and ends the campaign\r\n     */\r\n    function checkGoalReached() public afterDeadline returns(bool) {\r\n        if (amountRaised \u003E= fundingGoal){\r\n            fundingGoalReached = true;\r\n            emit GoalReached(beneficiary, amountRaised);\r\n        }\r\n        crowdsaleClosed = true;\r\n        return crowdsaleClosed;\r\n    }\r\n\r\n\r\n    /**\r\n     * Withdraw the funds\r\n     *\r\n     * Checks to see if goal or time limit has been reached, and if so, and the funding goal was reached,\r\n     * sends the entire amount to the beneficiary. If goal was not reached, each contributor can withdraw\r\n     * the amount they contributed.\r\n     */\r\n    function safeWithdrawal() public afterDeadline {\r\n        if (!fundingGoalReached) {\r\n            uint returnamount = balanceOf[msg.sender];\r\n            balanceOf[msg.sender] = 0;\r\n            // refunds\r\n            if (returnamount \u003E= price) {\r\n                if (msg.sender.send(returnamount)) {\r\n                    emit FundTransfer(msg.sender, returnamount, false);\r\n                } else {\r\n                    balanceOf[msg.sender] = returnamount;\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    function crowdfundWithdrawal() public afterDeadline onlyOwner {\r\n        if (fundingGoalReached \u0026\u0026 beneficiary == msg.sender) {\r\n\r\n          if (beneficiary.send(amountRaised)) {\r\n              emit FundTransfer(beneficiary, amountRaised, false);\r\n          }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /* in case goal is reached early */\r\n    function closeDeadline() public goalReached onlyOwner {\r\n      deadline = now;\r\n    }\r\n\r\n    function getcrowdsaleClosed() public view returns(bool) {\r\n      return crowdsaleClosed;\r\n    }\r\n\r\n    function getfundingGoalReached() public view returns(bool) {\r\n      return fundingGoalReached;\r\n    }\r\n}","ABI":"[{\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022ifSuccessfulSendTo\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022addressOfTokenUsedAsReward\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022backer\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022isContribution\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022name\u0022:\u0022FundTransfer\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022beneficiary\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022amountRaised\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022GoalReached\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022fallback\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022amount\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022amountRaised\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022balanceOf\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022beneficiary\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022checkGoalReached\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022closeDeadline\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022crowdfundWithdrawal\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022crowdsaleAddress\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022crowdsaleClosed\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022deadline\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022depositFunds\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022fundingGoal\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022fundingGoalReached\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getcrowdsaleClosed\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getfundingGoalReached\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022initiation\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022owner\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022price\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022safeWithdrawal\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022tokenAddress\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022tokenReward\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022contract CrowdsaleToken\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022tokensSold\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022}]","ContractName":"CrowdSale","CompilerVersion":"v0.5.13\u002Bcommit.5b0b510c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000008749cf4fd4f327a4907df5bcfb04365e6f7a2d9000000000000000000000000020c5d435da33e69343c1abf7ba23d0ced7c3c52d","Library":"","SwarmSource":"bzzr://56db5e417c6020d486738d891606e4929c54dd8965a981e857b950e77df0677c"}]