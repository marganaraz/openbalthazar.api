[{"SourceCode":"// File: contracts\\IERC20.sol\r\n\r\npragma solidity ^0.5.0;\r\n\r\n/**\r\n * @dev ERC20 contract interface.\r\n */\r\ncontract IERC20\r\n{\r\n\tfunction totalSupply() public view returns (uint);\r\n\t\r\n\tfunction transfer(address _to, uint _value) public returns (bool success);\r\n\t\r\n\tfunction transferFrom(address _from, address _to, uint _value) public returns (bool success);\r\n\t\r\n\tfunction balanceOf(address _owner) public view returns (uint balance);\r\n\t\r\n\tfunction approve(address _spender, uint _value) public returns (bool success);\r\n\t\r\n\tfunction allowance(address _owner, address _spender) public view returns (uint remaining);\r\n\t\r\n\tevent Transfer(address indexed from, address indexed to, uint tokens);\r\n\tevent Approval(address indexed owner, address indexed spender, uint tokens);\r\n}\r\n\r\n// File: contracts\\SafeMathLib.sol\r\n\r\npragma solidity ^0.5.0;\r\n\r\n// ----------------------------------------------------------------------------\r\n// ----------------------------------------------------------------------------\r\n// Safe maths\r\n// ----------------------------------------------------------------------------\r\n\r\nlibrary SafeMathLib {\r\n\t\r\n\tusing SafeMathLib for uint;\r\n\t\r\n\t/**\r\n\t * @dev Sum two uint numbers.\r\n\t * @param a Number 1\r\n\t * @param b Number 2\r\n\t * @return uint\r\n\t */\r\n    function add(uint a, uint b) internal pure returns (uint c) {\r\n        c = a \u002B b;\r\n        require(c \u003E= a, \u0022SafeMathLib.add: required c \u003E= a\u0022);\r\n    }\r\n\t\r\n\t/**\r\n\t * @dev Substraction of uint numbers.\r\n\t * @param a Number 1\r\n\t * @param b Number 2\r\n\t * @return uint\r\n\t */\r\n    function sub(uint a, uint b) internal pure returns (uint c) {\r\n        require(b \u003C= a, \u0022SafeMathLib.sub: required b \u003C= a\u0022);\r\n        c = a - b;\r\n    }\r\n\t\r\n\t/**\r\n\t * @dev Product of two uint numbers.\r\n\t * @param a Number 1\r\n\t * @param b Number 2\r\n\t * @return uint\r\n\t */\r\n    function mul(uint a, uint b) internal pure returns (uint c) {\r\n        c = a * b;\r\n        require((a == 0 || c / a == b), \u0022SafeMathLib.mul: required (a == 0 || c / a == b)\u0022);\r\n    }\r\n\t\r\n\t/**\r\n\t * @dev Division of two uint numbers.\r\n\t * @param a Number 1\r\n\t * @param b Number 2\r\n\t * @return uint\r\n\t */\r\n    function div(uint a, uint b) internal pure returns (uint c) {\r\n        require(b \u003E 0, \u0022SafeMathLib.div: required b \u003E 0\u0022);\r\n        c = a / b;\r\n    }\r\n}\r\n\r\n// File: contracts\\FITHTokenSale.sol\r\n\r\npragma solidity ^0.5.0;\r\n\r\n\r\n\r\n/**\r\n * @dev Fiatech FITH token sale contract.\r\n */\r\ncontract FITHTokenSale\r\n{\r\n\tusing SafeMathLib for uint;\r\n\t\r\n    address payable public admin;\r\n    \r\n\tIERC20 public tokenContract;\r\n\t\r\n\tuint256 public tokenPrice;\r\n    uint256 public tokensSold;\r\n\t\r\n\t// sell event raised when buyer purchases tokens\r\n    event Sell(address _buyer, uint256 _amount, uint256 _tokensSold);\r\n\t\r\n\t// token price update event\r\n\tevent TokenPriceUpdate(address _admin, uint256 _tokenPrice);\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * @dev Constructor\r\n\t */\r\n    constructor(IERC20 _tokenContract, uint256 _tokenPrice) public\r\n\t{\r\n\t\trequire(_tokenPrice \u003E 0, \u0022_tokenPrice greater than zero required\u0022);\r\n\t\t\r\n        admin = msg.sender;\r\n        tokenContract = _tokenContract;\r\n        tokenPrice = _tokenPrice;\r\n    }\r\n\t\r\n\tmodifier onlyAdmin() {\r\n        require(msg.sender == admin, \u0022Admin required\u0022);\r\n        _;\r\n    }\r\n\t\r\n\tfunction updateTokenPrice(uint256 _tokenPrice) public onlyAdmin {\r\n        require(_tokenPrice \u003E 0 \u0026\u0026 _tokenPrice != tokenPrice, \u0022Token price must be greater than zero and different than current\u0022);\r\n        \r\n\t\ttokenPrice = _tokenPrice;\r\n\t\temit TokenPriceUpdate(admin, _tokenPrice);\r\n    }\r\n\t\r\n    function buyTokens(uint256 _numberOfTokens) public payable {\r\n        require(msg.value == (_numberOfTokens * tokenPrice), \u0022Incorrect number of tokens\u0022);\r\n        require(tokenContract.balanceOf(address(this)) \u003E= _numberOfTokens, \u0022insufficient tokens on token-sale contract\u0022);\r\n        require(tokenContract.transfer(msg.sender, _numberOfTokens), \u0022Transfer tokens to buyer failed\u0022);\r\n\t\t\r\n        tokensSold \u002B= _numberOfTokens;\r\n\t\t\r\n        emit Sell(msg.sender, _numberOfTokens, tokensSold);\r\n    }\r\n\t\r\n    function endSale() public onlyAdmin {\r\n        require(tokenContract.transfer(admin, tokenContract.balanceOf(address(this))), \u0022Transfer token-sale token balance to admin failed\u0022);\r\n\t\t\r\n        // Just transfer the ether balance to the admin\r\n        admin.transfer(address(this).balance);\r\n    }\r\n\t\r\n\t/**\r\n\t * Do not accept ETH donations\r\n\t */\r\n    function () external payable {\r\n\t\trevert();\r\n    }\r\n}","ABI":"[{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_numberOfTokens\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022buyTokens\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022endSale\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022tokensSold\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022tokenContract\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_tokenPrice\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022updateTokenPrice\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022tokenPrice\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022admin\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[{\u0022name\u0022:\u0022_tokenContract\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_tokenPrice\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022fallback\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022_buyer\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022_amount\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022_tokensSold\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Sell\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022_admin\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022_tokenPrice\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022TokenPriceUpdate\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"FITHTokenSale","CompilerVersion":"v0.5.0\u002Bcommit.1d4f565a","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000075d7fafbe8c7df07b157394d60c6a6848de507600000000000000000000000000000000000000000000000000000000ee6b2800","Library":"","SwarmSource":"bzzr://b9dc95d82cb45dfcb4b9ff8cf418d9f4741e06038e558f801ee0314ec3d10bf1"}]