[{"SourceCode":"//Compatible Solidity Compiler Version\r\n\r\npragma solidity ^0.4.25;\r\n\r\n/*\r\nThis TokenPesa DAO Token contract is based on the ERC20 token contract standard. Additional\r\nfunctionality has been integrated:\r\n*/\r\n\r\ncontract TokenPesaDAOToken  {\r\n\r\n    string public constant name = \u0022TokenPesa DAO Token\u0022;\r\n\tstring public constant symbol = \u0022TDAT\u0022;\r\n\tuint8 public constant decimals = 18;\r\n\t\r\n//database to match user Accounts and their respective balances\r\n  mapping(address =\u003E uint) _balances;\r\n  mapping(address =\u003E mapping( address =\u003E uint )) _approvals;\r\n  \r\n//TokenPesa DAO Token Hard Cap\r\n  uint public cap_tdat;\r\n  \r\n//TokenPesa DAO Token Current Supply\r\n  uint public currentSupply;\r\n  \r\n//Authorized TokenPesa DAO Token Minter Ethereum address\r\n  address public minter;\r\n  \r\n//check if Account is the Authorized Minter\r\nmodifier onlyMinter {\r\n    \r\n      if (msg.sender != minter) revert();\r\n      _;\r\n  }\r\n  \r\n//check if hard cap is reached before minting new TDAT tokens\r\nmodifier capReached(uint amount) {\r\n    \r\n    if((currentSupply \u002B amount) \u003E cap_tdat) revert();\r\n    _;\r\n}\r\n\r\n  event Transfer(address indexed from, address indexed to, uint value );\r\n  event Approval(address indexed owner, address indexed spender, uint value );\r\n  event TokenMint(address newTokenHolder, uint amountOfTokens);\r\n  event MinterTransfered(address prevMinter, address nextMinter);\r\n \r\n \r\n//initialize TokenPesa DAO Token\r\n//TokenPesa DAO Token Constructor Configurations \r\n constructor(uint cap_token) public  {\r\n     \r\n    cap_tdat = cap_token;\r\n    minter = msg.sender;\r\n    \r\n  }\r\n\r\n//retrieve number of all TokenPesa DAO Tokens in existence\r\nfunction totalSupply() public constant returns (uint supply) {\r\n    return currentSupply;\r\n  }\r\n\r\n//check TokenPesa DAO Tokens balance of an Ethereum account\r\nfunction balanceOf(address who) public constant returns (uint value) {\r\n    return _balances[who];\r\n  }\r\n\r\n//check how many TokenPesa DAO Tokens a spender is allowed to spend from an owner\r\nfunction allowance(address _owner, address spender) public constant returns (uint _allowance) {\r\n    return _approvals[_owner][spender];\r\n  }\r\n\r\n  // A helper to notify if overflow occurs\r\nfunction safeToAdd(uint a, uint b) internal pure returns (bool) {\r\n    return (a \u002B b \u003E= a \u0026\u0026 a \u002B b \u003E= b);\r\n  }\r\n\r\n//transfer an amount of TokenPesa DAO Tokens to an Ethereum address\r\nfunction transfer(address to, uint value) public returns (bool ok) {\r\n\r\n    if(_balances[msg.sender] \u003C value) revert();\r\n    \r\n    if(!safeToAdd(_balances[to], value)) revert();\r\n    \r\n    _balances[msg.sender] -= value;\r\n    _balances[to] \u002B= value;\r\n    \r\n    emit Transfer(msg.sender, to, value);\r\n    return true;\r\n  }\r\n\r\n//spend TokenPesa DAO Tokens from another Ethereum account that approves you as spender\r\nfunction transferFrom(address from, address to, uint value) public returns (bool ok) {\r\n    // if you don\u0027t have enough balance, throw\r\n    if(_balances[from] \u003C value) revert();\r\n\r\n    // if you don\u0027t have approval, throw\r\n    if(_approvals[from][msg.sender] \u003C value) revert();\r\n    \r\n    if(!safeToAdd(_balances[to], value)) revert();\r\n    \r\n    // transfer and return true\r\n    _approvals[from][msg.sender] -= value;\r\n    _balances[from] -= value;\r\n    _balances[to] \u002B= value;\r\n    \r\n    emit Transfer(from, to, value);\r\n    return true;\r\n  }\r\n  \r\n  \r\n//allow another Ethereum account to spend TokenPesa DAO Tokens from your Account\r\nfunction approve(address spender, uint value)\r\n    public\r\n    returns (bool ok) {\r\n    _approvals[msg.sender][spender] = value;\r\n    \r\n    emit Approval(msg.sender, spender, value);\r\n    return true;\r\n  }\r\n\r\n//mechanism for TokenPesa DAO Tokens Creation\r\n//only minter can create new TokenPesa DAO Tokens\r\n//check if TokenPesa DAO Token Hard Cap is reached before proceeding - revert if true\r\nfunction mint(address recipient, uint amount) onlyMinter capReached(amount)  public returns (bool ok)\r\n  {\r\n    if(!safeToAdd(_balances[recipient], amount)) revert();\r\n    if(!safeToAdd(currentSupply, amount)) revert();\r\n    \r\n   _balances[recipient] \u002B= amount;  \r\n   currentSupply \u002B= amount;\r\n    \r\n    emit TokenMint(recipient, amount);\r\n    return true;\r\n  }\r\n  \r\n//transfer the priviledge of creating new TokenPesa DAO Tokens to another Ethereum account\r\nfunction transferMintership(address newMinter) public onlyMinter returns (bool ok)\r\n  {\r\n    minter = newMinter;\r\n    \r\n    emit MinterTransfered(minter, newMinter);\r\n     return true;\r\n  }\r\n  \r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022name\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022minter\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022approve\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022ok\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022totalSupply\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022supply\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transferFrom\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022ok\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022decimals\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint8\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022recipient\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022mint\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022ok\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022cap_tdat\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022who\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022balanceOf\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022currentSupply\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022symbol\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transfer\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022ok\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022newMinter\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022transferMintership\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022ok\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022spender\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022allowance\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022_allowance\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[{\u0022name\u0022:\u0022cap_token\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Transfer\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Approval\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022newTokenHolder\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022amountOfTokens\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022TokenMint\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022prevMinter\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022nextMinter\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022MinterTransfered\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"TokenPesaDAOToken","CompilerVersion":"v0.4.25\u002Bcommit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000022bdd88fed9efc6a000000","Library":"","SwarmSource":"bzzr://fd42c50788d9250740841a8fcefeb15492338112150179c1f59456d124d46148"}]