[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2019-08-19\r\n*/\r\n\r\npragma solidity \u003E=0.4.22 \u003C0.6.0;\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // Safe maths\r\n    // ----------------------------------------------------------------------------\r\n    library SafeMath {\r\n        function add(uint a, uint b) internal pure returns (uint c) {\r\n            c = a \u002B b;\r\n            require(c \u003E= a);\r\n        }\r\n        function sub(uint a, uint b) internal pure returns (uint c) {\r\n            require(b \u003C= a);\r\n            c = a - b;\r\n        }\r\n        function mul(uint a, uint b) internal pure returns (uint c) {\r\n            c = a * b;\r\n            require(a == 0 || c / a == b);\r\n        }\r\n        function div(uint a, uint b) internal pure returns (uint c) {\r\n            require(b \u003E 0);\r\n            c = a / b;\r\n        }\r\n    }\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // ERC Token Standard #20 Interface\r\n    // ----------------------------------------------------------------------------\r\n    contract ERC20Interface {\r\n        function totalSupply() public view returns (uint);\r\n        function balanceOf(address tokenOwner) public view returns (uint balance);\r\n        function allowance(address tokenOwner, address spender) public view returns (uint remaining);\r\n        function transfer(address to, uint tokens) public returns (bool success);\r\n        function approve(address spender, uint tokens) public returns (bool success);\r\n        function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\r\n        event Transfer(address indexed from, address indexed to, uint tokens);\r\n        event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n    }\r\n\r\n    // ----------------------------------------------------------------------------\r\n    // Bimin Token Contract\r\n    // ----------------------------------------------------------------------------\r\n    contract Sinken is ERC20Interface{\r\n        using SafeMath for uint;\r\n        \r\n        string public symbol;\r\n        string public name;\r\n        uint8 public decimals;\r\n        uint _totalSupply;\r\n        mapping(address =\u003E uint) balances;\r\n        mapping(address =\u003E mapping(address =\u003E uint)) allowed;\r\n\r\n        // ------------------------------------------------------------------------\r\n        // Constructor\r\n        // ------------------------------------------------------------------------\r\n        constructor(address _owner) public{\r\n            symbol = \u0022SK\u0022;\r\n            name = \u0022Sinken Token\u0022;\r\n            decimals = 18;\r\n            _totalSupply = 1e8; //10,000,000,000\r\n            balances[_owner] = totalSupply();\r\n            emit Transfer(address(0),_owner,totalSupply());\r\n        }\r\n\r\n        function totalSupply() public view returns (uint){\r\n        return _totalSupply * 10**uint(decimals);\r\n        }\r\n\r\n        // ------------------------------------------------------------------------\r\n        // Get the token balance for account \u0060tokenOwner\u0060\r\n        // ------------------------------------------------------------------------\r\n        function balanceOf(address tokenOwner) public view returns (uint balance) {\r\n            return balances[tokenOwner];\r\n        }\r\n\r\n        // ------------------------------------------------------------------------\r\n        // Transfer the balance from token owner\u0027s account to \u0060to\u0060 account\r\n        // - Owner\u0027s account must have sufficient balance to transfer\r\n        // - 0 value transfers are allowed\r\n        // ------------------------------------------------------------------------\r\n        function transfer(address to, uint tokens) public returns (bool success) {\r\n            // prevent transfer to 0x0, use burn instead\r\n            require(to != address(0));\r\n            require(balances[msg.sender] \u003E= tokens );\r\n            require(balances[to] \u002B tokens \u003E= balances[to]);\r\n            balances[msg.sender] = balances[msg.sender].sub(tokens);\r\n            balances[to] = balances[to].add(tokens);\r\n            emit Transfer(msg.sender,to,tokens);\r\n            return true;\r\n        }\r\n        \r\n        // ------------------------------------------------------------------------\r\n        // Token owner can approve for \u0060spender\u0060 to transferFrom(...) \u0060tokens\u0060\r\n        // from the token owner\u0027s account\r\n        // ------------------------------------------------------------------------\r\n        function approve(address spender, uint tokens) public returns (bool success){\r\n            allowed[msg.sender][spender] = tokens;\r\n            emit Approval(msg.sender,spender,tokens);\r\n            return true;\r\n        }\r\n\r\n        // ------------------------------------------------------------------------\r\n        // Transfer \u0060tokens\u0060 from the \u0060from\u0060 account to the \u0060to\u0060 account\r\n        // \r\n        // The calling account must already have sufficient tokens approve(...)\r\n        // for spending from the \u0060from\u0060 account and\r\n        // - From account must have sufficient balance to transfer\r\n        // - Spender must have sufficient allowance to transfer\r\n        // - 0 value transfers are allowed\r\n        // ------------------------------------------------------------------------\r\n        function transferFrom(address from, address to, uint tokens) public returns (bool success){\r\n            require(tokens \u003C= allowed[from][msg.sender]); //check allowance\r\n            require(balances[from] \u003E= tokens);\r\n            balances[from] = balances[from].sub(tokens);\r\n            balances[to] = balances[to].add(tokens);\r\n            allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\r\n            emit Transfer(from,to,tokens);\r\n            return true;\r\n        }\r\n        // ------------------------------------------------------------------------\r\n        // Returns the amount of tokens approved by the owner that can be\r\n        // transferred to the spender\u0027s account\r\n        // ------------------------------------------------------------------------\r\n        function allowance(address tokenOwner, address spender) public view returns (uint remaining) {\r\n            return allowed[tokenOwner][spender];\r\n        }\r\n    }","ABI":"[{\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022tokenOwner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022tokens\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Approval\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022tokens\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Transfer\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022tokenOwner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022spender\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022allowance\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022remaining\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022tokens\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022approve\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022tokenOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022balanceOf\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022balance\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022decimals\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint8\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint8\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022name\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022string\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022symbol\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022string\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022totalSupply\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022tokens\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transfer\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022tokens\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transferFrom\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022}]","ContractName":"Sinken","CompilerVersion":"v0.5.13\u002Bcommit.5b0b510c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000002544ac4dba98e05470e9303eabea07187336dc08","Library":"","SwarmSource":"bzzr://c2b5f8333ff0956d69db17ab1da7f47aa1d8ac44d4b01a81e2a3b9df5ac33a54"}]