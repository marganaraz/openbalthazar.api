[{"SourceCode":"pragma solidity 0.4.25;\r\n\r\n contract Math {\r\n    function add(uint256 x, uint256 y) pure internal returns(uint256) {\r\n      uint256 z = x \u002B y;\r\n      assert((z \u003E= x) \u0026\u0026 (z \u003E= y));\r\n      return z;\r\n    }\r\n\r\n    function subtract(uint256 x, uint256 y) pure internal returns(uint256) {\r\n      assert(x \u003E= y);\r\n      uint256 z = x - y;\r\n      return z;\r\n    }\r\n}\r\n\r\ncontract Auth {\r\n    address owner = 0x0;\r\n    address admin = 0x0;\r\n\r\n    modifier isOwner {\r\n        require(owner == msg.sender);\r\n        _;\r\n    }\r\n\r\n    modifier isAdmin {\r\n        require(owner == msg.sender || admin == msg.sender);\r\n        _;\r\n    }\r\n    \r\n    function setOwner(address _owner) isOwner public {\r\n        owner = _owner;\r\n    }\r\n    \r\n    function setAdmin(address _admin) isOwner public {\r\n        admin = _admin;\r\n    }\r\n    \r\n    function getManagers() public view returns (address _owner, address _admin) {\r\n        return (owner, admin);\r\n    }\r\n}\r\n\r\ncontract Manage is Auth {\r\n    \r\n    /**\r\n     *  0 : init, 1 : limited, 2 : running, 3 : finishing\r\n     */\r\n    uint8 public status = 0;\r\n\r\n    modifier isRunning {\r\n        require(status == 2 || owner == msg.sender || admin == msg.sender || (status == 1 \u0026\u0026 (owner == msg.sender || admin == msg.sender)));\r\n        _;\r\n    }\r\n\r\n    function limit() isAdmin public {\r\n    \trequire(status != 1);\r\n        status = 1;\r\n    }\r\n    \r\n    function start() isAdmin public {\r\n    \trequire(status != 2);\r\n        status = 2;\r\n    }\r\n    \r\n    function close() isAdmin public {\r\n    \trequire(status != 3);\r\n        status = 3;\r\n    }\r\n}\r\n\r\ncontract EIP20Interface {\r\n    uint256 public totalSupply;\r\n    function balanceOf(address _owner) public view returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n    function approve(address _spender, uint256 _value) public returns (bool success);\r\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining);\r\n    \r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ncontract TokenBase is EIP20Interface, Manage, Math {\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n    \r\n    event Burn(address indexed from, uint256 value);\r\n\r\n    mapping (address =\u003E uint256) public balances;\r\n    mapping (address =\u003E mapping (address =\u003E uint256)) public allowed;\r\n    \r\n    constructor() public {\r\n        owner = msg.sender;\r\n        admin = msg.sender;\r\n    }\r\n    \r\n    function init(uint256 initialSupply, string tokenName, string tokenSymbol, uint8 tokenDecimals) internal {\r\n        require(status == 0);\r\n        totalSupply = initialSupply * 10 ** uint256(tokenDecimals);\r\n        balances[msg.sender] = totalSupply;\r\n        name = tokenName;\r\n        symbol = tokenSymbol;\r\n        decimals = tokenDecimals;\r\n        status = 1;\r\n    }\r\n    \r\n    function _transfer(address _from, address _to, uint256 _value) isRunning internal {\r\n    \trequire(0x0 != _to);\r\n        require(balances[_from] \u003E= _value);\r\n        require(balances[_to] \u002B _value \u003E= balances[_to]);\r\n        uint previousBalances = balances[_from] \u002B balances[_to];\r\n        balances[_from] = Math.subtract(balances[_from], _value);\r\n        balances[_to] = Math.add(balances[_to], _value);\r\n        emit Transfer(_from, _to, _value);\r\n        assert(balances[_from] \u002B balances[_to] == previousBalances);\r\n    }\r\n    \r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n        _transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n    \r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\r\n        require(_value \u003C= allowed[_from][msg.sender]);\r\n        allowed[_from][msg.sender] -= _value;\r\n        _transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n    \r\n    function approve(address _spender, uint256 _value) isRunning public returns (bool success) {\r\n        require(_value == 0 || allowed[msg.sender][_spender] == 0);\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n    \r\n    function increaseApproval(address _spender, uint256 _value) isRunning public returns (bool success) {\r\n   \t\tallowed[msg.sender][_spender] = Math.add(allowed[msg.sender][_spender], _value);\r\n   \t\temit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n   \t\treturn true;\r\n\t}\r\n\r\n\tfunction decreaseApproval(address _spender, uint _value) isRunning public returns (bool success) {\r\n\t   \tuint256 oldValue = allowed[msg.sender][_spender];\r\n\t   \tif (_value \u003E= oldValue) {\r\n\t       allowed[msg.sender][_spender] = 0;\r\n\t   \t} else {\r\n\t       allowed[msg.sender][_spender] = Math.subtract(oldValue, _value);\r\n\t   \t}\r\n\t   \temit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n\t   \treturn true;\r\n\t}\r\n    \r\n    function burn(uint256 _value) public returns (bool success) {\r\n        require(balances[msg.sender] \u003E= _value);   // Check if the sender has enough\r\n        balances[msg.sender] -= _value;            // Subtract from the sender\r\n        totalSupply -= _value;                      // Updates totalSupply\r\n        emit Burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n    \r\n    function burnFrom(address _from, uint256 _value) public returns (bool success) {\r\n        require(balances[_from] \u003E= _value);                // Check if the targeted balance is enough\r\n        require(_value \u003C= allowed[_from][msg.sender]);    // Check allowance\r\n        balances[_from] -= _value;                         // Subtract from the targeted balance\r\n        allowed[_from][msg.sender] -= _value;             // Subtract from the sender\u0027s allowance\r\n        totalSupply -= _value;                              // Update totalSupply\r\n        emit Burn(_from, _value);\r\n        return true;\r\n    }\r\n    \r\n    function balanceOf(address _owner) public view returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n    \r\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n    \r\n    function destruct() isOwner public {\r\n        selfdestruct(owner);\r\n    }\r\n}\r\n\r\ncontract EcoDollar is TokenBase {\r\n    uint256 public sellPrice;\r\n    uint256 public buyPrice;\r\n    uint8 freezePercent;\r\n    address[] private frozenAddresses;\r\n    mapping (address =\u003E uint256) public frozenBalances;\r\n    \r\n    event FrozenBalance(address indexed target, uint256 balance);\r\n    event Price(uint256 newSellPrice, uint256 newBuyPrice);\r\n    \r\n    constructor() TokenBase() public {\r\n        init(3000000000, \u0022EcoDollar\u0022, \u0022ECO\u0022, 18);\r\n        freezePercent = 100;\r\n        \r\n        emit Transfer(address(0), msg.sender, totalSupply);\r\n    }\r\n    \r\n    function _transfer(address _from, address _to, uint256 _value) isRunning internal {\r\n        require(frozenBalances[_from] \u003C= balances[_from] - _value);\r\n        \r\n        super._transfer(_from, _to, _value);\r\n        \r\n        if(status == 1) \r\n        \tfreeze(_to, freezePercent);\r\n    }\r\n    \r\n    function increaseFrozenBalances(address target, uint256 _value) isAdmin public {\r\n        require(_value \u003E 0);\r\n        if(frozenBalances[target] == 0)\r\n        \tfrozenAddresses.push(target);\r\n        \t\r\n        frozenBalances[target] \u002B= _value;\r\n        emit FrozenBalance(target, frozenBalances[target]);\r\n    }\r\n    \r\n    function decreaseFrozenBalances(address target, uint256 _value) isAdmin public {\r\n        require(_value \u003E 0 \u0026\u0026 frozenBalances[target] \u003E= _value);\r\n        frozenBalances[target] -= _value;\r\n        \r\n        if(frozenBalances[target] == 0)\r\n        \tdeleteFrozenAddresses(target);\r\n        \t\r\n        emit FrozenBalance(target, frozenBalances[target]);\r\n    }\r\n    \r\n    function freeze(address target, uint8 percent) isAdmin public {\r\n        require(percent \u003E 0 \u0026\u0026 percent \u003C= 100);\r\n        if(frozenBalances[target] == 0)\r\n        \tfrozenAddresses.push(target);\r\n        \r\n        uint256 frozenBalance = balances[target] * percent / 100;\r\n        frozenBalances[target] = frozenBalance;\r\n        \r\n        emit FrozenBalance(target, frozenBalance);\r\n    }\r\n    \r\n    function changeFrozenBalanceAll(uint8 percent) isAdmin public {\r\n        uint arrayLength = frozenAddresses.length;\r\n\t\tfor (uint i=0; i\u003CarrayLength; i\u002B\u002B) {\r\n\t\t\tuint256 frozenBalance = balances[frozenAddresses[i]] * percent / 100;\r\n        \tfrozenBalances[frozenAddresses[i]] = frozenBalance;\r\n\t\t}\r\n    }\r\n    \r\n    function unfreeze(address target) isAdmin public {\r\n    \tdeleteFrozenAddresses(target);\r\n    \r\n        delete frozenBalances[target];\r\n    }\r\n    \r\n    function deleteFrozenAddresses(address target) private {\r\n    \tuint arrayLength = frozenAddresses.length;\r\n    \tuint indexToBeDeleted;\r\n\t\tfor (uint i=0; i\u003CarrayLength; i\u002B\u002B) {\r\n  \t\t\tif (frozenAddresses[i] == target) {\r\n    \t\t\tindexToBeDeleted = i;\r\n    \t\t\tbreak;\r\n  \t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\taddress lastAddress = frozenAddresses[frozenAddresses.length-1];\r\n        frozenAddresses[indexToBeDeleted] = lastAddress;\r\n        frozenAddresses.length--;\r\n    }\r\n    \r\n    function unfreezeAll() isAdmin public {\r\n    \tuint arrayLength = frozenAddresses.length;\r\n\t\tfor (uint i=0; i\u003CarrayLength; i\u002B\u002B) {\r\n\t\t\tdelete frozenBalances[frozenAddresses[i]];\r\n\t\t}\r\n        \r\n        delete frozenAddresses;\r\n        frozenAddresses.length = 0;\r\n    }\r\n    \r\n    function setPrices(uint256 newSellPrice, uint256 newBuyPrice) isAdmin public {\r\n        sellPrice = newSellPrice;\r\n        buyPrice = newBuyPrice;\r\n        emit Price(sellPrice, buyPrice);\r\n    }\r\n    \r\n    function buy() payable public {\r\n        require(buyPrice \u003E 0);\r\n        uint amount = msg.value / buyPrice;\r\n        _transfer(this, msg.sender, amount);\r\n    }\r\n    \r\n    function sell(uint256 amount) public {\r\n        require(sellPrice \u003E 0);\r\n        address myAddress = this;\r\n        require(myAddress.balance \u003E= amount * sellPrice);\r\n        _transfer(msg.sender, this, amount);\r\n        msg.sender.transfer(amount * sellPrice);\r\n    }\r\n    \r\n    function setFreezePercent(uint8 percent) isAdmin public {\r\n    \tfreezePercent = percent;\r\n    }\r\n    \r\n    function frozenBalancesOf(address target) public view returns (uint256 balance) {\r\n         return frozenBalances[target];\r\n    }\r\n}","ABI":"[{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022newSellPrice\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022newBuyPrice\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022setPrices\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022name\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022approve\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022frozenBalances\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022setOwner\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022totalSupply\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022status\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint8\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transferFrom\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022balances\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022destruct\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022decimals\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint8\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022burn\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022close\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022target\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022unfreeze\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022sellPrice\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022allowed\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022percent\u0022,\u0022type\u0022:\u0022uint8\u0022}],\u0022name\u0022:\u0022changeFrozenBalanceAll\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022decreaseApproval\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022unfreezeAll\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022target\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022decreaseFrozenBalances\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022target\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022percent\u0022,\u0022type\u0022:\u0022uint8\u0022}],\u0022name\u0022:\u0022freeze\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_admin\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022setAdmin\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022balanceOf\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022balance\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022burnFrom\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022buyPrice\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022target\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022increaseFrozenBalances\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022symbol\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022limit\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022buy\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getManagers\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_admin\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transfer\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022percent\u0022,\u0022type\u0022:\u0022uint8\u0022}],\u0022name\u0022:\u0022setFreezePercent\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022start\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022target\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022frozenBalancesOf\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022balance\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022increaseApproval\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_spender\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022allowance\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022remaining\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022sell\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022target\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022balance\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022FrozenBalance\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022newSellPrice\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022newBuyPrice\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Price\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Burn\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022_from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Transfer\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022_spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Approval\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"EcoDollar","CompilerVersion":"v0.4.25\u002Bcommit.59dbf8f1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://24519b2eddcc3913f67b9abd6c5d42b24e65cd07ae2589396f6be4a66af15a77"}]