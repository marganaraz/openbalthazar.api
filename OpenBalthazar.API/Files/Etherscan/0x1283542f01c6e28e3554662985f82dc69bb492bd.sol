[{"SourceCode":"pragma solidity \u003E=0.4.18;\r\n\r\ncontract aNonEventManagement {\r\n\r\n    address owner;\r\n\r\n    constructor() public {\r\n                owner = msg.sender;\r\n    }\r\n\r\n    struct Event {\r\n        string eventDescription;\r\n        bytes32[] eventRegistrations;\r\n    }\r\n\r\n    mapping (uint =\u003E Event) events;\r\n    uint[] public EventsList;\r\n\r\n    function uint2str(uint _i) internal pure returns (string memory _uintAsString) {\r\n        if (_i == 0) {\r\n            return \u00220\u0022;\r\n        }\r\n        uint j = _i;\r\n        uint len;\r\n        while (j != 0) {\r\n            len\u002B\u002B;\r\n            j /= 10;\r\n        }\r\n        bytes memory bstr = new bytes(len);\r\n        uint k = len - 1;\r\n        while (_i != 0) {\r\n            bstr[k--] = byte(uint8(48 \u002B _i % 10));\r\n            _i /= 10;\r\n        }\r\n        return string(bstr);\r\n    }\r\n\r\n    function append(string memory a, string memory b, string memory c) internal pure returns (string memory) {\r\n        return string(abi.encodePacked(a, b, c));\r\n    }\r\n\r\n    function quotesCover(string memory text) internal pure returns (string memory) {\r\n        return append(\u0022\\\u0022\u0022, text, \u0022\\\u0022\u0022 );\r\n    }\r\n\r\n    function appendJSONItem(string memory text, string memory key, string memory value) internal pure returns (string memory) {\r\n        return string(abi.encodePacked(text,\u0022{\u0022,quotesCover(\u0022id\u0022),\u0022:\u0022, quotesCover(key), \u0022,\u0022,\r\n        quotesCover(\u0022desc\u0022),\u0022:\u0022, quotesCover(value),\u0022}\u0022));\r\n    }\r\n\r\n    function setEvent(string memory _eventDescription) public {\r\n        uint _id  = EventsList.length\u002B1;\r\n        events[_id].eventDescription = _eventDescription;\r\n        EventsList.push(_id) -1;\r\n    }\r\n\r\n    function getInfoAboutEvents() view public returns (string memory){\r\n        string memory result = \u0022[\u0022;\r\n        for (uint i=0; i\u003CEventsList.length; i\u002B\u002B) {\r\n            string memory _identifier = uint2str(i\u002B1);\r\n            string memory _description = events[i\u002B1].eventDescription;\r\n            result = appendJSONItem(result, _identifier, _description);\r\n            if (i\u002B1\u003CEventsList.length) {\r\n                result = append(result,\u0022,\u0022,\u0022\u0022);\r\n            }\r\n        }\r\n        result = append(result, \u0022]\u0022, \u0022\u0022);\r\n        return (result);\r\n    }\r\n\r\n\r\n    event registrationStatus(string message);\r\n\r\n    function eventRegistration(uint _id, string memory _phone) public {\r\n        bool _alreadyRegistered = false;\r\n        string memory _message = \u0022\u0022;\r\n        bytes32 _encodedphone = keccak256(abi.encode(_phone));\r\n        for(uint i=0; i\u003Cevents[_id].eventRegistrations.length; i\u002B\u002B) {\r\n            if ((events[_id].eventRegistrations[i]) == _encodedphone) {\r\n                _alreadyRegistered = true;\r\n                break;\r\n            }\r\n        }\r\n        if (_alreadyRegistered == true) {\r\n            _message = \u0022member is already registered on this event\u0022;\r\n        } else {\r\n            events[_id].eventRegistrations.push(_encodedphone);\r\n            _message = \u0022successfully registered on event\u0022;\r\n        }\r\n        emit registrationStatus(_message);\r\n    }\r\n\r\n\r\n    event IsRegistered(bool status);\r\n\r\n    function checkMember(uint _id, string memory _phone) public returns (bool) {\r\n        bool result = false;\r\n        for(uint i=0; i\u003Cevents[_id].eventRegistrations.length; i\u002B\u002B) {\r\n            if ((events[_id].eventRegistrations[i]) == keccak256(abi.encode(_phone))) {\r\n                result = true;\r\n                break;\r\n            }\r\n        }\r\n        emit IsRegistered(result);\r\n        return (result);\r\n    }\r\n\r\n}","ABI":"[{\u0022inputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022status\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022name\u0022:\u0022IsRegistered\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022string\u0022,\u0022name\u0022:\u0022message\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022name\u0022:\u0022registrationStatus\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022EventsList\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_id\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022string\u0022,\u0022name\u0022:\u0022_phone\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022name\u0022:\u0022checkMember\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_id\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022string\u0022,\u0022name\u0022:\u0022_phone\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022name\u0022:\u0022eventRegistration\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getInfoAboutEvents\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022string\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022string\u0022,\u0022name\u0022:\u0022_eventDescription\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022name\u0022:\u0022setEvent\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022}]","ContractName":"aNonEventManagement","CompilerVersion":"v0.5.12\u002Bcommit.7709ece9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://6dcbec587197c5928665542017dc67c7eb70721d0a0021f1e31f82c50dccc1f4"}]