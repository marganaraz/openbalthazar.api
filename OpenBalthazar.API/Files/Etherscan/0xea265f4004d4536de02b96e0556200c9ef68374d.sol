[{"SourceCode":"pragma solidity 0.5.0;\r\n//import \u0022./SafeMath.sol\u0022;\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a \u002B b;\r\n        require(c \u003E= a, \u0022SafeMath: addition overflow\u0022);\r\n        return c;\r\n    }\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b \u003C= a, errorMessage);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {return sub(a, b, \u0022SafeMath: subtraction overflow\u0022);}\r\n}\r\n\r\ncontract LMCH_DOC_v01 {\r\n    using SafeMath for uint256;\r\n    mapping (address =\u003E uint256) private _balances;\r\n    mapping (address =\u003E mapping (address =\u003E uint256)) private _allowances;\r\n\r\n    address private admin;\r\n    string private _name;\r\n    string private _symbol;\r\n    uint8 private _decimals;\r\n    uint256 private _totalSupply;\r\n    string private last_useVersion;\r\n\r\n    struct LockDetails{\r\n        uint256 lockedTokencnt;\r\n        uint256 releaseTime;\r\n    }\r\n    struct managerDetail{\r\n        string managername;\r\n        uint8 managerlevel;\r\n    }\r\n    mapping(address =\u003E LockDetails) private Locked_list;\r\n    address[] private managerList;\r\n    mapping(address =\u003E managerDetail) private Managers;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n\r\n    //////////////////////////////////////// Mint handle //////////////////////////////////////////\r\n\r\n\r\n    function Contadmin() public view returns (address) {return admin;}\r\n    function totalSupply() public view returns (uint256) {return _totalSupply;}\r\n    function name() public view returns (string memory) {return _name;}\r\n    function symbol() public view returns (string memory) {return _symbol;}\r\n    function getlast_useVersion() public view returns (string memory) {return last_useVersion;}\r\n    function decimals() public view returns (uint8) {return _decimals;}\r\n    //////////////////////////////////////// manager handle //////////////////////////////////////////\r\n    function admin_Add_manager(address adr, string memory mname, uint8 mlevel) public returns (bool) {\r\n        managerDetail memory isManager = Managers[msg.sender];\r\n        if(msg.sender != admin){\r\n            require( isManager.managerlevel \u003E 14, \u0022This is manager level over 15 only ecode-01\u0022);\r\n            if(isManager.managerlevel \u003C 15 )mlevel=10;\r\n            if( mlevel \u003E 15 ) mlevel = 15;\r\n        }\r\n        isManager = Managers[adr];\r\n        bytes memory a1 = bytes(isManager.managername);\r\n        bytes memory a2 = bytes(\u0022del\u0022);\r\n        if(keccak256(a1) == keccak256(a2)) {\r\n            isManager.managername = mname;\r\n            isManager.managerlevel = mlevel;\r\n        }else if( isManager.managerlevel != 0 ){\r\n            isManager.managername = mname;\r\n            isManager.managerlevel = mlevel;\r\n        }else{\r\n            isManager = managerDetail(mname, mlevel);\r\n            managerList.push(adr);\r\n        }\r\n        Managers[adr] = isManager;\r\n        return true;\r\n    }\r\n    function get_nth_adr_manager(uint256 nth) public view returns (address) {\r\n        //managerDetail memory isManager = Managers[msg.sender];\r\n        //require( isManager.managerlevel \u003E 14, \u0022This is manager level over 15 only ecode-02\u0022);\r\n        require( nth \u003E 0 \u0026\u0026 nth \u003C= managerList.length,\u0022outofrange\u0022);\r\n        return managerList[nth];\r\n    }\r\n    function remove_manager( address adr) public returns (bool) {\r\n        require( admin != adr, \u0022contract creater cannot be deleted\u0022);\r\n        managerDetail memory isManager = Managers[msg.sender];\r\n        require( isManager.managerlevel \u003E 14, \u0022This is manager level over 15 only ecode-03\u0022);\r\n        isManager = managerDetail(\u0022del\u0022, 0);\r\n        Managers[adr] = isManager;\r\n        return true;\r\n    }\r\n\r\n    function get_count_manager() public view returns (uint256) {\r\n        //managerDetail memory isManager = Managers[msg.sender];\r\n        //require( isManager.managerlevel \u003E 14, \u0022This is manager level over 15 only ecode-04\u0022);\r\n        return managerList.length;\r\n    }\r\n    function get_managername(address adr) public view returns (string memory) {\r\n        //managerDetail memory isManager = Managers[msg.sender];\r\n        //require( isManager.managerlevel \u003E 14, \u0022This is manager level over 15 only ecode-05\u0022);\r\n        managerDetail memory isManager = Managers[adr];\r\n        return isManager.managername;\r\n    }\r\n\r\n    function get_managerLevel(address adr) public view returns (uint8) {\r\n        managerDetail memory isManager = Managers[msg.sender];\r\n        //require( isManager.managerlevel \u003E 14, \u0022This is manager level over 15 only ecode-06\u0022);\r\n        isManager = Managers[adr];\r\n        if( isManager.managerlevel \u003E 0 ){\r\n            return isManager.managerlevel;\r\n        }else{\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    //////////////////////////////////////// Lock token handle //////////////////////////////////////////\r\n    function Lock_wallet(address _adr, uint256 lockamount,uint256 releaseTime ) public returns (bool) {\r\n        require(Managers[msg.sender].managerlevel \u003E 9 , \u0022Latam Manager only\u0022);\r\n        _Lock_wallet(_adr,lockamount,releaseTime);\r\n        return true;\r\n    }\r\n    function _Lock_wallet(address account, uint256 amount,uint256 releaseTime) internal {\r\n        LockDetails memory eaLock = Locked_list[account];\r\n        if( eaLock.releaseTime \u003E 0 ){\r\n            eaLock.lockedTokencnt = amount;\r\n            eaLock.releaseTime = releaseTime;\r\n        }else{\r\n            eaLock = LockDetails(amount, releaseTime);\r\n        }\r\n        Locked_list[account] = eaLock;\r\n    }\r\n    function admin_TransLock(address recipient, uint256 amount,uint256 releaseTime) public returns (bool) {\r\n        require(Managers[msg.sender].managerlevel \u003E 9 , \u0022Latam Manager only\u0022);\r\n        require(recipient != address(0), \u0022ERC20: transfer to the zero address\u0022);\r\n         _Lock_wallet(recipient,amount,releaseTime);\r\n        _transfer(msg.sender, recipient, amount);\r\n        return true;\r\n    }\r\n    function getwithdrawablemax(address account) public view returns (uint256) {\r\n        return Locked_list[account].lockedTokencnt;\r\n    }\r\n\r\n    function getLocked_list(address account) public view returns (uint256) {\r\n        return Locked_list[account].releaseTime;\r\n    }\r\n    function balanceOf(address account) public view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n    function transfer(address recipient, uint256 amount) public returns (bool) {\r\n        _transfer(msg.sender, recipient, amount);\r\n        return true;\r\n    }\r\n    function _transfer(address sender, address recipient, uint256 amount) internal {\r\n        last_useVersion = \u0022Ver 1\u0022;\r\n        require(sender != address(0), \u0022ERC20: transfer from the zero address\u0022);\r\n        require(recipient != address(0), \u0022ERC20: transfer to the zero address\u0022);\r\n        uint256 LockhasTime = Locked_list[sender].releaseTime;\r\n        uint256 LockhasMax = Locked_list[sender].lockedTokencnt;\r\n        if( block.timestamp \u003C LockhasTime){\r\n            uint256 OK1 = _balances[sender] - LockhasMax;\r\n            require( OK1 \u003E= amount , \u0022Your Wallet has time lock\u0022);\r\n        }\r\n\r\n        _balances[sender] = _balances[sender].sub(amount, \u0022ERC20: transfer amount exceeds balance\u0022);\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n    function allowance(address owner, address spender) public view returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n    function approve(address spender, uint256 amount) public returns (bool) {\r\n        _approve(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount, \u0022ERC20: transfer amount exceeds allowance\u0022));\r\n        return true;\r\n    }\r\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\r\n        return true;\r\n    }\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue, \u0022ERC20: decreased allowance below zero\u0022));\r\n        return true;\r\n    }\r\n    function burn(uint256 amount) public returns (bool) {\r\n        _burn(msg.sender, amount);\r\n    }\r\n    function burnFrom(address account, uint256 amount) public returns (bool) {\r\n        _burnFrom(account, amount);\r\n    }\r\n\r\n    function _burn(address account, uint256 amount) internal {\r\n        require(account != address(0), \u0022ERC20: burn from the zero address\u0022);\r\n        require(msg.sender == admin, \u0022Admin only can burn  8547\u0022);\r\n\r\n        _balances[account] = _balances[account].sub(amount, \u0022ERC20: burn amount exceeds balance\u0022);\r\n        _totalSupply = _totalSupply.sub(amount);\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n    function _approve(address owner, address spender, uint256 amount) internal {\r\n        require(owner != address(0), \u0022ERC20: approve from the zero address\u0022);\r\n        require(spender != address(0), \u0022ERC20: approve to the zero address\u0022);\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n    function _burnFrom(address account, uint256 amount) internal {\r\n        //_approve(account, msg.sender, _allowances[account][msg.sender].sub(amount, \u0022ERC20: burn amount exceeds allowance\u0022));\r\n        _burn(account, amount);\r\n    }\r\n\r\n    //////////////////////////////////////// Lock token handle //////////////////////////////////////////\r\n\r\n    function token_mint(address account) public returns (bool){\r\n        require(account != address(0), \u0022ERC20: mint to the zero address\u0022);\r\n        last_useVersion = \u0022First Ver\u0022;\r\n        managerDetail memory isManager = managerDetail(\u0022First Admin\u0022, 100);\r\n        Managers[account] = isManager;\r\n\r\n        admin               = account;\r\n        _name               = \u0022Latam Cash\u0022;\r\n        _symbol             = \u0022LMCH\u0022;\r\n        _decimals           = 18;\r\n        uint256 INIT_SUPPLY = 1000000000 * (10 ** uint256(_decimals));\r\n\r\n        _totalSupply = INIT_SUPPLY;\r\n        _balances[account] = INIT_SUPPLY;\r\n        managerList.push(account);\r\n\r\n        emit Transfer(address(0), account, _totalSupply);\r\n        return true;\r\n    }\r\n\r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022account\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022getLocked_list\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022name\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022approve\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022Contadmin\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022adr\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022remove_manager\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022totalSupply\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022account\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022token_mint\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022sender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022recipient\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transferFrom\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022decimals\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint8\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022addedValue\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022increaseAllowance\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022burn\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022nth\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022get_nth_adr_manager\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_adr\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022lockamount\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022releaseTime\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Lock_wallet\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022adr\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022mname\u0022,\u0022type\u0022:\u0022string\u0022},{\u0022name\u0022:\u0022mlevel\u0022,\u0022type\u0022:\u0022uint8\u0022}],\u0022name\u0022:\u0022admin_Add_manager\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022adr\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022get_managerLevel\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint8\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022adr\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022get_managername\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022account\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022balanceOf\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022recipient\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022releaseTime\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022admin_TransLock\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022account\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022burnFrom\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022symbol\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022subtractedValue\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022decreaseAllowance\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022recipient\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transfer\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022spender\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022allowance\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022get_count_manager\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022account\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022getwithdrawablemax\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getlast_useVersion\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Transfer\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Approval\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"LMCH_DOC_v01","CompilerVersion":"v0.5.0\u002Bcommit.1d4f565a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://fa3f9229089de3cc45c48592369ef19efa0e6c1d90b49a9c3679cbaeaa2b92d8"}]