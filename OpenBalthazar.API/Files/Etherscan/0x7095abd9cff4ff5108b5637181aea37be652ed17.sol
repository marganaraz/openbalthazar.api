[{"SourceCode":"pragma solidity \u003E=0.4.21 \u003C0.6.0;\r\n\r\ncontract MultiSigInterface{\r\n  function update_and_check_reach_majority(uint64 id, string memory name, bytes32 hash, address sender) public returns (bool);\r\n  function is_signer(address addr) public view returns(bool);\r\n}\r\n\r\ncontract MultiSigTools{\r\n  MultiSigInterface public multisig_contract;\r\n  constructor(address _contract) public{\r\n    require(_contract!= address(0x0));\r\n    multisig_contract = MultiSigInterface(_contract);\r\n  }\r\n\r\n  modifier only_signer{\r\n    require(multisig_contract.is_signer(msg.sender), \u0022only a signer can call in MultiSigTools\u0022);\r\n    _;\r\n  }\r\n\r\n  modifier is_majority_sig(uint64 id, string memory name) {\r\n    bytes32 hash = keccak256(abi.encodePacked(msg.sig, msg.data));\r\n    if(multisig_contract.update_and_check_reach_majority(id, name, hash, msg.sender)){\r\n      _;\r\n    }\r\n  }\r\n\r\n  event TransferMultiSig(address _old, address _new);\r\n\r\n  function transfer_multisig(uint64 id, address _contract) public only_signer\r\n  is_majority_sig(id, \u0022transfer_multisig\u0022){\r\n    require(_contract != address(0x0));\r\n    address old = address(multisig_contract);\r\n    multisig_contract = MultiSigInterface(_contract);\r\n    emit TransferMultiSig(old, _contract);\r\n  }\r\n}\r\n\r\n\r\nlibrary AddressArray{\r\n  function exists(address[] storage self, address addr) public view returns(bool){\r\n    for (uint i = 0; i\u003C self.length;i\u002B\u002B){\r\n      if (self[i]==addr){\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function index_of(address[] storage self, address addr) public view returns(uint){\r\n    for (uint i = 0; i\u003C self.length;i\u002B\u002B){\r\n      if (self[i]==addr){\r\n        return i;\r\n      }\r\n    }\r\n    require(false, \u0022AddressArray:index_of, not exist\u0022);\r\n  }\r\n\r\n  function remove(address[] storage self, address addr) public returns(bool){\r\n    uint index = index_of(self, addr);\r\n    self[index] = self[self.length - 1];\r\n\r\n    delete self[self.length-1];\r\n    self.length--;\r\n  }\r\n\r\n  function replace(address[] storage self, address old_addr, address new_addr) public returns(bool){\r\n    uint index = index_of(self, old_addr);\r\n    self[index] = new_addr;\r\n  }\r\n}\r\n\r\nlibrary SafeMath {\r\n    function safeAdd(uint a, uint b) public pure returns (uint c) {\r\n        c = a \u002B b;\r\n        require(c \u003E= a, \u0022add\u0022);\r\n    }\r\n    function safeSub(uint a, uint b) public pure returns (uint c) {\r\n        require(b \u003C= a, \u0022sub\u0022);\r\n        c = a - b;\r\n    }\r\n    function safeMul(uint a, uint b) public pure returns (uint c) {\r\n        c = a * b;\r\n        require(a == 0 || c / a == b, \u0022mul\u0022);\r\n    }\r\n    function safeDiv(uint a, uint b) public pure returns (uint c) {\r\n        require(b \u003E 0, \u0022div\u0022);\r\n        c = a / b;\r\n    }\r\n}\r\n\r\ncontract ERC20TokenBankInterface{\r\n  function balance() public view returns(uint);\r\n  function token() public view returns(address, string memory);\r\n  function issue(address _to, uint _amount) public returns (bool success);\r\n}\r\n\r\ncontract ERC20Salary is MultiSigTools{\r\n  using SafeMath for uint;\r\n  using AddressArray for address[];\r\n\r\n  struct employee_info{\r\n    uint salary;\r\n    uint period;\r\n    uint total;\r\n    uint claimed;\r\n    uint last_block_num;\r\n    uint pause_block_num;\r\n    address leader;\r\n    bool paused;\r\n    bool exists;\r\n  }\r\n\r\n  ERC20TokenBankInterface public erc20bank;\r\n  string public token_name;\r\n  address[] public employee_accounts;\r\n  mapping (address =\u003E employee_info) public employee_infos;\r\n  address public owner;\r\n  bool public is_admin_mode;\r\n\r\n  event ClaimedSalary(address account, address to, uint amount);\r\n\r\n  constructor(string memory _name, address _owner, address _erc20bank, address _multisig) MultiSigTools(_multisig) public{\r\n    token_name = _name;\r\n    erc20bank = ERC20TokenBankInterface(_erc20bank);\r\n    owner = _owner;\r\n    is_admin_mode = true;\r\n  }\r\n\r\n  function change_token_bank(uint64 id, address _addr) public  only_signer is_majority_sig(id, \u0022change_token_bank\u0022){\r\n    require(_addr != address(0x0), \u0022invalid address\u0022);\r\n    erc20bank = ERC20TokenBankInterface(_addr);\r\n  }\r\n\r\n  function balance() public view returns(uint){\r\n    return erc20bank.balance();\r\n  }\r\n\r\n  function token() public view returns(address, string memory){\r\n    return erc20bank.token();\r\n  }\r\n\r\n  function unclaimed_amount() public returns(uint){\r\n    uint total = 0;\r\n    for(uint i = 0; i \u003C employee_accounts.length; \u002B\u002Bi){\r\n      _update_salary(employee_accounts[i]);\r\n      uint t = employee_infos[employee_accounts[i]].total.safeSub(employee_infos[employee_accounts[i]].claimed);\r\n      total = total.safeAdd(t);\r\n    }\r\n    return total;\r\n  }\r\n\r\n  function admin_init_employee(address account, uint last_block_num, uint pause_block_num,\r\n                               uint period, uint salary, uint total, uint claimed, address leader) public returns(bool){\r\n    require(owner == msg.sender, \u0022not owner\u0022);\r\n    require(is_admin_mode, \u0022not admin mode\u0022);\r\n    _primitive_init_employee(account, last_block_num, pause_block_num, false, period, salary, total, claimed, leader);\r\n    return true;\r\n  }\r\n\r\n  function admin_remove_employee(address account) public returns(bool){\r\n    require(owner == msg.sender, \u0022not owner\u0022);\r\n    require(is_admin_mode, \u0022not admin mode\u0022);\r\n    _remove_employee(account);\r\n    return true;\r\n  }\r\n\r\n  function stop_admin_mode() public{\r\n    require(owner == msg.sender, \u0022not owner\u0022);\r\n    is_admin_mode = false;\r\n  }\r\n\r\n  function add_employee(uint64 id, address account, uint last_block_num, uint period, uint salary, address leader)\r\n    public only_signer\r\n    is_majority_sig(id, \u0022add_employee\u0022)\r\n    returns(bool)\r\n    {\r\n      require(!is_admin_mode, \u0022still in admin init mode\u0022);\r\n      require(account != address(0));\r\n      require(last_block_num \u003E0);\r\n      require(period \u003E 0);\r\n      require(salary \u003E 0);\r\n      require(leader != account, \u0022cannot be self leader\u0022);\r\n      if(employee_infos[account].exists) return false;\r\n      _primitive_init_employee(account, last_block_num, 0, false, period, salary, 0, 0, leader);\r\n\r\n      return true;\r\n    }\r\n\r\n    function add_employee_with_meta(uint64 id, address account, uint last_block_num,\r\n                                    uint pause_block_num, bool paused, uint period,\r\n                                    uint salary, uint total, uint claimed, address leader)\r\n    public only_signer\r\n    is_majority_sig(id, \u0022add_employee_with_meta\u0022)\r\n    returns(bool)\r\n                                    {\r\n      require(!is_admin_mode, \u0022still in admin init mode\u0022);\r\n      _primitive_init_employee(account, last_block_num, pause_block_num, paused, period, salary, total, claimed, leader);\r\n      return true;\r\n    }\r\n\r\n    function _primitive_init_employee( address account, uint last_block_num,\r\n                                     uint pause_block_num, bool paused, uint period,\r\n                                     uint salary, uint total, uint claimed, address leader) internal{\r\n      if(!employee_infos[account].exists) {\r\n        employee_accounts.push(account);\r\n      }\r\n\r\n      employee_infos[account].salary = salary;\r\n      employee_infos[account].period = period;\r\n      employee_infos[account].total = total;\r\n      employee_infos[account].claimed = claimed;\r\n      employee_infos[account].last_block_num = last_block_num;\r\n      employee_infos[account].pause_block_num = pause_block_num;\r\n      employee_infos[account].leader = leader;\r\n      employee_infos[account].paused = paused;\r\n      employee_infos[account].exists = true;\r\n    }\r\n\r\n    function remove_employee(uint64 id, address account) public only_signer is_majority_sig(id, \u0022remove_employee\u0022){\r\n      _remove_employee(account);\r\n    }\r\n\r\n    function _remove_employee(address account) internal returns(bool){\r\n      if(!employee_infos[account].exists) return false;\r\n      employee_accounts.remove(account);\r\n      delete employee_infos[account];\r\n      return true;\r\n    }\r\n\r\n    function change_employee_period(uint64 id, address account, uint period) public only_signer is_majority_sig(id, \u0022change_employee_period\u0022){\r\n      require(employee_infos[account].exists);\r\n      _update_salary(account);\r\n      employee_infos[account].period = period;\r\n    }\r\n\r\n    function change_employee_salary(uint64 id, address account, uint salary) public only_signer is_majority_sig(id, \u0022change_employee_salary\u0022){\r\n      require(employee_infos[account].exists);\r\n      _update_salary(account);\r\n      employee_infos[account].salary= salary;\r\n    }\r\n\r\n    function change_employee_leader(uint64 id, address account, address leader) public only_signer is_majority_sig(id, \u0022change_employee_leader\u0022){\r\n      require(employee_infos[account].exists);\r\n      require(account != leader, \u0022account cannot be self leader\u0022);\r\n      _update_salary(account);\r\n      employee_infos[account].leader = leader;\r\n    }\r\n\r\n    function change_employee_status(uint64 id, address account, bool pause) public only_signer is_majority_sig(id, \u0022change_employee_status\u0022){\r\n      require(employee_infos[account].exists);\r\n      require(employee_infos[account].paused != pause, \u0022status already done\u0022);\r\n      _update_salary(account);\r\n      _change_employee_status(account, pause);\r\n    }\r\n\r\n    function _change_employee_status(address account, bool pause) internal {\r\n      employee_infos[account].paused = pause;\r\n      employee_infos[account].pause_block_num = (block.number - employee_infos[account].pause_block_num);\r\n    }\r\n\r\n    function change_subordinate_period(address account, uint period) public {\r\n      require(employee_infos[account].exists);\r\n      require(employee_infos[account].leader == msg.sender, \u0022not your subordinate\u0022);\r\n      _update_salary(account);\r\n      employee_infos[account].period = period;\r\n    }\r\n    function change_subordinate_salary(address account, uint salary) public {\r\n      require(employee_infos[account].exists);\r\n      require(employee_infos[account].leader == msg.sender, \u0022not your subordinate\u0022);\r\n      _update_salary(account);\r\n      employee_infos[account].salary = salary;\r\n    }\r\n    function change_subordinate_status(address account, bool pause) public {\r\n      require(employee_infos[account].exists);\r\n      require(employee_infos[account].leader == msg.sender, \u0022not your subordinate\u0022);\r\n      _update_salary(account);\r\n      _change_employee_status(account, pause);\r\n    }\r\n\r\n    function _update_salary(address account) private {\r\n      employee_info storage ei = employee_infos[account];\r\n      if(ei.paused) return ;\r\n      uint t = block.number.safeSub(ei.pause_block_num);\r\n      t = t.safeSub(ei.last_block_num);\r\n\r\n      uint p = t.safeDiv(ei.period);\r\n      if(p == 0) return ;\r\n      ei.total = ei.total.safeAdd(p.safeMul(ei.salary));\r\n      ei.last_block_num = ei.last_block_num.safeAdd(p.safeMul(ei.period));\r\n    }\r\n\r\n    function update_salary(address account) public{\r\n      require(employee_infos[account].exists, \u0022not exist\u0022);\r\n      _update_salary(account);\r\n    }\r\n\r\n    function self_info() public returns(uint salary, uint period, uint total,\r\n                                       uint claimed, uint last_claim_block_num, uint paused_block_num, bool paused, address leader){\r\n      require(employee_infos[msg.sender].exists, \u0022not exist\u0022);\r\n      _update_salary(msg.sender);\r\n      return get_employee_info_with_account(msg.sender);\r\n    }\r\n\r\n    function claim_salary(address to, uint amount) public returns(bool){\r\n      require(employee_infos[msg.sender].exists);\r\n      _update_salary(msg.sender);\r\n      employee_info storage ei = employee_infos[msg.sender];\r\n      require(ei.total.safeSub(ei.claimed) \u003E= amount);\r\n      require(amount \u003C= balance());\r\n      ei.claimed  = ei.claimed.safeAdd(amount);\r\n      erc20bank.issue(to, amount);\r\n      emit ClaimedSalary(msg.sender, to, amount);\r\n      return true;\r\n    }\r\n\r\n    function get_employee_count() public view returns(uint){\r\n      return employee_accounts.length;\r\n    }\r\n\r\n    function get_employee_info_with_index(uint index) public view returns(uint salary, uint period, uint total, uint claimed, uint last_claim_block_num, uint paused_block_num, bool paused, address leader){\r\n      require(index \u003E= 0 \u0026\u0026 index \u003C employee_accounts.length);\r\n      address account = employee_accounts[index];\r\n      require(employee_infos[account].exists);\r\n      return get_employee_info_with_account(account);\r\n    }\r\n\r\n    function get_employee_info_with_account(address account) public view returns(uint salary, uint period, uint total,\r\n                                                                                 uint claimed, uint last_claim_block_num, uint paused_block_num, bool paused, address leader){\r\n      require(employee_infos[account].exists);\r\n      salary = employee_infos[account].salary;\r\n      period = employee_infos[account].period;\r\n      total = employee_infos[account].total;\r\n      claimed = employee_infos[account].claimed;\r\n      last_claim_block_num = employee_infos[account].last_block_num;\r\n      leader = employee_infos[account].leader;\r\n      paused = employee_infos[account].paused;\r\n      paused_block_num = employee_infos[account].pause_block_num;\r\n    }\r\n}","ABI":"[{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022account\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022admin_remove_employee\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022id\u0022,\u0022type\u0022:\u0022uint64\u0022},{\u0022name\u0022:\u0022account\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022last_block_num\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022period\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022salary\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022leader\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022add_employee\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022id\u0022,\u0022type\u0022:\u0022uint64\u0022},{\u0022name\u0022:\u0022_contract\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022transfer_multisig\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022account\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022period\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022change_subordinate_period\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022account\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022update_salary\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022claim_salary\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022account\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022pause\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022name\u0022:\u0022change_subordinate_status\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022id\u0022,\u0022type\u0022:\u0022uint64\u0022},{\u0022name\u0022:\u0022account\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022salary\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022change_employee_salary\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022self_info\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022salary\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022period\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022total\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022claimed\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022last_claim_block_num\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022paused_block_num\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022paused\u0022,\u0022type\u0022:\u0022bool\u0022},{\u0022name\u0022:\u0022leader\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022erc20bank\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022account\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022get_employee_info_with_account\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022salary\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022period\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022total\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022claimed\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022last_claim_block_num\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022paused_block_num\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022paused\u0022,\u0022type\u0022:\u0022bool\u0022},{\u0022name\u0022:\u0022leader\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022index\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022get_employee_info_with_index\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022salary\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022period\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022total\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022claimed\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022last_claim_block_num\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022paused_block_num\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022paused\u0022,\u0022type\u0022:\u0022bool\u0022},{\u0022name\u0022:\u0022leader\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022stop_admin_mode\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022multisig_contract\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022employee_infos\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022salary\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022period\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022total\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022claimed\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022last_block_num\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022pause_block_num\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022leader\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022paused\u0022,\u0022type\u0022:\u0022bool\u0022},{\u0022name\u0022:\u0022exists\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022account\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022last_block_num\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022pause_block_num\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022period\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022salary\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022total\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022claimed\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022leader\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022admin_init_employee\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022unclaimed_amount\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022owner\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022token_name\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022is_admin_mode\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022id\u0022,\u0022type\u0022:\u0022uint64\u0022},{\u0022name\u0022:\u0022account\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022leader\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022change_employee_leader\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022account\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022salary\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022change_subordinate_salary\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022id\u0022,\u0022type\u0022:\u0022uint64\u0022},{\u0022name\u0022:\u0022account\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022last_block_num\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022pause_block_num\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022paused\u0022,\u0022type\u0022:\u0022bool\u0022},{\u0022name\u0022:\u0022period\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022salary\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022total\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022claimed\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022leader\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022add_employee_with_meta\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022id\u0022,\u0022type\u0022:\u0022uint64\u0022},{\u0022name\u0022:\u0022account\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022period\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022change_employee_period\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022balance\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022get_employee_count\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022id\u0022,\u0022type\u0022:\u0022uint64\u0022},{\u0022name\u0022:\u0022account\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022remove_employee\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022employee_accounts\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022id\u0022,\u0022type\u0022:\u0022uint64\u0022},{\u0022name\u0022:\u0022_addr\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022change_token_bank\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022id\u0022,\u0022type\u0022:\u0022uint64\u0022},{\u0022name\u0022:\u0022account\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022pause\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022name\u0022:\u0022change_employee_status\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022token\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[{\u0022name\u0022:\u0022_name\u0022,\u0022type\u0022:\u0022string\u0022},{\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_erc20bank\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_multisig\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022account\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022ClaimedSalary\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022_old\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022_new\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022TransferMultiSig\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"ERC20Salary","CompilerVersion":"v0.5.10\u002Bcommit.5a6ea5b1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000000000000000080000000000000000000000000c7f3e458a4ecfa84b37a2d00e6ba414bd57fdaa400000000000000000000000021a3dbee594a3419d6037d6d8cee0b1e10bf345c000000000000000000000000d030fffd702b037235676af30612577a7ca201a2000000000000000000000000000000000000000000000000000000000000000f41535265736561726368205465616d0000000000000000000000000000000000","Library":"SafeMath:a37426cdca2be3d52c950d5ca1ffac842b89b06a;AddressArray:0493163ff05664a1add5f87374ef78940ae33bc4","SwarmSource":"bzzr://c3c97c0dd7c1aef779d7bea565ad32acb5717154e85946f167e1de1bb87b6938"}]