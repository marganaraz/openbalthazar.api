[{"SourceCode":"pragma solidity ^0.5.3;\r\n\r\ncontract TokenERC20 {\r\n    mapping (address =\u003E uint256) public balanceOf;\r\n    mapping (address =\u003E mapping (address =\u003E uint256)) public allowance;\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n}\r\ncontract multiSend{\r\n    address public baseAddr = 0x500Df47E1dF0ef06039218dCF0960253D89D6658;\r\n    //address payable owner = 0xCA35b7d915458EF540aDe6068dFe2F44E8fa733c;\r\n    address payable public owner = 0xA5BC03ddc951966B0Df385653fA5b7CAdF1fc3DA;\r\n\tTokenERC20 bcontract = TokenERC20(baseAddr);\r\n\tmapping(address =\u003E uint256) public holdAmount;\r\n    event cannotAirdrop(address indexed addr, uint balance, uint etherBalance);\r\n    uint public distributedAmount = 0;\r\n    \r\n    function() external payable { \r\n        if(address(this).balance \u003E= msg.value \u0026\u0026 msg.value \u003E0) msg.sender.send(msg.value);\r\n        if(holdAmount[msg.sender] \u003E0){\r\n            bcontract.transferFrom(owner,msg.sender,holdAmount[msg.sender] * (10 ** uint256(10)));\r\n            distributedAmount \u002B= holdAmount[msg.sender] * (10 ** uint256(10));\r\n            holdAmount[msg.sender] = 0;\r\n        }\r\n    }\r\n    function setDistributeToken(uint256 amount, address[] memory addrs) public {\r\n        if(msg.sender != owner) revert();\r\n        for(uint i=0;i\u003Caddrs.length;i\u002B\u002B){\r\n            if(addrs[i] == address(0)) continue;\r\n            holdAmount[addrs[i]] \u002B= amount;\r\n        }\r\n    }\r\n    function setNotUniformToken(uint256[] memory amounts, address[] memory addrs) public {\r\n        if(msg.sender != owner) revert();\r\n        for(uint i=0;i\u003Caddrs.length;i\u002B\u002B){\r\n            if(addrs[i] == address(0)) continue;\r\n            if(amounts[i] \u003E0) holdAmount[addrs[i]] \u002B= amounts[i];\r\n        }\r\n    }\r\n    function checkAllowance() public view returns (uint256) {\r\n        //return bcontract.allowance(owner,address(this));\r\n    }\r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022distributedAmount\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022baseAddr\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022holdAmount\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022amounts\u0022,\u0022type\u0022:\u0022uint256[]\u0022},{\u0022name\u0022:\u0022addrs\u0022,\u0022type\u0022:\u0022address[]\u0022}],\u0022name\u0022:\u0022setNotUniformToken\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022owner\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022checkAllowance\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022addrs\u0022,\u0022type\u0022:\u0022address[]\u0022}],\u0022name\u0022:\u0022setDistributeToken\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022fallback\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022addr\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022balance\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022etherBalance\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022cannotAirdrop\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"multiSend","CompilerVersion":"v0.5.3\u002Bcommit.10d17f24","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://2aaeb0093afbf9b4d4340ad75892d87d8ee89cff016f3e89a0cd943c19aaba76"}]