[{"SourceCode":"pragma solidity 0.5.12;\r\n\r\ncontract WardsLike {\r\n    function rely(address) public;\r\n    function deny(address) public;\r\n}\r\n\r\ncontract FileLike {\r\n    function file(bytes32, uint) public;\r\n    function file(bytes32, address) public;\r\n}\r\n\r\ncontract FlopLike {\r\n    function beg() public returns(uint);\r\n    function pad() public returns(uint);\r\n    function ttl() public returns(uint);\r\n    function tau() public returns(uint);\r\n    function cage() public;\r\n}\r\n\r\ncontract PauseLike {\r\n    function delay() public view returns (uint256);\r\n    function plot(address, bytes32, bytes memory, uint256) public;\r\n    function exec(address, bytes32, bytes memory, uint256) public;\r\n}\r\n\r\ncontract MomLike {\r\n    function setPep(address) external;\r\n}\r\n\r\ncontract DssFlopReplaceSpellAction {\r\n    address constant public newFLOPPER = 0x4D95A049d5B0b7d32058cd3F2163015747522e99;\r\n    // address constant public MKRAUTHORITY = 0xc725e52E55929366dFdF86ac4857Ae272e8BF13D;\r\n    address constant public VAT = 0x35D1b3F3D7966A1DFe207aa4514C12a259A0492B;\r\n    address constant public VOW = 0xA950524441892A31ebddF91d3cEEFa04Bf454466;\r\n    address constant public oldFLOPPER = 0xBE00FE8Dfd9C079f1E5F5ad7AE9a3Ad2c571FCAC;\r\n    address constant public SAIMOM = 0xF2C5369cFFb8Ea6284452b0326e326DbFdCb867C;\r\n    address constant public MKRPEP = 0x99041F808D598B782D5a3e498681C2452A31da08;\r\n\r\n\r\n    function execute() public {\r\n        // # Setup new Flopper #\r\n        // file same beg on new Flopper\r\n        FileLike(newFLOPPER).file(\u0022beg\u0022, FlopLike(oldFLOPPER).beg());\r\n        // file same pad on new Flopper\r\n        FileLike(newFLOPPER).file(\u0022pad\u0022, FlopLike(oldFLOPPER).pad());\r\n        // file same ttl on new Flopper\r\n        FileLike(newFLOPPER).file(\u0022ttl\u0022, FlopLike(oldFLOPPER).ttl());\r\n        // file same tau on new Flopper\r\n        FileLike(newFLOPPER).file(\u0022tau\u0022, FlopLike(oldFLOPPER).tau());\r\n        // rely on the vow\r\n        WardsLike(newFLOPPER).rely(VOW);\r\n        // Vat relies on new Flopper\r\n        WardsLike(VAT).rely(newFLOPPER);\r\n        // File new Flopper on Vow\r\n        FileLike(VOW).file(\u0022flopper\u0022, newFLOPPER);\r\n        // WardsLike(MKRAUTHORITY).rely(newFLOPPER);\r\n\r\n        // # Close down Old Flopper #\r\n        WardsLike(oldFLOPPER).deny(VOW);\r\n        FlopLike(oldFLOPPER).cage();\r\n        // WardsLike(MKRAUTHORITY).deny(oldFLOPPER);\r\n\r\n        // change Pep in SCD to Medianizer\r\n        MomLike(SAIMOM).setPep(MKRPEP);\r\n    }\r\n}\r\n\r\ncontract DssFlopReplaceSpell {\r\n    PauseLike public pause =\r\n        PauseLike(0xbE286431454714F511008713973d3B053A2d38f3);\r\n    address   public action;\r\n    bytes32   public tag;\r\n    uint256   public eta;\r\n    bytes     public sig;\r\n    bool      public done;\r\n\r\n    constructor() public {\r\n        sig = abi.encodeWithSignature(\u0022execute()\u0022);\r\n        action = address(new DssFlopReplaceSpellAction());\r\n        bytes32 _tag;\r\n        address _action = action;\r\n        assembly { _tag := extcodehash(_action) }\r\n        tag = _tag;\r\n    }\r\n\r\n    function cast() public {\r\n        require(!done, \u0022spell-already-cast\u0022);\r\n        done = true;\r\n        pause.plot(action, tag, sig, now);\r\n        pause.exec(action, tag, sig, now);\r\n    }\r\n}","ABI":"[{\u0022inputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022action\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022cast\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022done\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022eta\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022pause\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022contract PauseLike\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022sig\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bytes\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bytes\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022tag\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022}]","ContractName":"DssFlopReplaceSpell","CompilerVersion":"v0.5.12\u002Bcommit.7709ece9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://8eb3bbcf80968cd5f60cd7b118df5c3a35d69c96a45ca0aff0a04a3879ddfe53"}]