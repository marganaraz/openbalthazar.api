[{"SourceCode":"pragma solidity ^0.5.2;\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract nota { \r\n    \r\naddress owner;\r\n\r\nbool votefinish;\r\n\r\n    struct Voter {\r\n        bool voted;\r\n        bool whitelist;\r\n    }\r\nstruct candidate {\r\n        string name;\r\n        uint256 voteCount;\r\n    }\r\n\r\nmapping(address =\u003E Voter) voter;\r\nmapping(string =\u003E candidate) candidates;\r\n// uint256 coa = 0;\r\nuint256 setupcheck = 1;\r\nstring[] candiname;\r\nfunction setup (address[] memory _addresses, uint256 countofaddress, string[] memory _candidate, uint256 countofcandidate) public {\r\n    if(setupcheck == 1){\r\n    // coa = countofaddress;\r\n    owner = msg.sender;\r\n    for(uint i=0; i\u003Ccountofaddress; i\u002B\u002B){\r\n        voter[_addresses[i]].voted = false;\r\n        voter[_addresses[i]].whitelist = true;\r\n    }\r\n    for(uint i=0; i\u003Ccountofcandidate; i\u002B\u002B){\r\n        // _candidate[i] = candiname[i];\r\n        candidates[_candidate[i]] = candidate(_candidate[i], 0);\r\n        // candidates[_candidate[i]].name = _candidate[i];\r\n        // candidates[_candidate[i]].voteCount = 0;\r\n    }\r\n        setupcheck = 0;\r\n    }\r\n}\r\n\r\nmodifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\nfunction isRegistered() public view returns (bool registered) {\r\n    if(voter[msg.sender].whitelist == true)\r\n        registered = true;\r\n    else\r\n        registered = false;\r\n    return registered;\r\n}\r\n\r\nfunction vote(string memory votetocandidate) public {\r\n    if(votefinish != true \u0026\u0026 isRegistered() == true \u0026\u0026 voter[msg.sender].voted == false){\r\n    candidates[votetocandidate].voteCount \u002B\u002B;\r\n    voter[msg.sender].voted = true;\r\n    }\r\n    else{\r\n\r\n    }\r\n}\r\nfunction checkvote() public view returns (bool) {\r\n    return voter[msg.sender].voted;\r\n}\r\nfunction endvote() public onlyOwner{\r\nvotefinish = true;\r\n}\r\n\r\nfunction getdata() public view returns (uint256, uint256, uint256, uint256, uint256){\r\nreturn (candidates[\u0022James Lee\u0022].voteCount , candidates[\u0022Mark Kim\u0022].voteCount , candidates[\u0022Jun Park\u0022].voteCount , candidates[\u0022Yuna Lim\u0022].voteCount , candidates[\u0022Olivia Ha\u0022].voteCount  );\r\n}\r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022isRegistered\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022registered\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getdata\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022endvote\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_addresses\u0022,\u0022type\u0022:\u0022address[]\u0022},{\u0022name\u0022:\u0022countofaddress\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_candidate\u0022,\u0022type\u0022:\u0022string[]\u0022},{\u0022name\u0022:\u0022countofcandidate\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022setup\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022checkvote\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022votetocandidate\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022name\u0022:\u0022vote\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022}]","ContractName":"nota","CompilerVersion":"v0.5.2\u002Bcommit.1df8f40c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://313ce64e2fd62d7c4e36eed5e94f086ae16c4514d44ebeee33165e6017e7b0d4"}]