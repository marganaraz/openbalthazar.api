[{"SourceCode":"pragma solidity ^0.5.7;\r\n\r\ninterface ERC20Interface {\r\n    function allowance(address, address) external view returns (uint);\r\n    function balanceOf(address) external view returns (uint);\r\n    function approve(address, uint) external;\r\n    function transfer(address, uint) external returns (bool);\r\n    function transferFrom(address, address, uint) external returns (bool);\r\n}\r\n\r\n\r\ncontract DSMath {\r\n    function add(uint x, uint y) internal pure returns (uint z) {\r\n        require((z = x \u002B y) \u003E= x, \u0022math-not-safe\u0022);\r\n    }\r\n\r\n    function mul(uint x, uint y) internal pure returns (uint z) {\r\n        require(y == 0 || (z = x * y) / y == x, \u0022math-not-safe\u0022);\r\n    }\r\n\r\n    uint constant WAD = 10 ** 18;\r\n\r\n    function wmul(uint x, uint y) internal pure returns (uint z) {\r\n        z = add(mul(x, y), WAD / 2) / WAD;\r\n    }\r\n}\r\n\r\n\r\ncontract ImportResolver is DSMath {\r\n    event LogTokensImport(address owner, uint percentage, address[] tokenAddr, uint[] tokenBalArr);\r\n\r\n    function importTokens(uint toConvert, address[] memory tokenAddrArr) public {\r\n        uint[] memory tokenBalArr = new uint[](tokenAddrArr.length);\r\n\r\n         // transfer tokens to InstaDApp smart wallet from user wallet\r\n        for (uint i = 0; i \u003C tokenAddrArr.length; i\u002B\u002B) {\r\n            address erc20 = tokenAddrArr[i];\r\n            ERC20Interface tknContract = ERC20Interface(erc20);\r\n            uint tokenBal = tknContract.balanceOf(msg.sender);\r\n            tokenBal = toConvert \u003C 10**18 ? wmul(tokenBal, toConvert) : tokenBal;\r\n            if (tokenBal \u003E 0) {\r\n                require(tknContract.transferFrom(msg.sender, address(this), tokenBal), \u0022Allowance?\u0022);\r\n            }\r\n            tokenBalArr[i] = tokenBal;\r\n        }\r\n\r\n        emit LogTokensImport(\r\n            msg.sender,\r\n            toConvert,\r\n            tokenAddrArr,\r\n            tokenBalArr\r\n        );\r\n    }\r\n}\r\n\r\n\r\ncontract InstaTokenImport is ImportResolver {\r\n    function() external payable {}\r\n}","ABI":"[{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022toConvert\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022tokenAddrArr\u0022,\u0022type\u0022:\u0022address[]\u0022}],\u0022name\u0022:\u0022importTokens\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022fallback\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022percentage\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022tokenAddr\u0022,\u0022type\u0022:\u0022address[]\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022tokenBalArr\u0022,\u0022type\u0022:\u0022uint256[]\u0022}],\u0022name\u0022:\u0022LogTokensImport\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"InstaTokenImport","CompilerVersion":"v0.5.7\u002Bcommit.6da8b019","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://029ba3afbe552d954e7aaf7c1c7f016e38250300bf912178e46f6bc3057d96c4"}]