[{"SourceCode":"pragma solidity \u003E=0.5.0 \u003C0.6.0;\r\n\r\ncontract Bankshot {\r\n   address payable public owner;\r\n   uint256 private vigBalance;\r\n   uint256 public ethVig;\r\n   uint256 public minEthDeposit;\r\n   uint256 public maxEthDeposit;\r\n   bool public areSubmissionsLocked;\r\n\r\n   struct Submission {\r\n       bytes32 sHash;\r\n       uint256 deposit;\r\n       bool isRevealed;\r\n   }\r\n\r\n   mapping(address =\u003E Submission[]) submissions;\r\n\r\n   event Publication(\r\n       address indexed user,\r\n       uint256 indexed subID,\r\n       uint256 indexed date\r\n   );\r\n\r\n   event Revelation(\r\n       address indexed user,\r\n       uint256 indexed subID,\r\n       uint256 indexed date,\r\n       bytes revelation\r\n   );\r\n\r\n    constructor(uint256 _ethVig,\r\n                uint256 _minEthDeposit) public {\r\n\r\n        owner = msg.sender;\r\n        ethVig = _ethVig;\r\n        minEthDeposit = _minEthDeposit;\r\n        maxEthDeposit = 1 ether;\r\n        areSubmissionsLocked = false;\r\n    }\r\n\r\n    function minEthPayable() public view returns (uint256) {\r\n        return ethVig \u002B minEthDeposit;\r\n    }\r\n\r\n    function setEthVig(uint256 _newVig) public onlyOwner {\r\n        ethVig = _newVig;\r\n    }\r\n\r\n    function setMinEthDeposit(uint256 _newMinEthDeposit) public onlyOwner {\r\n        minEthDeposit = _newMinEthDeposit;\r\n    }\r\n\r\n    function setMaxEthDeposit(uint256 _newMaxEthDeposit) public onlyOwner {\r\n        maxEthDeposit = _newMaxEthDeposit;\r\n    }\r\n\r\n    function withdrawVig(uint256 _amount) public onlyOwner {\r\n        require(_amount \u003C= vigBalance, \u0022WITHDRAW_LIMIT\u0022);\r\n\r\n        vigBalance -= _amount;\r\n        owner.transfer(_amount);\r\n    }\r\n\r\n    function lockSubmissions() public onlyOwner {\r\n        areSubmissionsLocked = true;\r\n    }\r\n\r\n    function submitHash(bytes32 _hash) public payable paysMin paysUnderMax isUnlocked {\r\n        uint256 deposit = msg.value - ethVig;\r\n        submissions[msg.sender].push(Submission({ sHash: _hash, deposit: deposit, isRevealed: false}));\r\n        vigBalance \u002B= (msg.value - deposit);\r\n\r\n        emit Publication(msg.sender, submissions[msg.sender].length - 1, block.timestamp); // possible re-entrancy issue w/ submissions length?\r\n    }\r\n\r\n    function submissionsForAddress(address _address) public view returns(bytes32[] memory hashes, uint256[] memory deposits) {\r\n        Submission[] storage subs = submissions[_address];\r\n\r\n        hashes = new bytes32[](subs.length);\r\n        deposits = new uint256[](subs.length);\r\n\r\n        for (uint i = 0; i \u003C subs.length; i\u002B\u002B) {\r\n            hashes[i] = subs[i].sHash;\r\n            deposits[i] = subs[i].deposit;\r\n        }\r\n\r\n        return (hashes, deposits);\r\n    }\r\n\r\n    function revealSubmission(uint _subID, bytes memory _revelation) public {\r\n        Submission storage sub = submissions[msg.sender][_subID];\r\n        require(!sub.isRevealed, \u0022ALREADY_REVEALED\u0022);\r\n\r\n        bytes32 revealHash = keccak256(abi.encodePacked(_revelation));\r\n        require(revealHash == sub.sHash, \u0022INVALID_REVEAL\u0022);\r\n\r\n        sub.isRevealed = true;\r\n        emit Revelation(msg.sender, _subID, block.timestamp, _revelation);\r\n\r\n        msg.sender.transfer(sub.deposit);\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \u0022ONLY_OWNER\u0022);\r\n        _;\r\n    }\r\n\r\n    modifier paysMin() {\r\n        require(msg.value \u003E= minEthPayable(), \u0027INSUFFICIENT_FUNDS\u0027);\r\n        _;\r\n    }\r\n\r\n    modifier paysUnderMax() {\r\n        uint256 deposit = msg.value - ethVig;\r\n        require(deposit \u003C= maxEthDeposit, \u0027OVERSIZE_DEPOSIT\u0027);\r\n        _;\r\n    }\r\n\r\n    modifier isUnlocked() {\r\n        require(!areSubmissionsLocked, \u0027SUBS_LOCKED\u0027);\r\n        _;\r\n    }\r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022areSubmissionsLocked\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_hash\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022submitHash\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022ethVig\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022lockSubmissions\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_address\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022submissionsForAddress\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022hashes\u0022,\u0022type\u0022:\u0022bytes32[]\u0022},{\u0022name\u0022:\u0022deposits\u0022,\u0022type\u0022:\u0022uint256[]\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022minEthDeposit\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022minEthPayable\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022owner\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_subID\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_revelation\u0022,\u0022type\u0022:\u0022bytes\u0022}],\u0022name\u0022:\u0022revealSubmission\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022withdrawVig\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022maxEthDeposit\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_newVig\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022setEthVig\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_newMinEthDeposit\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022setMinEthDeposit\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_newMaxEthDeposit\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022setMaxEthDeposit\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[{\u0022name\u0022:\u0022_ethVig\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_minEthDeposit\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022subID\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022date\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Publication\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022subID\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022date\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022revelation\u0022,\u0022type\u0022:\u0022bytes\u0022}],\u0022name\u0022:\u0022Revelation\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"Bankshot","CompilerVersion":"v0.5.8\u002Bcommit.23d335f2","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000470de4df820000","Library":"","SwarmSource":"bzzr://8256a6930e78b325d2b94dffe7c72916a602a33cfc72aac3dd26e8abf1426af8"}]