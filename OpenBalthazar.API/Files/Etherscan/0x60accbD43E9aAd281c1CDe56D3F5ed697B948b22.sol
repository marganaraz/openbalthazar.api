[{"SourceCode":"pragma solidity ^0.5.9;\r\ncontract sproof {\r\n    event lockHashEvent(address indexed from, bytes32 indexed hash);\r\n    \r\n    address payable owner;\r\n\r\n\r\n    mapping(address =\u003E bool) sproofAccounts;\r\n\r\n    uint  costToLockHash = 0;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function addSproofAccount(address _addr) public{\r\n        require(msg.sender == owner);\r\n        sproofAccounts[_addr] = true;\r\n    }\r\n    \r\n      function updateOwner(address payable newOwner) public{\r\n        require(msg.sender == owner);\r\n        owner = newOwner;\r\n    }\r\n    \r\n     function removeSproofAccount(address _addr) public{\r\n        require(msg.sender == owner);\r\n        sproofAccounts[_addr] = false;\r\n    }\r\n\r\n\r\n    function setCost (uint newCostToLockHash) public {\r\n        require (msg.sender == owner);\r\n        costToLockHash = newCostToLockHash;\r\n    }\r\n    \r\n   function getCost() public view returns(uint)  {\r\n        return costToLockHash;\r\n    }\r\n\r\n    function lockHash(bytes32 hash) public payable{\r\n        if(sproofAccounts[msg.sender] != true)\r\n            require(msg.value \u003E= costToLockHash);\r\n        emit lockHashEvent(msg.sender, hash);\r\n    }\r\n    \r\n    \r\n    function lockHashProxy(address _addr, bytes32 hash, uint8 v, bytes32 r, bytes32 s) public payable {\r\n        require(ecrecover(hash, v, r, s) == _addr);\r\n        if (sproofAccounts[msg.sender] != true)\r\n            require(msg.value \u003E= costToLockHash);\r\n        emit lockHashEvent(_addr, hash);\r\n    }\r\n \r\n    function lockHashesProxy(address [] memory _addresses, bytes32 [] memory hashes, uint8[] memory vs, bytes32 [] memory rs, bytes32 [] memory ss) public payable {\r\n\r\n        if (sproofAccounts[msg.sender] != true)\r\n            require(msg.value \u003E= _addresses.length*costToLockHash);\r\n\r\n        for (uint i=0; i \u003C _addresses.length; i\u002B\u002B) {\r\n            require(ecrecover(hashes[i], vs[i], rs[i], ss[i]) == _addresses[i]);\r\n            emit lockHashEvent(_addresses[i], hashes[i]);\r\n        }\r\n    }\r\n\r\n    function payout() public{\r\n        require (msg.sender == owner);\r\n        owner.transfer(address(this).balance);\r\n    }\r\n}","ABI":"[{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_addr\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022hash\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022internalType\u0022:\u0022uint8\u0022,\u0022name\u0022:\u0022v\u0022,\u0022type\u0022:\u0022uint8\u0022},{\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022r\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022s\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022lockHashProxy\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022newCostToLockHash\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022setCost\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_addr\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022addSproofAccount\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022hash\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022lockHash\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022payout\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022updateOwner\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_addr\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022removeSproofAccount\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getCost\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address[]\u0022,\u0022name\u0022:\u0022_addresses\u0022,\u0022type\u0022:\u0022address[]\u0022},{\u0022internalType\u0022:\u0022bytes32[]\u0022,\u0022name\u0022:\u0022hashes\u0022,\u0022type\u0022:\u0022bytes32[]\u0022},{\u0022internalType\u0022:\u0022uint8[]\u0022,\u0022name\u0022:\u0022vs\u0022,\u0022type\u0022:\u0022uint8[]\u0022},{\u0022internalType\u0022:\u0022bytes32[]\u0022,\u0022name\u0022:\u0022rs\u0022,\u0022type\u0022:\u0022bytes32[]\u0022},{\u0022internalType\u0022:\u0022bytes32[]\u0022,\u0022name\u0022:\u0022ss\u0022,\u0022type\u0022:\u0022bytes32[]\u0022}],\u0022name\u0022:\u0022lockHashesProxy\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022hash\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022lockHashEvent\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"sproof","CompilerVersion":"v0.5.11\u002Bcommit.c082d0b4","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://89f4ae56f1150e394bb813b57d8593c363e0206e41732c2f029db66467b12b98"}]