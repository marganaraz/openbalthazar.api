[{"SourceCode":"/**\r\n *  @authors: [@mtsalenc]\r\n *  @reviewers: []\r\n *  @auditors: []\r\n *  @bounties: []\r\n *  @deployments: []\r\n */\r\n\r\npragma solidity 0.5.10;\r\n\r\ninterface ExchangeRegistry {\r\n    function getExchange(address _token) external view returns (address);\r\n}\r\n\r\n/** @title ExchangeView\r\n *  Utility view contract to get token exchange addresses for multiple token contracts at once.\r\n */\r\ncontract ExchangeView {\r\n\r\n    /** @dev Fetch up to 500 exchange addresses.\r\n     *  @param _registry The registry from where to fetch the exchange contracts.\r\n     *  @param _tokenAddresses The addresses of the token contracts to query.\r\n     *  @return exchanges The addresses of the exchanges, if available.\r\n     */\r\n    function getExchanges(address _registry, address[] calldata _tokenAddresses) external view returns (address[500] memory exchanges) {\r\n        ExchangeRegistry registry = ExchangeRegistry(_registry);\r\n        for (uint i = 0; i \u003C _tokenAddresses.length; i\u002B\u002B)\r\n            exchanges[i] = registry.getExchange(_tokenAddresses[i]);\r\n    }\r\n    \r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_registry\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_tokenAddresses\u0022,\u0022type\u0022:\u0022address[]\u0022}],\u0022name\u0022:\u0022getExchanges\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022exchanges\u0022,\u0022type\u0022:\u0022address[500]\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022}]","ContractName":"ExchangeView","CompilerVersion":"v0.5.10\u002Bcommit.5a6ea5b1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://3582e40a21a8d401c7db023a4ff39b3e9ac33ecd37872d41047285d9a2e6e28f"}]