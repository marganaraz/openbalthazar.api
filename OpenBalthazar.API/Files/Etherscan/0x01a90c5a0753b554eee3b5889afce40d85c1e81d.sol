[{"SourceCode":"pragma solidity ^0.5.11;\r\n\r\n// ----------------------------------------------------------------------------\r\n// forgivenet 1st phase contract\r\n// Request forgiveness and receive an FRGVN token in return\r\n// More info @ forgivenet.co.uk\r\n//\r\n//\r\n// (c) Nandi Niramisa \u0026 Co Limited 2019. The MIT Licence. https://opensource.org/licenses/MIT\r\n// ----------------------------------------------------------------------------\r\n\r\n\r\ncontract Owned {\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    event OwnershipTransferred(address _from, address _to);\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = address(0);\r\n    }\r\n}\r\n\r\n\r\ncontract ERC20TokenInterface {\r\n\r\n    function totalSupply() public view returns (uint256);\r\n    function balanceOf(address _owner) public view returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool success);\r\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining);\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\n\r\n\r\ncontract RequestForForgiveness is Owned {\r\n\r\n    ERC20TokenInterface private token;\r\n\r\n    // receiving account\r\n    address payable private receivingAccount;\r\n\r\n    // Owner adds receiving account for accounting purposes\r\n    function addEthReceivingAccount(address addr) public onlyOwner {\r\n        require(addr != address(0));\r\n        receivingAccount = address(uint160(addr));\r\n    }\r\n\r\n    // Owner adds ForgivenetToken address\r\n    function addToken(address ercTokenAddress) public onlyOwner {\r\n        require(ercTokenAddress != address(0));\r\n        token = ERC20TokenInterface(ercTokenAddress);\r\n    }\r\n\r\n    // Owner deposits token into the contract\r\n    function depositToken(uint256 amount) public onlyOwner {\r\n        token = ERC20TokenInterface(token);\r\n        require(token.transferFrom(msg.sender, address(this), amount) == true);\r\n    }\r\n    \r\n    \r\n    \r\n    // A minimum value for a request for forgiveness transaction may disincentivize bad behaviour\r\n    uint private disincentive;\r\n    \r\n    function setDisincentiveInWei(uint number) public onlyOwner {\r\n        disincentive = number;\r\n    }\r\n\r\n    function getDisincentive() public view returns (uint) {\r\n        return disincentive;\r\n    }\r\n    \r\n    \r\n    \r\n    // Make Ether payment into receiving account and call withdrawToken with the request\r\n    function requestForgiveness(string memory forgiveness_request) public payable {\r\n        \r\n        uint256 length = bytes(forgiveness_request).length;\r\n        require(length \u003E 500 \u0026\u0026 length \u003C 2000);\r\n        string memory requestStr = forgiveness_request;\r\n  \r\n        require(msg.sender != address(0));\r\n        require(msg.value \u003E disincentive);\r\n        receivingAccount.transfer(msg.value);\r\n        withdrawToken(msg.sender, msg.value, requestStr);\r\n    }\r\n\r\n\r\n    // Send 1 FRGVN token to recipient\r\n    function withdrawToken(address recipient, uint256 amount, string memory requestString) internal {\r\n        // placeholder variable for request\r\n        string memory data = requestString;\r\n        require(recipient != address(0));\r\n        require(bytes(data).length \u003E 0);\r\n        token = ERC20TokenInterface(token);\r\n        require(token.transfer(recipient, 1) == true);\r\n        emit RequestMade(recipient, data, amount, now);\r\n    }\r\n\r\n    // events\r\n    event RequestMade(address indexed from, string data, uint256 donation, uint256 timestamp);\r\n\r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getDisincentive\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022depositToken\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022string\u0022,\u0022name\u0022:\u0022forgiveness_request\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022name\u0022:\u0022requestForgiveness\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022acceptOwnership\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022owner\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022addr\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022addEthReceivingAccount\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022ercTokenAddress\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022addToken\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022newOwner\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022transferOwnership\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022number\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022setDisincentiveInWei\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022string\u0022,\u0022name\u0022:\u0022data\u0022,\u0022type\u0022:\u0022string\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022donation\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022timestamp\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022RequestMade\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022OwnershipTransferred\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"RequestForForgiveness","CompilerVersion":"v0.5.11\u002Bcommit.c082d0b4","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://63841538993c3ef4ca196b43dac1a0348d0244d54af6f619b8af987cb27ecdc2"}]