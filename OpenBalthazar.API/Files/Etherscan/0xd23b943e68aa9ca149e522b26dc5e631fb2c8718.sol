[{"SourceCode":"pragma solidity ^0.5.7;\r\n\r\n\r\nlibrary SafeMath {\r\n\r\n  function mul(uint a, uint b) internal pure returns (uint) {\r\n    uint c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint a, uint b) internal pure returns (uint) {\r\n    uint c = a / b;\r\n    return c;\r\n  }\r\n\r\n  function sub(uint a, uint b) internal pure returns (uint) {\r\n    assert(b \u003C= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint a, uint b) internal pure returns (uint) {\r\n    uint c = a \u002B b;\r\n    assert(c \u003E= a);\r\n    return c;\r\n  }\r\n\r\n}\r\n\r\n\r\ncontract Ownable {\r\n\r\n  address public owner;\r\n  address public mainAddress;\r\n\r\n  constructor() public {\r\n    owner = msg.sender;\r\n    mainAddress = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner, \u0022Only for owner\u0022);\r\n    _;\r\n  }\r\n\r\n  function transferOwnership(address _owner) public onlyOwner {\r\n    owner = _owner;\r\n  }\r\n\r\n}\r\n\r\ncontract GoEther is Ownable {\r\n    \r\n    event Register(uint indexed _user, uint indexed _referrer, uint indexed _introducer, uint _time);\r\n    event SponsorChange(uint indexed _user, uint indexed _referrer, uint indexed _introducer, uint _time);\r\n    event Upgrade(uint indexed _user, uint _star, uint _price, uint _time);\r\n    event Payment(uint indexed _user, uint indexed _referrer, uint indexed _introducer, uint _star, uint _money, uint _fee, uint _time);\r\n    event LostMoney(uint indexed _referrer, uint indexed _referral, uint _star, uint _money, uint _time);\r\n\r\n    mapping (uint =\u003E uint) public STAR_PRICE;\r\n    mapping (uint =\u003E uint) public STAR_FEE;\r\n    uint REFERRER_1_STAR_LIMIT = 3;\r\n\r\n    struct UserStruct {\r\n        bool isExist;\r\n        address wallet;\r\n        uint referrerID;\r\n        uint introducerID;\r\n        address[] referral;\r\n        mapping (uint =\u003E bool) starActive;\r\n    }\r\n\r\n    mapping (uint =\u003E UserStruct) public users;\r\n    mapping (address =\u003E uint) public userList;\r\n\r\n    uint public currentUserID = 0;\r\n    uint public total = 0 ether;\r\n    uint public totalFees = 0 ether;\r\n    bool public paused = false;\r\n    bool public allowSponsorChange = true;\r\n\r\n    constructor() public {\r\n\r\n        //Cycle 1\r\n        STAR_PRICE[1] = 0.10 ether;\r\n        STAR_PRICE[2] = 0.24 ether;\r\n        STAR_PRICE[3] = 1.20 ether;\r\n        STAR_PRICE[4] = 4.32 ether;\r\n        STAR_PRICE[5] = 45.50 ether;\r\n        STAR_PRICE[6] = 50.00 ether;\r\n        STAR_PRICE[7] = 100.00 ether;\r\n        STAR_PRICE[8] = 350.00 ether;\r\n\r\n        //Cycle 2\r\n        STAR_PRICE[9] = 585.00 ether;\r\n        STAR_PRICE[10] = 900.00 ether;\r\n        STAR_PRICE[11] = 1450.00 ether;\r\n        STAR_PRICE[12] = 2700.00 ether;\r\n        STAR_PRICE[13] = 5700.00 ether;\r\n        STAR_PRICE[14] = 7700.00 ether;\r\n        STAR_PRICE[15] = 12000.00 ether;\r\n        STAR_PRICE[16] = 18000.00 ether;\r\n\r\n        STAR_FEE[1] = 0.02 ether;\r\n        STAR_FEE[3] = 0.60 ether;\r\n        STAR_FEE[5] = 10.00 ether;\r\n        STAR_FEE[7] = 15.00 ether;\r\n        STAR_FEE[8] = 30.00 ether;\r\n        STAR_FEE[9] = 45.00 ether;\r\n        STAR_FEE[13] = 500.00 ether;\r\n\r\n        UserStruct memory userStruct;\r\n        currentUserID\u002B\u002B;\r\n\r\n        userStruct = UserStruct({\r\n            isExist : true,\r\n            wallet : mainAddress,\r\n            referrerID : 0,\r\n            introducerID : 0,\r\n            referral : new address[](0)\r\n        });\r\n\r\n        users[currentUserID] = userStruct;\r\n        userList[mainAddress] = currentUserID;\r\n\r\n        users[currentUserID].starActive[1] = true;\r\n        users[currentUserID].starActive[2] = true;\r\n        users[currentUserID].starActive[3] = true;\r\n        users[currentUserID].starActive[4] = true;\r\n        users[currentUserID].starActive[5] = true;\r\n        users[currentUserID].starActive[6] = true;\r\n        users[currentUserID].starActive[7] = true;\r\n        users[currentUserID].starActive[8] = true;\r\n        users[currentUserID].starActive[9] = true;\r\n        users[currentUserID].starActive[10] = true;\r\n        users[currentUserID].starActive[11] = true;\r\n        users[currentUserID].starActive[12] = true;\r\n        users[currentUserID].starActive[13] = true;\r\n        users[currentUserID].starActive[14] = true;\r\n        users[currentUserID].starActive[15] = true;\r\n        users[currentUserID].starActive[16] = true;\r\n    }\r\n\r\n    function setMainAddress(address _mainAddress) public onlyOwner {\r\n\r\n        require(userList[_mainAddress] == 0, \u0027Address is already in use by another user\u0027);\r\n        \r\n        delete userList[mainAddress];\r\n        userList[_mainAddress] = uint(1);\r\n        mainAddress = _mainAddress;\r\n        users[1].wallet = _mainAddress;\r\n      }\r\n\r\n    function setPaused(bool _paused) public onlyOwner {\r\n        paused = _paused;\r\n      }\r\n\r\n      function setAllowSponsorChange(bool _allowSponsorChange) public onlyOwner {\r\n        allowSponsorChange = _allowSponsorChange;\r\n      }\r\n\r\n    function setStarPrice(uint _star, uint _price) public onlyOwner {\r\n        STAR_PRICE[_star] = _price;\r\n      }\r\n\r\n    function setStarFee(uint _star, uint _price) public onlyOwner {\r\n        STAR_FEE[_star] = _price;\r\n      }\r\n\r\n    function setCurrentUserID(uint _currentUserID) public onlyOwner {\r\n        currentUserID = _currentUserID;\r\n      }\r\n\r\n    function setUserData(uint _userID, address _wallet, uint _referrerID, uint _introducerID, address _referral1, address _referral2, address _referral3, uint star) public onlyOwner {\r\n\r\n        require(_userID \u003E 0, \u0027Invalid user ID\u0027);\r\n        require(_wallet != address(0), \u0027Invalid user wallet\u0027);\r\n        require(_referrerID \u003E 0, \u0027Invalid referrer ID\u0027);\r\n        require(_introducerID \u003E 0, \u0027Invalid introducer ID\u0027);\r\n\r\n        if(_userID \u003E currentUserID){\r\n            currentUserID\u002B\u002B;\r\n        }\r\n\r\n        if(users[_userID].isExist){\r\n            delete userList[users[_userID].wallet];\r\n            delete users[_userID];\r\n        }\r\n\r\n        UserStruct memory userStruct;\r\n\r\n        userStruct = UserStruct({\r\n            isExist : true,\r\n            wallet : _wallet,\r\n            referrerID : _referrerID,\r\n            introducerID : _introducerID,\r\n            referral : new address[](0)\r\n        });\r\n    \r\n        users[_userID] = userStruct;\r\n        userList[_wallet] = _userID;\r\n\r\n        for(uint a = 1; a \u003C= uint(16); a\u002B\u002B){\r\n            if(a \u003C= star){\r\n                users[_userID].starActive[a] = true;\r\n            } else {\r\n                users[_userID].starActive[a] = false;\r\n            }\r\n        }\r\n\r\n        if(_referral1 != address(0)){\r\n            users[_userID].referral.push(_referral1);\r\n        }\r\n           \r\n        if(_referral2 != address(0)){\r\n            users[_userID].referral.push(_referral2);\r\n        }\r\n\r\n        if(_referral3 != address(0)){\r\n            users[_userID].referral.push(_referral3);\r\n        }\r\n\r\n    }\r\n\r\n    function () external payable {\r\n\r\n        require(!paused, \u0027Temporarily not accepting new users and Star upgrades\u0027);\r\n\r\n        uint star;\r\n\r\n        if(msg.value == STAR_PRICE[1]){\r\n            star = 1;\r\n        }else if(msg.value == STAR_PRICE[2]){\r\n            star = 2;\r\n        }else if(msg.value == STAR_PRICE[3]){\r\n            star = 3;\r\n        }else if(msg.value == STAR_PRICE[4]){\r\n            star = 4;\r\n        }else if(msg.value == STAR_PRICE[5]){\r\n            star = 5;\r\n        }else if(msg.value == STAR_PRICE[6]){\r\n            star = 6;\r\n        }else if(msg.value == STAR_PRICE[7]){\r\n            star = 7;\r\n        }else if(msg.value == STAR_PRICE[8]){\r\n            star = 8;\r\n        }else if(msg.value == STAR_PRICE[9]){\r\n            star = 9;\r\n        }else if(msg.value == STAR_PRICE[10]){\r\n            star = 10;\r\n        }else if(msg.value == STAR_PRICE[11]){\r\n            star = 11;\r\n        }else if(msg.value == STAR_PRICE[12]){\r\n            star = 12;\r\n        }else if(msg.value == STAR_PRICE[13]){\r\n            star = 13;\r\n        }else if(msg.value == STAR_PRICE[14]){\r\n            star = 14;\r\n        }else if(msg.value == STAR_PRICE[15]){\r\n            star = 15;\r\n        }else if(msg.value == STAR_PRICE[16]){\r\n            star = 16;\r\n        }else {\r\n            revert(\u0027You have sent incorrect payment amount\u0027);\r\n        }\r\n\r\n        if(star == 1){\r\n\r\n            uint referrerID = 0;\r\n            address referrer = bytesToAddress(msg.data);\r\n\r\n            if (userList[referrer] \u003E 0 \u0026\u0026 userList[referrer] \u003C= currentUserID){\r\n                referrerID = userList[referrer];\r\n            } else {\r\n                revert(\u0027Incorrect referrer\u0027);\r\n            }\r\n\r\n            if(users[userList[msg.sender]].isExist){\r\n                changeSponsor(referrerID);\r\n            } else {\r\n                registerUser(referrerID);\r\n            }\r\n        } else if(users[userList[msg.sender]].isExist){\r\n            upgradeUser(star);\r\n        } else {\r\n            revert(\u0022Please buy first star\u0022);\r\n        }\r\n    }\r\n\r\n    function changeSponsor(uint _referrerID) internal {\r\n\r\n        require(allowSponsorChange, \u0027You are already signed up. Sponsor change not allowed\u0027);\r\n        require(users[userList[msg.sender]].isExist, \u0027You are not signed up\u0027);\r\n        require(userList[msg.sender] != _referrerID, \u0027You cannot sponsor yourself\u0027);\r\n        require(users[userList[msg.sender]].referrerID != _referrerID \u0026\u0026 users[userList[msg.sender]].introducerID != _referrerID, \u0027You are already under this sponsor\u0027);\r\n        require(_referrerID \u003E 0 \u0026\u0026 _referrerID \u003C= currentUserID, \u0027Incorrect referrer ID\u0027);\r\n        require(msg.value==STAR_PRICE[1], \u0027You have sent incorrect payment amount\u0027);\r\n        require(users[userList[msg.sender]].starActive[2] == false, \u0027Sponsor change is allowed only on Star 1\u0027);\r\n\r\n        uint _introducerID = _referrerID;\r\n        uint oldReferrer = users[userList[msg.sender]].referrerID;\r\n\r\n        if(users[_referrerID].referral.length \u003E= REFERRER_1_STAR_LIMIT)\r\n        {\r\n            _referrerID = userList[findFreeReferrer(_referrerID)];\r\n        }\r\n\r\n        users[userList[msg.sender]].referrerID = _referrerID;\r\n        users[userList[msg.sender]].introducerID = _introducerID;\r\n\r\n        users[_referrerID].referral.push(msg.sender);\r\n\r\n        uint arrayLength = SafeMath.sub(uint(users[oldReferrer].referral.length),uint(1));\r\n\r\n        address[] memory referrals = new address[](arrayLength);\r\n\r\n        for(uint a = 0; a \u003C= arrayLength; a\u002B\u002B){\r\n            if(users[oldReferrer].referral[a] != msg.sender){\r\n                referrals[a] = users[oldReferrer].referral[a];\r\n            }\r\n        }\r\n\r\n        for(uint b = 0; b \u003C= arrayLength; b\u002B\u002B){\r\n            users[oldReferrer].referral.pop();\r\n        }\r\n\r\n        uint arrayLengthSecond = SafeMath.sub(uint(referrals.length),uint(1));\r\n\r\n        for(uint c = 0; c \u003C= arrayLengthSecond; c\u002B\u002B){\r\n            if(referrals[c] != address(0)){\r\n                users[oldReferrer].referral.push(referrals[c]);\r\n            }\r\n        }\r\n\r\n        upgradePayment(userList[msg.sender], 1);\r\n\r\n        emit SponsorChange(userList[msg.sender], _referrerID, _introducerID, now);\r\n\r\n    }\r\n\r\n    function registerUser(uint _referrerID) internal {\r\n\r\n        require(!users[userList[msg.sender]].isExist, \u0027You are already signed up\u0027);\r\n        require(_referrerID \u003E 0 \u0026\u0026 _referrerID \u003C= currentUserID, \u0027Incorrect referrer ID\u0027);\r\n        require(msg.value==STAR_PRICE[1], \u0027You have sent incorrect payment amount\u0027);\r\n\r\n        uint _introducerID = _referrerID;\r\n\r\n        if(users[_referrerID].referral.length \u003E= REFERRER_1_STAR_LIMIT)\r\n        {\r\n            _referrerID = userList[findFreeReferrer(_referrerID)];\r\n        }\r\n\r\n        UserStruct memory userStruct;\r\n        currentUserID\u002B\u002B;\r\n\r\n        userStruct = UserStruct({\r\n            isExist : true,\r\n            wallet : msg.sender,\r\n            referrerID : _referrerID,\r\n            introducerID : _introducerID,\r\n            referral : new address[](0)\r\n        });\r\n\r\n        users[currentUserID] = userStruct;\r\n        userList[msg.sender] = currentUserID;\r\n\r\n        users[currentUserID].starActive[1] = true;\r\n        users[currentUserID].starActive[2] = false;\r\n        users[currentUserID].starActive[3] = false;\r\n        users[currentUserID].starActive[4] = false;\r\n        users[currentUserID].starActive[5] = false;\r\n        users[currentUserID].starActive[6] = false;\r\n        users[currentUserID].starActive[7] = false;\r\n        users[currentUserID].starActive[8] = false;\r\n        users[currentUserID].starActive[9] = false;\r\n        users[currentUserID].starActive[10] = false;\r\n        users[currentUserID].starActive[11] = false;\r\n        users[currentUserID].starActive[12] = false;\r\n        users[currentUserID].starActive[13] = false;\r\n        users[currentUserID].starActive[14] = false;\r\n        users[currentUserID].starActive[15] = false;\r\n        users[currentUserID].starActive[16] = false;\r\n\r\n        users[_referrerID].referral.push(msg.sender);\r\n\r\n        upgradePayment(currentUserID, 1);\r\n\r\n        emit Register(currentUserID, _referrerID, _introducerID, now);\r\n    }\r\n\r\n    function upgradeUser(uint _star) internal {\r\n\r\n        require(users[userList[msg.sender]].isExist, \u0027You are not signed up yet\u0027);\r\n        require( _star \u003E= 2 \u0026\u0026 _star \u003C= 16, \u0027Incorrect star\u0027);\r\n        require(msg.value==STAR_PRICE[_star], \u0027You have sent incorrect payment amount\u0027);\r\n        require(users[userList[msg.sender]].starActive[_star] == false, \u0027You have already activated this star\u0027);\r\n\r\n        uint previousStar = SafeMath.sub(_star,uint(1));\r\n        require(users[userList[msg.sender]].starActive[previousStar] == true, \u0027Buy the previous star first\u0027);\r\n        \r\n        users[userList[msg.sender]].starActive[_star] = true;\r\n\r\n        upgradePayment(userList[msg.sender], _star);\r\n        \r\n        emit Upgrade(userList[msg.sender], _star, STAR_PRICE[_star], now);\r\n    }\r\n\r\n    function upgradePayment(uint _user, uint _star) internal {\r\n\r\n        address referrer;\r\n        address introducer;\r\n\r\n        uint referrerFinal;\r\n        uint referrer1;\r\n        uint referrer2;\r\n        uint referrer3;\r\n        uint money;\r\n\r\n        if(_star == 1){\r\n            referrerFinal = users[_user].introducerID;\r\n        }else if(_star == 5 || _star == 9 || _star == 13){\r\n            referrer1 = users[_user].referrerID;\r\n            referrerFinal = users[referrer1].referrerID;\r\n        } else if(_star == 2 || _star == 6 || _star == 10 || _star == 14){\r\n            referrer1 = users[_user].referrerID;\r\n            referrerFinal = users[referrer1].referrerID;\r\n        } else if(_star == 3 || _star == 7 || _star == 11 || _star == 15){\r\n            referrer1 = users[_user].referrerID;\r\n            referrer2 = users[referrer1].referrerID;\r\n            referrerFinal = users[referrer2].referrerID;\r\n        } else if(_star == 4 || _star == 8 || _star == 12 || _star == 16){\r\n            referrer1 = users[_user].referrerID;\r\n            referrer2 = users[referrer1].referrerID;\r\n            referrer3 = users[referrer2].referrerID;\r\n            referrerFinal = users[referrer3].referrerID;\r\n        }\r\n\r\n        if(!users[referrerFinal].isExist || users[referrerFinal].starActive[_star] == false){\r\n            referrer = mainAddress;\r\n        } else {\r\n            referrer = users[referrerFinal].wallet;\r\n        }\r\n\r\n        money = STAR_PRICE[_star];\r\n                \r\n        if(STAR_FEE[_star] \u003E 0){\r\n            bool result;\r\n            result = address(uint160(mainAddress)).send(STAR_FEE[_star]);\r\n            money = SafeMath.sub(money,STAR_FEE[_star]);\r\n            totalFees = SafeMath.add(totalFees,money);\r\n        }\r\n\r\n        total = SafeMath.add(total,money);\r\n\r\n        if(_star\u003E=3){\r\n\r\n            if(!users[users[_user].introducerID].isExist){\r\n                introducer = mainAddress;\r\n            } else {\r\n                if(users[referrer1].starActive[_star] == false){\r\n                    introducer = mainAddress;\r\n                } else {\r\n                    introducer = users[referrer1].wallet;\r\n                }\r\n            }\r\n\r\n            money = SafeMath.div(money,2);\r\n\r\n            bool result_one;\r\n            result_one = address(uint160(referrer)).send(money);\r\n\r\n            bool result_two;\r\n            result_two = address(uint160(introducer)).send(money);\r\n            \r\n        } else {\r\n            bool result_three;\r\n            result_three = address(uint160(referrer)).send(money);\r\n        }\r\n\r\n        if(users[referrerFinal].starActive[_star] == false ){\r\n            emit LostMoney(referrerFinal, userList[msg.sender], _star, money, now);\r\n        }\r\n\r\n        emit Payment(userList[msg.sender], userList[referrer], userList[introducer], _star, money, STAR_FEE[_star], now);\r\n\r\n    }\r\n\r\n    function findFreeReferrer(uint _user) public view returns(address) {\r\n\r\n        require(users[_user].isExist, \u0027User does not exist\u0027);\r\n\r\n        if(users[_user].referral.length \u003C REFERRER_1_STAR_LIMIT){\r\n            return users[_user].wallet;\r\n        }\r\n\r\n        address[] memory referrals = new address[](363);\r\n        referrals[0] = users[_user].referral[0]; \r\n        referrals[1] = users[_user].referral[1];\r\n        referrals[2] = users[_user].referral[2];\r\n\r\n        address freeReferrer;\r\n        bool noFreeReferrer = true;\r\n\r\n        for(uint i = 0; i \u003C 363; i\u002B\u002B){\r\n            if(users[userList[referrals[i]]].referral.length == REFERRER_1_STAR_LIMIT){\r\n                if(i \u003C 120){\r\n                    referrals[(i\u002B1)*3] = users[userList[referrals[i]]].referral[0];\r\n                    referrals[(i\u002B1)*3\u002B1] = users[userList[referrals[i]]].referral[1];\r\n                    referrals[(i\u002B1)*3\u002B2] = users[userList[referrals[i]]].referral[2];\r\n                }\r\n            } else {\r\n                noFreeReferrer = false;\r\n                freeReferrer = referrals[i];\r\n                break;\r\n            }\r\n        }\r\n        require(!noFreeReferrer, \u0027Free referrer not found\u0027);\r\n        return freeReferrer;\r\n\r\n    }\r\n\r\n    function viewUserReferrals(uint _user) public view returns(address[] memory) {\r\n        return users[_user].referral;\r\n    }\r\n\r\n    function viewUserStarActive(uint _user, uint _star) public view returns(bool) {\r\n        return users[_user].starActive[_star];\r\n    }\r\n\r\n    function bytesToAddress(bytes memory bys) private pure returns (address  addr) {\r\n        assembly {\r\n            addr := mload(add(bys, 20))\r\n        }\r\n    }\r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022mainAddress\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022totalFees\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022_paused\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022name\u0022:\u0022setPaused\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022userList\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022allowSponsorChange\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022total\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_userID\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_wallet\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_referrerID\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_introducerID\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_referral1\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_referral2\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_referral3\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022star\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022setUserData\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022users\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022isExist\u0022,\u0022type\u0022:\u0022bool\u0022},{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022wallet\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022referrerID\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022introducerID\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022STAR_FEE\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022paused\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_star\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_price\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022setStarFee\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022owner\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_user\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_star\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022viewUserStarActive\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022STAR_PRICE\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022currentUserID\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022_allowSponsorChange\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022name\u0022:\u0022setAllowSponsorChange\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_currentUserID\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022setCurrentUserID\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_mainAddress\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022setMainAddress\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_user\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022viewUserReferrals\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address[]\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address[]\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_star\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_price\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022setStarPrice\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_user\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022findFreeReferrer\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022transferOwnership\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022fallback\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_user\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_referrer\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_introducer\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_time\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Register\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_user\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_referrer\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_introducer\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_time\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022SponsorChange\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_user\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_star\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_price\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_time\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Upgrade\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_user\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_referrer\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_introducer\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_star\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_money\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_fee\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_time\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Payment\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_referrer\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_referral\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_star\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_money\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_time\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022LostMoney\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"GoEther","CompilerVersion":"v0.5.11\u002Bcommit.c082d0b4","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c32328c8d25e981085eaedfa3cf73024d3b295e736e6e33b78f6bd561611e4fb"}]