[{"SourceCode":"pragma solidity ^0.5.10;\r\n\r\n// ERC20 contract interface\r\ncontract Token {\r\n  function balanceOf(address) public view returns (uint);\r\n}\r\n\r\ncontract BalanceChecker {\r\n  /* Fallback function, don\u0027t accept any ETH */\r\n  function() external payable {\r\n    revert(\u0022BalanceChecker does not accept payments\u0022);\r\n  }\r\n\r\n  function tokenBalance(address user, address token) public view returns (uint256) {\r\n    uint256 tokenCode;\r\n    assembly { tokenCode := extcodesize(token) } // contract code size\r\n  \r\n    if (tokenCode \u003E 0) {  \r\n      return Token(token).balanceOf(user);\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  function balances(address[] calldata users, address[] calldata tokens) external view returns (uint256[] memory) {\r\n    uint256[] memory addrBalances = new uint256[](tokens.length * users.length);\r\n    \r\n    for(uint i = 0; i \u003C users.length; i\u002B\u002B) {\r\n      for (uint j = 0; j \u003C tokens.length; j\u002B\u002B) {\r\n        uint addrIdx = j \u002B tokens.length * i;\r\n        if (tokens[j] != address(0x0)) { \r\n          addrBalances[addrIdx] = tokenBalance(users[i], tokens[j]);\r\n        } else {\r\n          addrBalances[addrIdx] = users[i].balance; // ETH balance    \r\n        }\r\n      }  \r\n    }\r\n  \r\n    return addrBalances;\r\n  }\r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022token\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022tokenBalance\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022users\u0022,\u0022type\u0022:\u0022address[]\u0022},{\u0022name\u0022:\u0022tokens\u0022,\u0022type\u0022:\u0022address[]\u0022}],\u0022name\u0022:\u0022balances\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256[]\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022fallback\u0022}]","ContractName":"BalanceChecker","CompilerVersion":"v0.5.10\u002Bcommit.5a6ea5b1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://cdf98c9be51100323f344fef554772bf53930e5de0d3776c8a6fe61f7c20e3bb"}]