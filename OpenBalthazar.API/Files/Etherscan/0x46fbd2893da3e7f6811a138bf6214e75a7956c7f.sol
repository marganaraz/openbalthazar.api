[{"SourceCode":"/*\r\n\r\n *-- SCAM-ALERT --*\r\n \r\nSCAM-ALERT.INFO issues scam alert for possible fraud contracts. \r\n\r\nAttention. Do not transact with contracts marked with the \u0022.SCAM-ALERT\u0022 token. \r\nThese contracts were classified by independent auditors as fraud/scams.\r\n\r\nIf you are the owner or member of a contract marked as fraud/scams\r\nand would like to request a review, please contact us at review@scam-alert.info \r\nor using this contract.\r\n\r\nInterested in also being an independent auditor and helping us make Ethereum contracts safer,\r\nplease contact us at audit@scam-alert.info\r\n\r\nScam alert tokens will be highlighted in red in Block Explorer Platforms.\r\n\r\nwww.scam-alert.info\r\ncontact@scam-alert.info\r\n\r\n*/\r\n\r\n\r\npragma solidity ^0.5.13;\r\n\r\n/**\r\n * @notice Library of mathematical calculations for uit256\r\n */\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b \u003C= a);\r\n    return a - b;\r\n  }\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a \u002B b;\r\n    assert(c \u003E= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n/**\r\n * @notice Audit control\r\n */\r\ncontract SysAudit {\r\n  event AuditsAdded(address addr);\r\n  event AuditsRemoved(address addr);\r\n  address audit;\r\n  mapping(address =\u003E bool) public audits;\r\n  mapping (uint =\u003E address) public auditsList;\r\n  address feeWallet;\r\n  address fraudWallet;\r\n  uint public NextAudits = 1;\r\n  \r\n  constructor() public {\r\n    audit = msg.sender;\r\n    feeWallet = 0x2762a54Da4d9a403A351E26b55D1D34c0e9b001C;   // Service Maintenance.\r\n    fraudWallet = 0xd24f71512525Ae0C7eb772d02A90cFFf5cC4275A; // Fraud detect wallet\r\n    addAddresToAudits(audit);\r\n  }\r\n  \r\n  modifier onlyAudit() {\r\n    require(msg.sender == audit, \u0022Only for Audit manager\u0022);\r\n    _;\r\n  }\r\n  \r\n  modifier onlyAudits() {\r\n    require(audits[msg.sender], \u0022Only for Audit\u0022);\r\n    _;\r\n  }\r\n  \r\n  function setAudit(address _newAudit) public onlyAudit {\r\n    audit = _newAudit;\r\n  }\r\n  \r\n  function setWallet_fee(address _newWallet) public onlyAudit {\r\n      feeWallet = _newWallet;\r\n  }\r\n    \r\n  function setWallet_fraud(address _newWallet) public onlyAudit {\r\n      fraudWallet = _newWallet;\r\n  }\r\n  \r\n  function addAddresToAudits(address addr) public onlyAudit {\r\n    if (!audits[addr]) {\r\n      audits[addr] = true;\r\n      auditsList[NextAudits] = addr;\r\n      NextAudits\u002B\u002B;\r\n      emit AuditsAdded(addr);\r\n    }\r\n  }\r\n  \r\n  function removeAddresToAudits(address addr) public onlyAudit {\r\n    if (audits[addr]) {\r\n      audits[addr] = false;\r\n      emit AuditsRemoved(addr);\r\n    }\r\n  }\r\n  \r\n}\r\n\r\n/**\r\n * @notice Standard Token ERC20\r\n * https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md for more details\r\n * Token to be used for future expansion, will soon be negotiated\r\n */\r\ncontract AlertToken is SysAudit {\r\n    /* This generates a public event on the blockchain that will notify clients */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /* Public variables of the token */\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n    uint256 public totalSupply;\r\n\r\n    /* This creates an array with all balances */\r\n    mapping (address =\u003E uint256) public balanceOf;\r\n    mapping (address =\u003E mapping (address =\u003E uint256)) public allowance;\r\n\r\n    /* Initializes contract with initial supply tokens to the creator of the contract */\r\n    constructor() public {\r\n        uint256 initialSupply = 100000000000000;\r\n        string memory tokenName = \u0022.SCAM-ALERT\u0022;\r\n        uint8 decimalUnits = 0;\r\n        string memory tokenSymbol = \u0022%\u0022;\r\n        balanceOf[fraudWallet] = initialSupply;             // Give the creator all initial tokens\r\n        totalSupply = initialSupply;                        // Update total supply\r\n        name = tokenName;                                   // Set the name for display purposes\r\n        symbol = tokenSymbol;                               // Set the symbol for display purposes\r\n        decimals = decimalUnits;                            // Amount of decimals for display purposes\r\n    }\r\n\r\n   /** \r\n    * @notice Send \u0060_value\u0060 tokens to \u0060_to\u0060 from your account\r\n    * @param _to The address of the recipient\r\n    * @param _value the amount to send\r\n    */\r\n    function transfer(address _to, uint256 _value) public {\r\n       if(_value \u003E0){\r\n         revert(\u0027Only an auditor can remove this alert.\u0027);  \r\n       } else {\r\n         _transfer(msg.sender, _to, _value);\r\n       }\r\n    }\r\n    \r\n    /* Internal transfer, only can be called by this contract */\r\n    function _transfer(address _from, address _to, uint _value) internal {\r\n        require (_to != address(0x0),\u0022Prevent transfer to 0x0 address\u0022);\r\n        require (balanceOf[_from] \u003E= _value,\u0022Insufficient balance\u0022);\r\n        require (balanceOf[_to] \u002B _value \u003E balanceOf[_to],\u0022overflows\u0022);\r\n        balanceOf[_from] -= _value;\r\n        balanceOf[_to] \u002B= _value;\r\n        emit Transfer(_from, _to, _value);\r\n    }\r\n    \r\n}\r\n/*\r\n * Fraud Alert tracking\r\n *\r\n */\r\ncontract ScamAlert is AlertToken {\r\n    // Using SafeMath for uint256;\r\n    // Events\r\n    event evt_audit(uint id,address indexed contract_audited, bytes32 reason,address indexed audit, uint fraud,uint pct);\r\n    event evt_review(uint id,address indexed contract_audited, bytes32 reason,address indexed audit, uint fraud,uint pct);\r\n    event evt_getreview(uint id,address indexed contract_audited, bytes32 name, bytes32 reason,address indexed user, uint mode);\r\n\r\n    // Fees of services\r\n    uint public feeReview = 0.00 ether;\r\n    uint public feeReviewExpress = 0.10 ether;\r\n    uint public feeReviewNow = 0.50 ether;\r\n    uint public auditID = 1;\r\n    \r\n    enum FraudInfo {\r\n        NO_FRAUD,\r\n        IN_REVISION,\r\n        DARK_CONTRACT,\r\n        POPULAR_SCAMMER,\r\n        TAX_FRAUD,\r\n        INSUFFICIENT_SHORTFALL,\r\n        INSUFFICIENT_LIQUIDITY,\r\n        PONZI_SCHEME_WITHOUT_PAYMENT,\r\n        FINANCIAL_FUND_WITHOUT_PAYMENT,\r\n        FAKE_GAME,\r\n        FAKE_TRANSACTIONS,\r\n        FAKE_FUND,\r\n        FAKE_TOKEN,\r\n        FAKE_DAPP,\r\n        FAKE_WEBSITE,\r\n        CONTRACT_ERROR,\r\n        OTHERS\r\n    }\r\n    FraudInfo fraudInfo;\r\n\r\n    struct AuditedStruct {\r\n        uint id;\r\n        bytes32 reason;\r\n        bytes32 name;\r\n        address audit;\r\n        uint fraud;\r\n        uint date_audited;\r\n    }\r\n    mapping (address =\u003E AuditedStruct) public audited;\r\n    mapping (uint =\u003E address) public auditedList;\r\n\r\n    // Start Contract\r\n    constructor() public {}\r\n    \r\n    \r\n   /**\r\n     * @notice Get review\r\n     */\r\n    function () external payable {\r\n        address _ref;\r\n        if(msg.data.length \u003E 0){                                        \r\n            _ref = b2A(msg.data);\r\n        }\r\n        getReview(_ref, \u0027\u0027,\u0027\u0027,99);\r\n    }\r\n\r\n   /**\r\n     * @notice Add audit for contract address\r\n     */\r\n    function addAudit(address _contract_audited, bytes32 _name, uint _fraud, bytes32 _reason, uint _pct) public onlyAudits {\r\n        if(audited[_contract_audited].id \u003E 0) {\r\n            revert(\u0027This contract already has a fraud review\u0027);\r\n        }\r\n        if(_pct \u003E 100){\r\n          revert(\u0027Percent cannot be greater than 100%\u0027);  \r\n        }\r\n        AuditedStruct memory auditedStruct;                                \r\n        auditedStruct = AuditedStruct({\r\n            id : auditID,\r\n            reason: _reason,\r\n            name: _name,\r\n            audit: msg.sender,\r\n            fraud: uint(_fraud),\r\n            date_audited: block.timestamp\r\n        });\r\n        audited[_contract_audited] = auditedStruct;\r\n        auditedList[auditID] = _contract_audited;\r\n        emit evt_audit(auditID,_contract_audited, _reason, msg.sender, _fraud, _pct);\r\n        auditID\u002B\u002B;\r\n        _transfer(fraudWallet, _contract_audited, _pct);\r\n    }\r\n    \r\n    /**\r\n     * @notice Review audit for contract address\r\n     */\r\n    function reviewAudit(address _contract_audited, bytes32 _name, uint _fraud, bytes32 _reason, uint _pct) public onlyAudits {\r\n        if(audited[_contract_audited].id \u003C 1) {\r\n            revert(\u0027This contract not exist for review\u0027);\r\n        }\r\n        if(_pct \u003E 100){\r\n          revert(\u0027Percent cannot be greater than 100%\u0027);  \r\n        }\r\n        audited[_contract_audited].reason = _reason;\r\n        audited[_contract_audited].name = _name;\r\n        audited[_contract_audited].audit = msg.sender;\r\n        audited[_contract_audited].fraud = _fraud;\r\n        audited[_contract_audited].date_audited = block.timestamp;\r\n        emit evt_review(audited[_contract_audited].id,_contract_audited, _reason, msg.sender, _fraud, _pct);\r\n        \r\n        if(balanceOf[_contract_audited] \u003E _pct) {\r\n           _transfer(_contract_audited, fraudWallet, balanceOf[_contract_audited] - _pct); \r\n        } else {\r\n           _transfer(fraudWallet, _contract_audited, _pct - balanceOf[_contract_audited]); \r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @notice Audit Request\r\n     */\r\n    function getReview(address _contract_audited, bytes32 _name, bytes32 _reason, uint _fraud) public payable{\r\n        uint  _mode = 0;\r\n        if(msg.value \u003C feeReview){                                   \r\n            revert(\u0027Lower minimum value to review contract\u0027);\r\n        }\r\n        if(msg.value \u003E= feeReviewExpress){ \r\n            _mode = 1;\r\n        }\r\n        if(msg.value \u003E= feeReviewNow){ \r\n            _mode = 2;\r\n        }\r\n        emit evt_getreview(audited[_contract_audited].id, _contract_audited, _name, _reason, msg.sender, _fraud);\r\n        address(uint160(feeWallet)).transfer(address(this).balance); \r\n    }\r\n    \r\n    function setFees(uint _feeReview, uint _feeReviewExpress, uint _feeReviewNow) public onlyAudit {\r\n        feeReview = _feeReview;\r\n        feeReviewExpress = _feeReviewExpress;\r\n        feeReviewNow = _feeReviewNow;\r\n    }\r\n  \r\n   /**\r\n    * @notice Bytes to anddress\r\n    * @param _inBytes bytes to convert in Ethereum address\r\n    */\r\n    function b2A(bytes memory _inBytes) private pure returns (address outAddress) {\r\n        assembly{\r\n            outAddress := mload(add(_inBytes, 20))\r\n        }\r\n    }\r\n    function kill() public onlyAudit {\r\n        selfdestruct(msg.sender);\r\n    }\r\n}","ABI":"[{\u0022inputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022addr\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022AuditsAdded\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022addr\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022AuditsRemoved\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Transfer\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022id\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022contract_audited\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022reason\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022audit\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022fraud\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022pct\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022evt_audit\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022id\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022contract_audited\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022name\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022reason\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022mode\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022evt_getreview\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022id\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022contract_audited\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022reason\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022audit\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022fraud\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022pct\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022evt_review\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022fallback\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022NextAudits\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022addr\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022addAddresToAudits\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_contract_audited\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022_name\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_fraud\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022_reason\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_pct\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022addAudit\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022allowance\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022auditID\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022audited\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022id\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022reason\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022name\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022audit\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022fraud\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022date_audited\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022auditedList\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022audits\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022auditsList\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022balanceOf\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022decimals\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint8\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint8\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022feeReview\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022feeReviewExpress\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022feeReviewNow\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_contract_audited\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022_name\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022_reason\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_fraud\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022getReview\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022kill\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022name\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022string\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022addr\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022removeAddresToAudits\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_contract_audited\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022_name\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_fraud\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022_reason\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_pct\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022reviewAudit\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_newAudit\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022setAudit\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_feeReview\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_feeReviewExpress\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_feeReviewNow\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022setFees\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_newWallet\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022setWallet_fee\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_newWallet\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022setWallet_fraud\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022symbol\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022string\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022totalSupply\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transfer\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022}]","ContractName":"ScamAlert","CompilerVersion":"v0.5.13\u002Bcommit.5b0b510c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://a93323e104a18692954a19b72af768da8fa47f2f44e366d0f05ddfa057cfdee1"}]