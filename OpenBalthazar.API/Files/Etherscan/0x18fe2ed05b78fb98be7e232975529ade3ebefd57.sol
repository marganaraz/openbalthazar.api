[{"SourceCode":"// random number oracle example contract\r\n// Example on Mainnet: https://etherscan.io/address/0x40042364f29612b830531435d02ea68f8f0dd6bb#readContract\r\n\r\n// fromParam and toParam must be positive integers of less than 100 digits. amount can be extra entropy to generate the random number.\r\npragma solidity ^0.4.26;\r\n\r\ninterface OrFeedInterface {\r\n  function getExchangeRate ( string fromSymbol, string toSymbol, string venue, uint256 amount ) external view returns ( uint256 );\r\n  function getTokenDecimalCount ( address tokenAddress ) external view returns ( uint256 );\r\n  function getTokenAddress ( string symbol ) external view returns ( address );\r\n  function getSynthBytes32 ( string symbol ) external view returns ( bytes32 );\r\n  function getForexAddress ( string symbol ) external view returns ( address );\r\n}\r\n\r\ncontract randomregisteredoracleExample {\r\n    OrFeedInterface orfeed = OrFeedInterface(0x8316b082621cfedab95bf4a44a1d4b64a6ffc336);\r\n\r\n    address owner;\r\n    modifier onlyOwner() {\r\n        assert (msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    constructor() public payable {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function getPriceFromOracle(string fromParam, string toParam, /*string venue,*/ uint256 amount) public constant returns (uint256){\r\n\r\n        uint256 start = stringToUint(fromParam);\r\n        uint256 end = stringToUint(toParam);\r\n        require(start \u003C end, \u0022Start must be less than end (fromSymb must be lower than toSymb\u0022);\r\n        uint256 width = end - start;\r\n        width = width\u002B1;\r\n        amount =1;\r\n\r\n        uint256 rate1 = orfeed.getExchangeRate(\u0022MKR\u0022, \u0022DAI\u0022, \u0022DEFAULT\u0022, 1);\r\n        uint256 rate2 = orfeed.getExchangeRate(\u0022ETH\u0022, \u0022DAI\u0022, \u0022DEFAULT\u0022, 100000000000000);\r\n        uint256 rate3 = orfeed.getExchangeRate(\u0022WBTC\u0022, \u0022ETH\u0022, \u0022DEFAULT\u0022, 100000);\r\n\r\n        uint256 seed = uint256(keccak256(abi.encodePacked(amount, block.coinbase, block.difficulty, block.timestamp, rate1, rate2, rate3)));\r\n        return (seed % width) \u002B start;\r\n    }\r\n\r\n    function stringToUint(string s) pure private returns (uint) {\r\n        bytes memory b = bytes(s);\r\n        assert(b.length \u003C 100);\r\n        uint result = 0;\r\n        for (uint i = 0; i \u003C b.length; i\u002B\u002B) {\r\n            assert(b[i] \u003E= 48 \u0026\u0026 b[i] \u003C= 57);\r\n            result = result * 10 \u002B (uint(b[i]) - 48);\r\n        }\r\n        return result;\r\n    }\r\n\r\n\r\n    function changeOwner(address newOwner) onlyOwner public returns(bool){\r\n        owner = newOwner;\r\n        return true;\r\n    }\r\n\r\n    function withdrawBalance() onlyOwner public returns(bool) {\r\n        uint amount = address(this).balance; // this.balance;\r\n        msg.sender.transfer(amount);\r\n        return true;\r\n    }\r\n}","ABI":"[{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022withdrawBalance\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022fromParam\u0022,\u0022type\u0022:\u0022string\u0022},{\u0022name\u0022:\u0022toParam\u0022,\u0022type\u0022:\u0022string\u0022},{\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022getPriceFromOracle\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022changeOwner\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022constructor\u0022}]","ContractName":"randomregisteredoracleExample","CompilerVersion":"v0.4.26\u002Bcommit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://596473401c3c754f4d2e55158b5e718a45ba218cc5745c7586e6039f0f9bf798"}]