[{"SourceCode":"{\u0022IERC20Token.sol\u0022:{\u0022content\u0022:\u0022pragma solidity \\u003e=0.4.24 \\u003c0.6.0;\\n/**\\n * @title ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ncontract IERC20Token{\\n// these functions aren\\u0027t abstract since the compiler emits automatically generated getter functions as external\\nfunction name() public view returns(string memory);\\nfunction symbol() public view returns(string memory);\\nfunction decimals() public view returns(uint256);\\nfunction totalSupply() public view returns (uint256);\\nfunction balanceOf(address _owner) public view returns (uint256);\\nfunction allowance(address _owner, address _spender) public view returns (uint256);\\n\\nfunction transfer(address _to, uint256 _value) public returns (bool success);\\nfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\\nfunction approve(address _spender, uint256 _value) public returns (bool success);\\n event Transfer(\\n    address indexed from,\\n    address indexed to,\\n    uint256 value\\n  );\\n\\n  event Approval(\\n    address indexed owner,\\n    address indexed spender,\\n    uint256 value\\n  );\\n}\u0022},\u0022Omg.sol\u0022:{\u0022content\u0022:\u0022pragma solidity \\u003e=0.4.24 \\u003c0.6.0;\\nimport \\\u0022./UrgencyPause.sol\\\u0022;\\nimport \\\u0022./SafeMath.sol\\\u0022;\\nimport \\\u0022./IERC20Token.sol\\\u0022;\\nimport \\\u0022./Ownable.sol\\\u0022;\\n\\ncontract Omg is Ownable, UrgencyPause {\\n    using SafeMath for uint256;\\n\\n    uint256 private _startTime = 1567213749;  //\u89E3\u4ED3\u65F6\u95F4s 2019/9/1 9:00:00 - 1\\n    uint256 constant UNLOCK_DURATION = 100;\\n    uint256 constant DAY_UINT = 1*24*60*60;  //\u6362\u7B97\u6210\u5929\u6570\\n    address[] private _investors;\\n    mapping (address=\\u003eInvestor) _mapInvestors;\\n\\n    IERC20Token private _xlToken;\\n     //\u6295\u8D44\u8005\u7ED3\u6784\u4F53\\n     struct Investor {\\n         address account;\\n         uint256 lockXLs;\\n         uint256 unlockXLs;\\n     }\\n\\n     event TokenChanged(address indexed token,uint256 indexed time);\\n     event LockXLEvent(address indexed acc,uint256 indexed lockXLs);\\n     event StartTimeUnlock(address indexed account,uint256 indexed startTime);\\n     event UnlockXLEvent(address indexed acc,uint256 indexed unlockXLs);\\n     constructor(IERC20Token token) public {\\n         _xlToken = IERC20Token(token);\\n     }\\n\\n     function () external {\\n         if(super.isManager(msg.sender)){\\n             unlockBatch(); //\u7BA1\u7406\u8005\u6279\u91CF\u53D1\u9001\\n         }else{\\n             unlockAccount(msg.sender);  //\u5355\u4E2A\u62C9\u53D6\\n         }\\n     }\\n     \\n     //\u5F53\u524D\u5929\u6570 1-100\\n     function curDays() public view returns(uint256) {\\n         uint256 curSeconds = now.sub(_startTime);\\n         uint256 curDay = curSeconds.div(DAY_UINT);\\n         return curDay;\\n     }\\n     \\n     //\u662F\u5426\u5B8C\u6210\u91CA\u653E\\n     function isFinished() public view returns(bool) {\\n         return curDays() \\u003e= UNLOCK_DURATION;\\n     }\\n\\n\\n     //\u8BBE\u7F6E\u89E3\u4ED3\u65F6\u95F4\\n      function setStartTimeUnLock(uint256 _time) public onlyOwner {\\n          _startTime = _time;\\n          emit StartTimeUnlock(msg.sender,_time);\\n      }\\n    \\n    function setToken(IERC20Token _token) public onlyOwner {\\n        _xlToken = IERC20Token(_token);\\n        emit TokenChanged(address(_token),now);\\n    }\\n\\n    //\u6295\u8D44\u8005\u6570\u91CF\\n    function investors() public view returns(uint256 count) {\\n        return _investors.length;\\n    }\\n\\n    //\u6DFB\u52A0\u7528\u6237\u9501\u4ED3\u8BB0\u5F55\\n    function addInvestor(address _acc,uint256 _lockXLs) public notPaused onlyOwner {\\n        require(_acc != address(0),\\\u0022\u65E0\u5730\u5740\\\u0022);\\n        uint256 lockXLs = _lockXLs;//.div(10**18); //\u9664\u53BB\u7CBE\u5EA6\\n        require(_mapInvestors[_acc].account == address(0),\\\u0022\u8BE5\u6295\u8D44\u8005\u5DF2\u5B58\u5728!!\\\u0022);\\n        _investors.push(_acc);\\n        _mapInvestors[_acc] = Investor({account:_acc,lockXLs:lockXLs,unlockXLs:0});\\n        emit LockXLEvent(_acc,lockXLs);\\n    }\\n\\n    //\u5220\u9664\u7528\u6237\u8BB0\u5F55\\n    function removeInvestorAtIndex(uint256  index) public onlyOwner {\\n        if(index \\u003c _investors.length) {\\n            address acc = _investors[index];\\n            _mapInvestors[acc] = Investor(address(0),0,0);\\n            delete _investors[index];\\n            //\u586B\u4E0A\u5220\u9664\u7684\u7A7A\u767D\\n            _investors[index] = _investors[_investors.length - 1];\\n        }\\n    }\\n\\n    function investorAtAccount(address acc) public view returns(address account,\\n         uint256 lockXLs,\\n         uint256 unlockXLs) {\\n        Investor storage inv = _mapInvestors[acc];\\n             account = inv.account;\\n             lockXLs = inv.lockXLs;\\n             unlockXLs = inv.unlockXLs;\\n    }\\n\\n    function appendLocksXLs(address acc,uint256 lockXls) public onlyManager {\\n        require(acc != address(0),\\\u00220\u5730\u5740\\\u0022);\\n        if(_mapInvestors[acc].account == address(0)){//\u65B0\u589E\\n            addInvestor(acc,lockXls);\\n        }else{ //\u8FFD\u52A0\\n            Investor storage inv = _mapInvestors[acc];\\n            inv.lockXLs = inv.lockXLs.add(lockXls);\\n        }\\n    }\\n\\n   //\u89E3\u9501\u67D0\u4E2A\u8D26\u6237\\n    function unlockAccount(address acc) internal {\\n        Investor storage inv = _mapInvestors[acc];\\n             if(inv.account == address(0)){\\n                 return;\\n             }\\n              uint curDay = curDays();\\n              //1%,100\u5929\\n              uint256 totalUnlock = inv.lockXLs.mul(curDay).div(UNLOCK_DURATION);\\n\\n              //\u5F53\u524D\u603B\u91CA\u653E\u91CF - \u5DF2\u7ECF\u91CA\u653E\u7684\u91CF\\n              uint256 unlocking = totalUnlock.sub(inv.unlockXLs);\\n              if(unlocking \\u003c= 0){ //\u7B49\u96F6\u5219\u5DF2\u7ECF\u91CA\u653E\u8FC7\\n                  return;\\n              }\\n              inv.unlockXLs = totalUnlock;\\n              _mapInvestors[acc].unlockXLs = totalUnlock;\\n              _xlToken.transfer(inv.account,unlocking);\\n              emit UnlockXLEvent(inv.account,unlocking);\\n    }\\n    //\u6279\u91CF\u91CA\u653E\\n    function unlockBatch() public notPaused onlyManager {\\n       // require(isFinished() == false,\\\u0022\u91CA\u653E\u65F6\u95F4\u5DF2\u5230\\\u0022);\\n        //\u5F53\u524D\u91CA\u653E\u91CF = \u9501\u4ED3\u603B\u91CF*curDay/100 - \u5DF2\u7ECF\u91CA\u653E\u91CF\\n        uint curDay = curDays();\\n        require(curDay \\u003c= UNLOCK_DURATION,\\\u0022\u91CA\u653E\u5468\u671F\u5B8C\u6210!\\\u0022);\\n        for (uint256 i = 0; i \\u003c _investors.length; \u002B\u002Bi){\\n             address acc = _investors[i];\\n             if(acc == address(0)){\\n                 continue;\\n             }\\n             unlockAccount(acc);\\n        }\\n    }\\n\\n    function balanceAt(address acc) public view returns(uint256 balance){\\n        require(acc != address(0),\\\u0022\u5730\u5740\u65E0\u6548!\\\u0022);\\n        balance = _xlToken.balanceOf(acc);\\n    }\\n}\\n\u0022},\u0022Ownable.sol\u0022:{\u0022content\u0022:\u0022pragma solidity \\u003e=0.4.24 \\u003c0.6.0;\\nimport \\\u0022./IERC20Token.sol\\\u0022;\\ncontract Ownable {\\n    address private _owner;\\n    mapping (address=\\u003ebool) private _managers;\\n    event OwnershipTransferred(address indexed prevOwner,address indexed newOwner);\\n    event WithdrawEtherEvent(address indexed receiver,uint256 indexed amount,uint256 indexed atime);\\n    //\u7BA1\u7406\u8005\u5904\u7406\u4E8B\u4EF6\\n    event ManagerChange(address indexed manager,bool indexed isMgr);\\n    //modifier\\n    modifier onlyOwner{\\n        require(msg.sender == _owner, \\\u0022sender not eq owner\\\u0022);\\n        _;\\n    }\\n\\n    modifier onlyManager{\\n        require(_managers[msg.sender] == true, \\\u0022\u4E0D\u662F\u7BA1\u7406\u5458\\\u0022);\\n        _;\\n    }\\n    constructor() internal{\\n        _owner = msg.sender;\\n        _managers[msg.sender] = true;\\n    }\\n\\n    function owner() public view returns(address) {\\n        return _owner;\\n    }\\n\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        require(newOwner != address(0), \\\u0022newOwner can\\u0027t be empty!\\\u0022);\\n        address prevOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(prevOwner,newOwner);\\n    }\\n\\n    //\u7BA1\u7406\u5458\\n    function changeManager(address account,bool isManager) public onlyOwner {\\n        _managers[account] = isManager;\\n        emit ManagerChange(account,isManager);\\n    }\\n    function isManager(address account) public view returns(bool) {\\n        return _managers[account];\\n    }\\n\\n    /**\\n     * @dev Rescue compatible ERC20 Token\\n     *\\n     * @param tokenAddr ERC20 The address of the ERC20 token contract\\n     * @param receiver The address of the receiver\\n     * @param amount uint256\\n     */\\n    function rescueTokens(IERC20Token tokenAddr, address receiver, uint256 amount) external onlyOwner {\\n        IERC20Token _token = IERC20Token(tokenAddr);\\n        require(receiver != address(0),\\\u0022receiver can\\u0027t be empty!\\\u0022);\\n        uint256 balance = _token.balanceOf(address(this));\\n        require(balance \\u003e= amount,\\\u0022balance is not enough!\\\u0022);\\n        require(_token.transfer(receiver, amount),\\\u0022transfer failed!!\\\u0022);\\n    }\\n\\n    /**\\n     * @dev Withdraw ether\\n     */\\n    function withdrawEther(address payable to, uint256 amount) external onlyOwner {\\n        require(to != address(0),\\\u0022address can\\u0027t be empty\\\u0022);\\n        uint256 balance = address(this).balance;\\n        require(balance \\u003e= amount,\\\u0022this balance is not enough!\\\u0022);\\n        to.transfer(amount);\\n       emit WithdrawEtherEvent(to,amount,now);\\n    }\\n\\n\\n}\u0022},\u0022SafeMath.sol\u0022:{\u0022content\u0022:\u0022pragma solidity \\u003e=0.4.24 \\u003c0.6.0;\\n\\n/*\\n    Library for basic math operations with overflow/underflow protection\\n*/\\nlibrary SafeMath {\\n    /**\\n        @dev returns the sum of _x and _y, reverts if the calculation overflows\\n\\n        @param _x   value 1\\n        @param _y   value 2\\n\\n        @return sum\\n    */\\n    function add(uint256 _x, uint256 _y) internal pure returns (uint256) {\\n        uint256 z = _x \u002B _y;\\n        require(z \\u003e= _x,\\\u0022SafeMath-\\u003emul got a exception\\\u0022);\\n        return z;\\n    }\\n\\n    /**\\n        @dev returns the difference of _x minus _y, reverts if the calculation underflows\\n\\n        @param _x   minuend\\n        @param _y   subtrahend\\n\\n        @return difference\\n    */\\n    function sub(uint256 _x, uint256 _y) internal pure returns (uint256) {\\n        require(_x \\u003e= _y,\\\u0022SafeMath-\\u003esub got a exception\\\u0022);\\n        return _x - _y;\\n    }\\n\\n    /**\\n        @dev returns the product of multiplying _x by _y, reverts if the calculation overflows\\n\\n        @param _x   factor 1\\n        @param _y   factor 2\\n\\n        @return product\\n    */\\n    function mul(uint256 _x, uint256 _y) internal pure returns (uint256) {\\n        // gas optimization\\n        if (_x == 0)\\n            return 0;\\n\\n        uint256 z = _x * _y;\\n        require(z / _x == _y,\\\u0022SafeMath-\\u003emul got a exception\\\u0022);\\n        return z;\\n    }\\n\\n      /**\\n        @dev Integer division of two numbers truncating the quotient, reverts on division by zero.\\n\\n        @param _x   dividend\\n        @param _y   divisor\\n\\n        @return quotient\\n    */\\n    function div(uint256 _x, uint256 _y) internal pure returns (uint256) {\\n        require(_y \\u003e 0,\\\u0022SafeMath-\\u003ediv got a exception\\\u0022);\\n        uint256 c = _x / _y;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\\n     * reverts when dividing by zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b != 0, \\\u0022SafeMath: modulo by zero\\\u0022);\\n        return a % b;\\n    }\\n}\\n\u0022},\u0022UrgencyPause.sol\u0022:{\u0022content\u0022:\u0022pragma solidity \\u003e=0.4.24 \\u003c0.6.0;\\n/*\\n*\u7D27\u6025\u60C5\u51B5\u4E0B\u6682\u505C\u8F6C\u8D26\\n*\\n*/\\nimport \\\u0022./Ownable.sol\\\u0022;\\ncontract UrgencyPause is Ownable{\\n    bool private _paused;\\n    event Paused(address indexed account,bool indexed state);\\n    \\n    modifier notPaused(){\\n        require(!_paused,\\\u0022the state is paused!\\\u0022);\\n        _;\\n    }\\n    constructor() public{\\n        _paused = false;\\n    }\\n\\n\\n    function paused() public view returns(bool) {\\n        return _paused;\\n    }\\n\\n    function setPaused(bool state) public onlyManager {\\n            _paused = state;\\n            emit Paused(msg.sender,_paused);\\n    }\\n\\n}\\n\u0022}}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022curDays\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022acc\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022investorAtAccount\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022account\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022lockXLs\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022unlockXLs\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_token\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022setToken\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022state\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022name\u0022:\u0022setPaused\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022acc\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022balanceAt\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022balance\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022withdrawEther\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022paused\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022isFinished\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022investors\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022count\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_time\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022setStartTimeUnLock\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022owner\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022acc\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022lockXls\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022appendLocksXLs\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022unlockBatch\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022tokenAddr\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022receiver\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022rescueTokens\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022account\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022isManager\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022name\u0022:\u0022changeManager\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022index\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022removeInvestorAtIndex\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_acc\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_lockXLs\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022addInvestor\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022transferOwnership\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022account\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022isManager\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[{\u0022name\u0022:\u0022token\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022fallback\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022token\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022time\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022TokenChanged\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022acc\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022lockXLs\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022LockXLEvent\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022account\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022startTime\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022StartTimeUnlock\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022acc\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022unlockXLs\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022UnlockXLEvent\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022account\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022state\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022name\u0022:\u0022Paused\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022prevOwner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022OwnershipTransferred\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022receiver\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022atime\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022WithdrawEtherEvent\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022manager\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022isMgr\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022name\u0022:\u0022ManagerChange\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"Omg","CompilerVersion":"v0.5.0\u002Bcommit.1d4f565a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000336a24fc03c93101d4e31160c27eeaedc34be01d","Library":"","SwarmSource":"bzzr://369bae078ad0ffb3c27a84cbcf131b5a209e9b0683d9d5d2152aa28af428d9ff"}]