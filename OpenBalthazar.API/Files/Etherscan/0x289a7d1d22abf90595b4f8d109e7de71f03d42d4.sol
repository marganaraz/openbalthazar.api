[{"SourceCode":"// Built by @nanexcool - 2020\r\n\r\npragma solidity ^0.5.15;\r\n\r\ninterface Chai {\r\n    function balanceOf(address who) external view returns (uint256 wad);\r\n    function transfer(address who, uint256 wad) external returns (bool ok);\r\n}\r\n\r\ncontract AztecChaiAirdrop {\r\n\r\n    // all of these constants will one day be \u0060immutable\u0060 ;)\r\n    Chai public constant chai = Chai(0x06AF07097C9Eeb7fD685c692751D5C66dB49c215);\r\n    bytes32 public constant rootHash = 0x20162f371d4318f677b2dc93bdda3d26c72856293a2885c2b204f212082f0a62;\r\n    // expires Friday, January 24, 2020 12:00:00 AM GMT\r\n    uint256 public constant expires = 1579824000;\r\n    address public constant owner = 0x72BA1965320ab5352FD6D68235Cc3C5306a6FFA2;\r\n    uint256 public claimed;\r\n    mapping (address =\u003E uint256) public done;\r\n\r\n    function claim(bytes32[] calldata proof) external {\r\n        require(now \u003C expires, \u0022experiment is over!\u0022);\r\n        require(done[msg.sender] == 0, \u0022claimed!\u0022);\r\n        require(verify(proof, msg.sender), \u0022nope!\u0022);\r\n\r\n        done[msg.sender] = 1;\r\n        claimed\u002B\u002B;\r\n\r\n        require(chai.transfer(msg.sender, 1 ether), \u0022could not transfer chai\u0022);\r\n    }\r\n\r\n    // https://rstormsf.github.io/slides-merkleairdrop/#/14\r\n    function verify(bytes32[] memory proof, address who) public pure returns (bool) {\r\n        bytes32 computedHash = keccak256(abi.encodePacked(who));\r\n\r\n        for (uint256 i = 0; i \u003C proof.length; i\u002B\u002B) {\r\n            bytes32 proofElement = proof[i];\r\n\r\n            if (computedHash \u003C proofElement) {\r\n            computedHash = keccak256(abi.encodePacked(computedHash, proofElement));\r\n            } else {\r\n            computedHash = keccak256(abi.encodePacked(proofElement, computedHash));\r\n            }\r\n        }\r\n\r\n        return computedHash == rootHash;\r\n    }\r\n\r\n    function end() external {\r\n        require(now \u003E= expires, \u0022experiment is not over!\u0022);\r\n        require(msg.sender == owner, \u0022you are not Mariano!\u0022);\r\n\r\n        chai.transfer(msg.sender, chai.balanceOf(address(this)));\r\n    }\r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022chai\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022contract Chai\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022bytes32[]\u0022,\u0022name\u0022:\u0022proof\u0022,\u0022type\u0022:\u0022bytes32[]\u0022}],\u0022name\u0022:\u0022claim\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022claimed\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022done\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022end\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022expires\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022owner\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022rootHash\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022bytes32[]\u0022,\u0022name\u0022:\u0022proof\u0022,\u0022type\u0022:\u0022bytes32[]\u0022},{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022who\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022verify\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022pure\u0022,\u0022type\u0022:\u0022function\u0022}]","ContractName":"AztecChaiAirdrop","CompilerVersion":"v0.5.15\u002Bcommit.6a57276f","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://d5c226d83d0a3e765a1fbc561bdc3a70134b9a36590a6a34d457b3bc23c56f00"}]