[{"SourceCode":"pragma solidity 0.5.11;\r\n\r\n\r\ninterface IERC20 {\r\n  function balanceOf(address) external view returns (uint256);\r\n}\r\n\r\n\r\ncontract DepositStateChecker {\r\n  enum DepositState {\r\n    NoContractNoFunds,\r\n    NoContractDust,\r\n    NoContractSufficientFunds,\r\n    ContractNoFunds,\r\n    ContractDust,\r\n    ContractSufficientFunds\r\n  }\r\n    \r\n  IERC20 internal constant _DAI = IERC20(\r\n    0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359 // mainnet\r\n  );\r\n\r\n  IERC20 internal constant _USDC = IERC20(\r\n    0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 // mainnet\r\n  );\r\n  \r\n  // Minimum supported deposit \u0026 non-maximum withdrawal size is .001 underlying.\r\n  uint256 private constant _JUST_UNDER_ONE_1000th_DAI = 999999999999999;\r\n  uint256 private constant _JUST_UNDER_ONE_1000th_USDC = 999;\r\n  \r\n  function getDepositStates(\r\n    address[] calldata smartWallets\r\n  ) external view returns (\r\n    DepositState[] memory depositStates\r\n  ) {\r\n    depositStates = new DepositState[](smartWallets.length);\r\n    address smartWallet;\r\n    uint256 size;\r\n    uint256 daiBalance;\r\n    uint256 usdcBalance;\r\n    for (uint256 i = 0; i \u003C smartWallets.length; i\u002B\u002B) {\r\n      smartWallet = smartWallets[i];\r\n      assembly { size := extcodesize(smartWallet) }\r\n      \r\n      daiBalance = _DAI.balanceOf(smartWallet);\r\n      if (daiBalance \u003E _JUST_UNDER_ONE_1000th_DAI) {\r\n        depositStates[i] = (\r\n          size == 0 ?\r\n            DepositState.NoContractSufficientFunds :\r\n            DepositState.ContractSufficientFunds\r\n        );\r\n        continue;\r\n      }\r\n      \r\n      usdcBalance = _USDC.balanceOf(smartWallet);\r\n      if (daiBalance \u003E _JUST_UNDER_ONE_1000th_DAI) {\r\n        depositStates[i] = (\r\n          size == 0 ?\r\n            DepositState.NoContractSufficientFunds :\r\n            DepositState.ContractSufficientFunds\r\n        );\r\n        continue;\r\n      }\r\n      \r\n      if (daiBalance == 0 \u0026\u0026 usdcBalance == 0) {\r\n        depositStates[i] = (\r\n          size == 0 ?\r\n            DepositState.NoContractNoFunds :\r\n            DepositState.ContractNoFunds\r\n        );\r\n      } else {\r\n        depositStates[i] = (\r\n          size == 0 ?\r\n            DepositState.NoContractDust :\r\n            DepositState.ContractDust\r\n        );\r\n      }\r\n    }\r\n  }\r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address[]\u0022,\u0022name\u0022:\u0022smartWallets\u0022,\u0022type\u0022:\u0022address[]\u0022}],\u0022name\u0022:\u0022getDepositStates\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022enum DepositStateChecker.DepositState[]\u0022,\u0022name\u0022:\u0022depositStates\u0022,\u0022type\u0022:\u0022uint8[]\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022}]","ContractName":"DepositStateChecker","CompilerVersion":"v0.5.11\u002Bcommit.c082d0b4","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://0ea623140dd10c3c5da259b0e05ccdd8af106ca44934942bb79e0d245a82baee"}]