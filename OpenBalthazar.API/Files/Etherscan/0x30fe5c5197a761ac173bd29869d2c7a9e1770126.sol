[{"SourceCode":"pragma solidity ^0.5.10;\r\n\r\n\r\ncontract InstaLottos\r\n{\r\n    address payable private manager;\r\n    \r\n    uint private betamount;\r\n    \r\n    uint private playercount;\r\n    \r\n    uint private lowerbound;\r\n    \r\n    uint private upperbound;\r\n    \r\n    bool private contractactive;\r\n    \r\n    bool private contractpause;\r\n    \r\n    event Playlottery(uint cbalance, uint rndm,uint pcount);\r\n    \r\n    constructor() public\r\n    {\r\n\r\n        manager = msg.sender;\r\n        \r\n        contractactive = true;\r\n        \r\n        contractpause = false;\r\n        \r\n        betamount = 0.005 ether;\r\n        \r\n        playercount = 0;\r\n        \r\n        lowerbound = 1;\r\n    \r\n        upperbound = 100;\r\n    }\r\n    \r\n    modifier onlyManager()\r\n    {\r\n        require(msg.sender == manager);\r\n        _;\r\n    }\r\n    \r\n   \r\n    function getcontractactive() public view returns (bool)\r\n    {\r\n        return contractactive;\r\n    }\r\n    \r\n     function getcontractpause() public view returns (bool)\r\n    {\r\n        return contractpause;\r\n    }\r\n    \r\n    function getbetamount() public view returns (uint)\r\n    {\r\n        return betamount;\r\n    }\r\n  \r\n    \r\n    function getplayercount() public view returns (uint)\r\n    {\r\n        return playercount;\r\n    }\r\n    \r\n    function getupperbound() public view returns(uint)\r\n    {\r\n        return upperbound;\r\n    }\r\n    \r\n    function getmanager() public view returns(address)\r\n    {\r\n        return manager;\r\n    }\r\n    \r\n    function getcontractbalance() public view returns(uint)\r\n    {\r\n        return address(this).balance;\r\n    }\r\n    \r\n    function setbetamount(uint btamt) public onlyManager\r\n    {\r\n        betamount = btamt;\r\n    }\r\n    \r\n    function setupperbound(uint upbound) public onlyManager\r\n    {\r\n        upperbound = upbound;\r\n    }\r\n    \r\n\r\n    function setcontractpause(bool pas) public onlyManager\r\n    {\r\n        if (pas == false)\r\n        {\r\n            contractactive = true;\r\n        }\r\n        contractpause = pas;\r\n    }\r\n    \r\n    \r\n    function setmanager(address payable newmngr) public onlyManager\r\n    {\r\n        manager = newmngr;\r\n    }\r\n    \r\n    \r\n    function playlottery(uint playnum) public payable\r\n    {\r\n        require(contractactive==true);\r\n        require(playnum \u003E=lowerbound \u0026\u0026 playnum \u003C=upperbound);\r\n        require(msg.value == betamount);\r\n        \r\n        playercount\u002B\u002B;\r\n        \r\n        uint rnd = random(msg.sender,playnum);\r\n        \r\n        if (playnum == rnd)\r\n        {\r\n            settlewin(msg.sender);\r\n            emit Playlottery(getcontractbalance(),rnd,playercount);\r\n            \r\n            if (contractpause == true)\r\n            {\r\n                contractactive = false;\r\n            }\r\n            \r\n            return;\r\n        }\r\n        \r\n        emit Playlottery(getcontractbalance(),rnd,playercount);\r\n        \r\n        return;\r\n        \r\n    }\r\n    \r\n    function settlewin(address payable msgsender) private\r\n    {\r\n        address payable winner = msgsender;\r\n        \r\n        uint cb = address(this).balance;\r\n\r\n            if (cb \u003C= (betamount * 2))\r\n            {\r\n                    winner.transfer(cb);\r\n            }\r\n            else if (cb \u003C=(betamount*3))\r\n            {\r\n            \twinner.transfer((betamount*2));\r\n            }\r\n            else\r\n            {\r\n                    uint cbnow = cb - betamount;\r\n                    uint cb90 = cbnow * 90/100;\r\n                    uint cb10 = cbnow - cb90;\r\n                    manager.transfer(cb10);\r\n                    winner.transfer(cb90);\r\n            }\r\n            \r\n            playercount = 0;\r\n    }\r\n    \r\n    function random(address msgsender,uint numplayed) private view returns (uint)\r\n    {\r\n        uint tmp = uint256(keccak256(abi.encodePacked(block.difficulty,block.timestamp,block.number,playercount,msgsender,numplayed)));\r\n        return  (tmp % upperbound)\u002B1;\r\n    }\r\n    \r\n    function destroyContract() public onlyManager\r\n    { \r\n            require(contractactive == false);\r\n            \r\n            selfdestruct(manager); \r\n    }\r\n    \r\n \r\n    function () external\r\n    {\r\n      \r\n    }\r\n    \r\n    \r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getcontractpause\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022destroyContract\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getplayercount\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getupperbound\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022upbound\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022setupperbound\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getbetamount\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022btamt\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022setbetamount\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022pas\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022name\u0022:\u0022setcontractpause\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getcontractbalance\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022playnum\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022playlottery\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getmanager\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022newmngr\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022setmanager\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getcontractactive\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022fallback\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022cbalance\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022rndm\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022pcount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Playlottery\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"InstaLottos","CompilerVersion":"v0.5.10\u002Bcommit.5a6ea5b1","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://316782b43212ad66d0341ae5d9fe70435f9a5d43dcd8d2f0a3086638cdc2ba76"}]