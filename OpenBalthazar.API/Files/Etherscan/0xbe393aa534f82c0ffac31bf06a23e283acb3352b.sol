[{"SourceCode":"// File: @openzeppelin/contracts/GSN/Context.sol\r\n\r\npragma solidity ^0.5.0;\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\ncontract Context {\r\n    // Empty internal constructor, to prevent people from mistakenly deploying\r\n    // an instance of this contract, which should be used via inheritance.\r\n    constructor () internal { }\r\n    // solhint-disable-previous-line no-empty-blocks\r\n\r\n    function _msgSender() internal view returns (address payable) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/ownership/Ownable.sol\r\n\r\npragma solidity ^0.5.0;\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * \u0060onlyOwner\u0060, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor () internal {\r\n        _owner = _msgSender();\r\n        emit OwnershipTransferred(address(0), _owner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(isOwner(), \u0022Ownable: caller is not the owner\u0022);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the caller is the current owner.\r\n     */\r\n    function isOwner() public view returns (bool) {\r\n        return _msgSender() == _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * \u0060onlyOwner\u0060 functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (\u0060newOwner\u0060).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (\u0060newOwner\u0060).\r\n     */\r\n    function _transferOwnership(address newOwner) internal {\r\n        require(newOwner != address(0), \u0022Ownable: new owner is the zero address\u0022);\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\n// File: contracts/Library/IERC20.sol\r\n\r\npragma solidity ^0.5.14;\r\n\r\ninterface IERC20 {\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n    function transfer(address _to, uint256 _value) external returns (bool);\r\n    function transferFrom(address _from, address _to, uint256 _value) external returns (bool);\r\n    function approve(address _spender, uint256 _value) external returns (bool);\r\n}\r\n\r\n// File: contracts/Library/SafeMath.sol\r\n\r\npragma solidity ^0.5.14;\r\n\r\n/**\r\n * @dev Wrappers over Solidity\u0027s arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * \u0060SafeMath\u0060 restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it\u0027s recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity\u0027s \u0060\u002B\u0060 operator.\r\n     *\r\n     * Requirements:\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a \u002B b;\r\n        require(c \u003E= a, \u0022SafeMath: addition overflow\u0022);\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity\u0027s \u0060-\u0060 operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \u0022SafeMath: subtraction overflow\u0022);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity\u0027s \u0060-\u0060 operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b \u003C= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity\u0027s \u0060*\u0060 operator.\r\n     *\r\n     * Requirements:\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring \u0027a\u0027 not being zero, but the\r\n        // benefit is lost if \u0027b\u0027 is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \u0022SafeMath: multiplication overflow\u0022);\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity\u0027s \u0060/\u0060 operator. Note: this function uses a\r\n     * \u0060revert\u0060 opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \u0022SafeMath: division by zero\u0022);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity\u0027s \u0060/\u0060 operator. Note: this function uses a\r\n     * \u0060revert\u0060 opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b \u003E 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c \u002B a % b); // There is no case in which this doesn\u0027t hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity\u0027s \u0060%\u0060 operator. This function uses a \u0060revert\u0060\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \u0022SafeMath: modulo by zero\u0022);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity\u0027s \u0060%\u0060 operator. This function uses a \u0060revert\u0060\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\n// File: contracts/Library/Freezer.sol\r\n\r\npragma solidity ^0.5.14;\r\n\r\n\r\n/**\r\n * @title Freezer\r\n * @author Yoonsung\r\n * @notice This Contracts is an extension of the ERC20. Transfer\r\n * of a specific address can be blocked from by the Owner of the\r\n * Token Contract.\r\n */\r\ncontract Freezer is Ownable {\r\n    event Freezed(address dsc);\r\n    event Unfreezed(address dsc);\r\n\r\n    mapping (address =\u003E bool) public freezing;\r\n\r\n    modifier isFreezed (address src) {\r\n        require(freezing[src] == false, \u0022Freeze/Fronzen-Account\u0022);\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @notice The Freeze function sets the transfer limit\r\n    * for a specific address.\r\n    * @param _dsc address The specify address want to limit the transfer.\r\n    */\r\n    function freeze(address _dsc) external onlyOwner {\r\n        require(_dsc != address(0), \u0022Freeze/Zero-Address\u0022);\r\n        require(freezing[_dsc] == false, \u0022Freeze/Already-Freezed\u0022);\r\n\r\n        freezing[_dsc] = true;\r\n\r\n        emit Freezed(_dsc);\r\n    }\r\n\r\n    /**\r\n    * @notice The Freeze function removes the transfer limit\r\n    * for a specific address.\r\n    * @param _dsc address The specify address want to remove the transfer.\r\n    */\r\n    function unFreeze(address _dsc) external onlyOwner {\r\n        require(freezing[_dsc] == true, \u0022Freeze/Already-Unfreezed\u0022);\r\n\r\n        delete freezing[_dsc];\r\n\r\n        emit Unfreezed(_dsc);\r\n    }\r\n}\r\n\r\n// File: contracts/Library/SendLimiter.sol\r\n\r\npragma solidity ^0.5.14;\r\n\r\n\r\n/**\r\n * @title SendLimiter\r\n * @author Yoonsung\r\n * @notice This contract acts as an ERC20 extension. It must\r\n * be called from the creator of the ERC20, and a modifier is\r\n * provided that can be used together. This contract is short-lived.\r\n * You cannot re-enable it after SendUnlock, to be careful. Provides \r\n * a set of functions to manage the addresses that can be sent.\r\n */\r\ncontract SendLimiter is Ownable {\r\n    event SendWhitelisted(address dsc);\r\n    event SendDelisted(address dsc);\r\n    event SendUnlocked();\r\n\r\n    bool public sendLimit;\r\n    mapping (address =\u003E bool) public sendWhitelist;\r\n\r\n    /**\r\n    * @notice In constructor, Set Send Limit exceptionally msg.sender.\r\n    * constructor is used, the restriction is activated.\r\n    */\r\n    constructor() public {\r\n        sendLimit = true;\r\n        sendWhitelist[msg.sender] = true;\r\n    }\r\n\r\n    modifier isAllowedSend (address dsc) {\r\n        if (sendLimit) require(sendWhitelist[dsc], \u0022SendLimiter/Not-Allow-Address\u0022);\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @notice Register the address that you want to allow to be sent.\r\n    * @param _whiteAddress address The specify what to send target.\r\n    */\r\n    function addAllowSender(address _whiteAddress) public onlyOwner {\r\n        require(_whiteAddress != address(0), \u0022SendLimiter/Not-Allow-Zero-Address\u0022);\r\n        sendWhitelist[_whiteAddress] = true;\r\n        emit SendWhitelisted(_whiteAddress);\r\n    }\r\n\r\n    /**\r\n    * @notice Register the addresses that you want to allow to be sent.\r\n    * @param _whiteAddresses address[] The specify what to send target.\r\n    */\r\n    function addAllowSenders(address[] memory _whiteAddresses) public onlyOwner {\r\n        for (uint256 i = 0; i \u003C _whiteAddresses.length; i\u002B\u002B) {\r\n            addAllowSender(_whiteAddresses[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @notice Remove the address that you want to allow to be sent.\r\n    * @param _whiteAddress address The specify what to send target.\r\n    */\r\n    function removeAllowedSender(address _whiteAddress) public onlyOwner {\r\n        require(_whiteAddress != address(0), \u0022SendLimiter/Not-Allow-Zero-Address\u0022);\r\n        delete sendWhitelist[_whiteAddress];\r\n        emit SendDelisted(_whiteAddress);\r\n    }\r\n\r\n    /**\r\n    * @notice Remove the addresses that you want to allow to be sent.\r\n    * @param _whiteAddresses address[] The specify what to send target.\r\n    */\r\n    function removeAllowedSenders(address[] memory _whiteAddresses) public onlyOwner {\r\n        for (uint256 i = 0; i \u003C _whiteAddresses.length; i\u002B\u002B) {\r\n            removeAllowedSender(_whiteAddresses[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @notice Revoke transfer restrictions.\r\n    */\r\n    function sendUnlock() external onlyOwner {\r\n        sendLimit = false;\r\n        emit SendUnlocked();\r\n    }\r\n}\r\n\r\n// File: contracts/Library/ReceiveLimiter.sol\r\n\r\npragma solidity ^0.5.14;\r\n\r\n\r\n/**\r\n * @title ReceiveLimiter\r\n * @author Yoonsung\r\n * @notice This contract acts as an ERC20 extension. It must\r\n * be called from the creator of the ERC20, and a modifier is\r\n * provided that can be used together. This contract is short-lived.\r\n * You cannot re-enable it after ReceiveUnlock, to be careful. Provides \r\n * a set of functions to manage the addresses that can be sent.\r\n */\r\ncontract ReceiveLimiter is Ownable {\r\n    event ReceiveWhitelisted(address dsc);\r\n    event ReceiveDelisted(address dsc);\r\n    event ReceiveUnlocked();\r\n\r\n    bool public receiveLimit;\r\n    mapping (address =\u003E bool) public receiveWhitelist;\r\n\r\n    /**\r\n    * @notice In constructor, Set Receive Limit exceptionally msg.sender.\r\n    * constructor is used, the restriction is activated.\r\n    */\r\n    constructor() public {\r\n        receiveLimit = true;\r\n        receiveWhitelist[msg.sender] = true;\r\n    }\r\n\r\n    modifier isAllowedReceive (address dsc) {\r\n        if (receiveLimit) require(receiveWhitelist[dsc], \u0022Limiter/Not-Allow-Address\u0022);\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @notice Register the address that you want to allow to be receive.\r\n    * @param _whiteAddress address The specify what to receive target.\r\n    */\r\n    function addAllowReceiver(address _whiteAddress) public onlyOwner {\r\n        require(_whiteAddress != address(0), \u0022Limiter/Not-Allow-Zero-Address\u0022);\r\n        receiveWhitelist[_whiteAddress] = true;\r\n        emit ReceiveWhitelisted(_whiteAddress);\r\n    }\r\n\r\n    /**\r\n    * @notice Register the addresses that you want to allow to be receive.\r\n    * @param _whiteAddresses address[] The specify what to receive target.\r\n    */\r\n    function addAllowReceivers(address[] memory _whiteAddresses) public onlyOwner {\r\n        for (uint256 i = 0; i \u003C _whiteAddresses.length; i\u002B\u002B) {\r\n            addAllowReceiver(_whiteAddresses[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @notice Remove the address that you want to allow to be receive.\r\n    * @param _whiteAddress address The specify what to receive target.\r\n    */\r\n    function removeAllowedReceiver(address _whiteAddress) public onlyOwner {\r\n        require(_whiteAddress != address(0), \u0022Limiter/Not-Allow-Zero-Address\u0022);\r\n        delete receiveWhitelist[_whiteAddress];\r\n        emit ReceiveDelisted(_whiteAddress);\r\n    }\r\n\r\n    /**\r\n    * @notice Remove the addresses that you want to allow to be receive.\r\n    * @param _whiteAddresses address[] The specify what to receive target.\r\n    */\r\n    function removeAllowedReceivers(address[] memory _whiteAddresses) public onlyOwner {\r\n        for (uint256 i = 0; i \u003C _whiteAddresses.length; i\u002B\u002B) {\r\n            removeAllowedReceiver(_whiteAddresses[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @notice Revoke Receive restrictions.\r\n    */\r\n    function receiveUnlock() external onlyOwner {\r\n        receiveLimit = false;\r\n        emit ReceiveUnlocked();\r\n    }\r\n}\r\n\r\n// File: contracts/TokenAsset.sol\r\n\r\npragma solidity ^0.5.14;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @title TokenAsset\r\n * @author Yoonsung\r\n * @notice This Contract is an implementation of TokenAsset\u0027s ERC20\r\n * Basic ERC20 functions and \u0022Burn\u0022 functions are implemented. For the \r\n * Burn function, only the Owner of Contract can be called and used \r\n * to incinerate unsold Token. Transfer and reception limits are imposed\r\n * after the contract is distributed and can be revoked through SendUnlock\r\n * and ReceiveUnlock. Don\u0027t do active again after cancellation. The Owner \r\n * may also suspend the transfer of a particular account at any time.\r\n */\r\ncontract TokenAsset is Ownable, IERC20, SendLimiter, ReceiveLimiter, Freezer {\r\n    using SafeMath for uint256;\r\n\r\n    string public constant name = \u0022tokenAsset\u0022;\r\n    string public constant symbol = \u0022NTB\u0022;\r\n    uint8 public constant decimals = 18;\r\n    uint256 public totalSupply = 200000000e18;\r\n\r\n    mapping (address =\u003E uint256) public balanceOf;\r\n    mapping (address =\u003E mapping(address =\u003E uint256)) public allowance;\r\n\r\n    \r\n   /**\r\n    * @notice In constructor, Set Send Limit and Receive Limits.\r\n    * Additionally, Contract\u0027s publisher is authorized to own all tokens.\r\n    */\r\n    constructor() SendLimiter() ReceiveLimiter() public {\r\n        balanceOf[msg.sender] = totalSupply;\r\n    }\r\n\r\n    /**\r\n    * @notice Transfer function sends Token to the target. However,\r\n    * caller must have more tokens than or equal to the quantity for send.\r\n    * @param _to address The specify what to send target.\r\n    * @param _value uint256 The amount of token to tranfer.\r\n    * @return True if the withdrawal succeeded, otherwise revert.\r\n    */\r\n    function transfer (\r\n        address _to,\r\n        uint256 _value\r\n    ) external isAllowedSend(msg.sender) isAllowedReceive(_to) isFreezed(msg.sender) returns (bool) {\r\n        require(_to != address(0), \u0022TokenAsset/Not-Allow-Zero-Address\u0022);\r\n\r\n        balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value);\r\n        balanceOf[_to] = balanceOf[_to].add(_value);\r\n\r\n        emit Transfer(msg.sender, _to, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * @notice Transfer function sends Token to the target.\r\n    * In most cases, the allowed caller uses this function. Send\r\n    * Token instead of owner. Allowance address must have more\r\n    * tokens than or equal to the quantity for send.\r\n    * @param _from address The acoount to sender.\r\n    * @param _to address The specify what to send target.\r\n    * @param _value uint256 The amount of token to tranfer.\r\n    * @return True if the withdrawal succeeded, otherwise revert.\r\n    */\r\n    function transferFrom (\r\n        address _from,\r\n        address _to,\r\n        uint256 _value\r\n    ) external isAllowedSend(_from) isAllowedReceive(_to) isFreezed(_from) returns (bool) {\r\n        require(_from != address(0), \u0022TokenAsset/Not-Allow-Zero-Address\u0022);\r\n        require(_to != address(0), \u0022TokenAsset/Not-Allow-Zero-Address\u0022);\r\n\r\n        balanceOf[_from] = balanceOf[_from].sub(_value);\r\n        balanceOf[_to] = balanceOf[_to].add(_value);\r\n        allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_value);\r\n\r\n        emit Transfer(_from, _to, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * @notice The Owner of the Contracts incinerate own\r\n    * Token. burn unsold Token and reduce totalsupply. Caller\r\n    * must have more tokens than or equal to the quantity for send.\r\n    * @param _value uint256 The amount of incinerate token.\r\n    * @return True if the withdrawal succeeded, otherwise revert.\r\n    */\r\n    function burn (\r\n        uint256 _value\r\n    ) external returns (bool) {\r\n        require(_value \u003C= balanceOf[msg.sender]);\r\n\r\n        balanceOf[msg.sender] = balanceOf[msg.sender].sub(_value);\r\n        totalSupply = totalSupply.sub(_value);\r\n\r\n        emit Transfer(msg.sender, address(0), _value);\r\n        \r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * @notice Allow specific address to send token instead.\r\n    * @param _spender address The address to send transaction on my behalf\r\n    * @param _value uint256 The amount on my behalf, Usually 0 or uint256(-1).\r\n    * @return True if the withdrawal succeeded, otherwise revert.\r\n    */\r\n    function approve (\r\n        address _spender,\r\n        uint256 _value\r\n    ) external returns (bool) {\r\n        require(_spender != address(0), \u0022TokenAsset/Not-Allow-Zero-Address\u0022);\r\n        allowance[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n\r\n        return true;\r\n    }\r\n}","ABI":"[{\u0022inputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Approval\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022dsc\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022Freezed\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022previousOwner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022OwnershipTransferred\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022dsc\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022ReceiveDelisted\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022ReceiveUnlocked\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022dsc\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022ReceiveWhitelisted\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022dsc\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022SendDelisted\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022SendUnlocked\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022dsc\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022SendWhitelisted\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Transfer\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022dsc\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022Unfreezed\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_whiteAddress\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022addAllowReceiver\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address[]\u0022,\u0022name\u0022:\u0022_whiteAddresses\u0022,\u0022type\u0022:\u0022address[]\u0022}],\u0022name\u0022:\u0022addAllowReceivers\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_whiteAddress\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022addAllowSender\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address[]\u0022,\u0022name\u0022:\u0022_whiteAddresses\u0022,\u0022type\u0022:\u0022address[]\u0022}],\u0022name\u0022:\u0022addAllowSenders\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022allowance\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022approve\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022balanceOf\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022burn\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022decimals\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint8\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint8\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_dsc\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022freeze\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022freezing\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022isOwner\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022name\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022string\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022owner\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022receiveLimit\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022receiveUnlock\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022receiveWhitelist\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_whiteAddress\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022removeAllowedReceiver\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address[]\u0022,\u0022name\u0022:\u0022_whiteAddresses\u0022,\u0022type\u0022:\u0022address[]\u0022}],\u0022name\u0022:\u0022removeAllowedReceivers\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_whiteAddress\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022removeAllowedSender\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address[]\u0022,\u0022name\u0022:\u0022_whiteAddresses\u0022,\u0022type\u0022:\u0022address[]\u0022}],\u0022name\u0022:\u0022removeAllowedSenders\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022renounceOwnership\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022sendLimit\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022sendUnlock\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022sendWhitelist\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022symbol\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022string\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022totalSupply\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transfer\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transferFrom\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022transferOwnership\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_dsc\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022unFreeze\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022}]","ContractName":"TokenAsset","CompilerVersion":"v0.5.14\u002Bcommit.1f1aaa4","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://c0cf03ee2623f9b6eca61b9ee9f8d8c6f29591c00b1957722571125f20f734d9"}]