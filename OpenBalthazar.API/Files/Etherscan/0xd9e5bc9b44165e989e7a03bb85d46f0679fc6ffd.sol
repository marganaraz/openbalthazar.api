[{"SourceCode":"pragma solidity 0.5.12;\r\npragma experimental ABIEncoderV2;\r\n\r\n // @author Authereum, Inc.\r\n\r\n/**\r\n * @title AuthereumProxy\r\n * @author Authereum, Inc.\r\n * @dev The Authereum Proxy.\r\n */\r\n\r\ncontract AuthereumProxy {\r\n    string constant public authereumProxyVersion = \u00222019102500\u0022;\r\n\r\n    /// @dev Storage slot with the address of the current implementation.\r\n    /// @notice This is the keccak-256 hash of \u0022eip1967.proxy.implementation\u0022 subtracted \r\n    /// @notice by 1, and is validated in the constructor.\r\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\r\n\r\n    /// @dev Set the implementation in the constructor\r\n    /// @param _logic Address of the logic contract\r\n    constructor(address _logic) public payable {\r\n        bytes32 slot = IMPLEMENTATION_SLOT;\r\n        assembly {\r\n            sstore(slot, _logic)\r\n        }\r\n    }\r\n\r\n    /// @dev Fallback function\r\n    /// @notice A payable fallback needs to be implemented in the implementation contract\r\n    /// @notice This is a low level function that doesn\u0027t return to its internal call site.\r\n    /// @notice It will return to the external caller whatever the implementation returns.\r\n    function () external payable {\r\n        if (msg.data.length == 0) return;\r\n        address _implementation = implementation();\r\n\r\n        assembly {\r\n            // Copy msg.data. We take full control of memory in this inline assembly\r\n            // block because it will not return to Solidity code. We overwrite the\r\n            // Solidity scratch pad at memory position 0.\r\n            calldatacopy(0, 0, calldatasize)\r\n\r\n            // Call the implementation.\r\n            // out and outsize are 0 because we don\u0027t know the size yet.\r\n            let result := delegatecall(gas, _implementation, 0, calldatasize, 0, 0)\r\n\r\n            // Copy the returned data.\r\n            returndatacopy(0, 0, returndatasize)\r\n\r\n            switch result\r\n            // delegatecall returns 0 on error.\r\n            case 0 { revert(0, returndatasize) }\r\n            default { return(0, returndatasize) }\r\n        }\r\n    }\r\n\r\n    /// @dev Returns the current implementation.\r\n    /// @return Address of the current implementation\r\n    function implementation() public view returns (address impl) {\r\n        bytes32 slot = IMPLEMENTATION_SLOT;\r\n        assembly {\r\n            impl := sload(slot)\r\n        }\r\n    }\r\n}","ABI":"[{\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_logic\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022fallback\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022authereumProxyVersion\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022string\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022implementation\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022impl\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022}]","ContractName":"AuthereumProxy","CompilerVersion":"v0.5.12\u002Bcommit.7709ece9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000d8cab604bdd8cbb7c3eb0c26f7dc3abffb005a92","Library":"","SwarmSource":"bzzr://df4401333fb8c26a38547c751ff4c528d95f9c5a191e6bc81f110b4125072004"}]