[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\n/**\r\n * Math operations with safety checks\r\n */\r\nlibrary SafeMath {\r\n    uint256 constant public MAX_UINT256 = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\r\n\r\n    function safeAdd(uint256 x, uint256 y) pure internal returns (uint256 z) {\r\n        if (x \u003E MAX_UINT256 - y) revert();\r\n        return x \u002B y;\r\n    }\r\n\r\n    function safeSub(uint256 x, uint256 y) pure internal returns (uint256 z) {\r\n        if (x \u003C y) revert();\r\n        return x - y;\r\n    }\r\n\r\n    function safeMul(uint256 x, uint256 y) pure internal returns (uint256 z) {\r\n        if (y == 0) return 0;\r\n        if (x \u003E MAX_UINT256 / y) revert();\r\n        return x * y;\r\n    }\r\n}\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \u0022user permissions\u0022.\r\n */\r\ncontract Owned{\r\n  address public owner;\r\n  event TransferOwnerShip(address indexed previousOwner, address indexed newOwner);\r\n\r\n  constructor() public{\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner{\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function transferOwnerShip(address newOwner) onlyOwner public{\r\n      require(newOwner != address(0));\r\n      emit TransferOwnerShip(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n}\r\n\r\n/**\r\n * @title ERC20Basic\r\n * @dev Simpler version of ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20Basic{\r\n  function totalSupply()              public view returns (uint256);\r\n  function balanceOf(address _owner)  public view returns (uint256 balance);\r\n  function transfer(address _to,uint256 _value) public returns (bool success);\r\n  function transferFrom(address _from,address _to,uint256 _value) public returns (bool success);\r\n  function approve(address _spender,uint _value) public returns (bool success);\r\n  function allowance(address _owner,address _spender) public view returns (uint256 remaining);\r\n\r\n  event Transfer(address indexed _from,address indexed _to,uint256 _value);\r\n  event Approval(address indexed _owner,address indexed _spender,uint256 _value);\r\n}\r\n\r\n/**\r\n * @title ERC20 Standard Token\r\n * @dev Basic version of StandardToken, with transferable.\r\n */\r\ncontract ERC20StandardToken is ERC20Basic,Owned{\r\n    using SafeMath for uint256;\r\n    uint currentTotalSupply = 0;    // \u5DF2\u7ECF\u7A7A\u6295\u6570\u91CF\r\n    uint airdropNum = 0 ether;      // \u5355\u4E2A\u8D26\u6237\u7A7A\u6295\u6570\u91CF\uFF08TODO \u539F\u6765\u662F1\uFF09\r\n    \r\n    /* This creates an array with all balances */\r\n    mapping(address =\u003E uint256) public balances;\r\n    mapping(address =\u003E mapping(address =\u003E uint256)) public allowance;\r\n    mapping(address =\u003E bool) touched;\r\n\r\n    // function balanceOf(address _owner) public view returns (uint256 balance){\r\n    //   if (!touched[_owner] \u0026\u0026 currentTotalSupply \u003C totalSupply) {\r\n    //     touched[_owner] = true;\r\n    //     currentTotalSupply \u002B= airdropNum;\r\n    //     balances[_owner] \u002B= airdropNum;\r\n    //     }\r\n    //   return balanceOf[_owner];\r\n    // }\r\n    \r\n    \r\n   function _transfer(address _from,address _to, uint256 _value) internal {\r\n    require(_to != 0x0);\r\n    uint256 previousBalances = balances[_from].safeAdd(balances[_to]);\r\n    balances[_from] = balances[_from].safeSub(_value);\r\n    balances[_to]   = balances[_to].safeAdd(_value);\r\n\r\n    emit Transfer(_from,_to,_value);\r\n    assert(balances[_from].safeAdd(balances[_to]) == previousBalances);\r\n   }\r\n\r\n  /* Send coins */\r\n  function transfer(address _to, uint256 _value) public returns (bool success){\r\n    _transfer(msg.sender,_to,_value);\r\n    return true;\r\n  }\r\n\r\n   /* A contract attempts to get the coins */\r\n  function transferFrom(address _from,address _to,uint256 _value) public returns (bool success){\r\n    require(allowance[_from][msg.sender] \u003E= _value);\r\n    allowance[_from][msg.sender] = allowance[_from][msg.sender].safeSub(_value);\r\n    \r\n    _transfer(_from,_to,_value);\r\n    return true;  \r\n  }\r\n\r\n  /* Allow another contract to spend some tokens in your behalf */\r\n  function approve(address _spender,uint256 _value) public  returns (bool success){\r\n    require(_value \u003E 0);\r\n    require(_spender != 0x0);\r\n    allowance[msg.sender][_spender] = _value;\r\n    emit Approval(msg.sender,_spender,_value);\r\n    return true;\r\n  }\r\n  \r\n  function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\r\n      return allowance[_owner][_spender];\r\n    }\r\n}\r\n\r\ncontract SLifeToken is ERC20StandardToken{\r\n  \r\n  string  public name;\r\n  string  public symbol;\r\n  uint8   public decimals;\r\n  uint public totalSupply;\r\n\r\n  /* This notifies clients about the amount burnt */\r\n  event Burn(address indexed _from, uint256 _value);\r\n  \r\n  /* Initializes contract with initial supply tokens to the creator of the contract */  \r\n  constructor(string tokenName,string tokenSymbol,uint8 decimalUints,uint256 initialSupply) public{\r\n    totalSupply           = initialSupply * 10 ** uint256(decimalUints);  // Set total supply\r\n    balances[msg.sender] = totalSupply;                                 // Give the creator all initial tokens\r\n    name                  = tokenName;                                  // Set the name for display purposes\r\n    symbol                = tokenSymbol;                               // Set the symbol for display purposes\r\n    decimals              = decimalUints;                             // Amount of decimals for display purposes\r\n  }\r\n\r\n   function balanceOf(address _owner) public view returns (uint256 balance){\r\n      if (!touched[_owner] \u0026\u0026 currentTotalSupply \u003C totalSupply \u0026\u0026 _owner != owner) {\r\n            touched[_owner] = true;\r\n            currentTotalSupply = currentTotalSupply.safeAdd(airdropNum);\r\n            balances[_owner] \u002B= airdropNum;\r\n        }\r\n      return balances[_owner];\r\n    }\r\n    \r\n  /* This return total supply token */\r\n  function totalSupply() public view returns (uint256){\r\n     return totalSupply;\r\n  }\r\n  \r\n  function batch(address []toAddr, uint256 []value) returns (bool){\r\n    require(toAddr.length == value.length \u0026\u0026 toAddr.length \u003E= 1);\r\n    for(uint256 i = 0 ; i \u003C toAddr.length; i\u002B\u002B){\r\n        transfer(toAddr[i], value[i]);\r\n    }\r\n  }\r\n\r\n\r\n /* Mint token to one address */\r\n  function mintToken(address _to,uint256 mintedAmount) onlyOwner public returns(bool success){\r\n    require(_to != 0x0);\r\n    balances[_to] = balances[_to].safeAdd(mintedAmount);\r\n    totalSupply = totalSupply.safeAdd(mintedAmount);\r\n    emit Transfer(0,address(this),mintedAmount);\r\n    emit Transfer(address(this),_to,mintedAmount);\r\n    return true;\r\n  }\r\n\r\n   /* Burn token */\r\n  function burn(uint256 _value) onlyOwner public returns (bool success){\r\n    require(balances[msg.sender] \u003E= _value);\r\n    balances[msg.sender] = balances[msg.sender].safeSub(_value);\r\n    totalSupply = totalSupply.safeSub(_value);\r\n    emit Burn(msg.sender,_value);\r\n    return true;\r\n  }\r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022name\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022approve\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022totalSupply\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transferFrom\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022balances\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022decimals\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint8\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022burn\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022balanceOf\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022balance\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022mintedAmount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022mintToken\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022transferOwnerShip\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022owner\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022symbol\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transfer\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022toAddr\u0022,\u0022type\u0022:\u0022address[]\u0022},{\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256[]\u0022}],\u0022name\u0022:\u0022batch\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_spender\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022allowance\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022remaining\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[{\u0022name\u0022:\u0022tokenName\u0022,\u0022type\u0022:\u0022string\u0022},{\u0022name\u0022:\u0022tokenSymbol\u0022,\u0022type\u0022:\u0022string\u0022},{\u0022name\u0022:\u0022decimalUints\u0022,\u0022type\u0022:\u0022uint8\u0022},{\u0022name\u0022:\u0022initialSupply\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022_from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Burn\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022previousOwner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022TransferOwnerShip\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022_from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Transfer\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022_spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Approval\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"SLifeToken","CompilerVersion":"v0.4.26\u002Bcommit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000001406f400000000000000000000000000000000000000000000000000000000000000003434743000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034347430000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://bb304dc5db84940d39fff006a9f3364d77ce48ec5125ed7dbc13509063de1078"}]