[{"SourceCode":"pragma solidity \u003E0.4.99 \u003C0.6.0;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that revert on error\r\n */\r\nlibrary SafeMath {\r\n\r\n    /**\r\n    * @dev Multiplies two numbers, reverts on overflow.\r\n    */\r\n    function mul(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n        if (_a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = _a * _b;\r\n        require(c / _a == _b);\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Integer division of two numbers truncating the quotient, reverts on division by zero.\r\n    */\r\n    function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n        require(_b \u003E 0);\r\n        // Solidity only automatically asserts when dividing by 0\r\n        uint256 c = _a / _b;\r\n        // assert(_a == _b * c \u002B _a % _b); // There is no case in which this doesn\u0027t hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Subtracts two numbers, reverts on overflow (i.e. if subtrahend is greater than minuend).\r\n    */\r\n    function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n        require(_b \u003C= _a);\r\n        uint256 c = _a - _b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Adds two numbers, reverts on overflow.\r\n    */\r\n    function add(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n        uint256 c = _a \u002B _b;\r\n        require(c \u003E= _a);\r\n\r\n        return c;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \u0022user permissions\u0022.\r\n */\r\ncontract Ownable {\r\n    address payable private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev The Ownable constructor sets the original \u0060owner\u0060 of the contract to the sender\r\n     * account.\r\n     */\r\n    constructor(address payable newOwner) public {\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(address(0), _owner);\r\n    }\r\n\r\n    /**\r\n     * @return the address of the owner.\r\n     */\r\n    function owner() public view returns (address payable) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(isOwner(), \u0022Ownable: caller is not the owner\u0022);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @return true if \u0060msg.sender\u0060 is the owner of the contract.\r\n     */\r\n    function isOwner() public view returns (bool) {\r\n        return msg.sender == _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n     * @param newOwner The address to transfer ownership to.\r\n     */\r\n    function transferOwnership(address payable newOwner) public onlyOwner {\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers control of the contract to a newOwner.\r\n     * @param newOwner The address to transfer ownership to.\r\n     */\r\n    function _transferOwnership(address payable newOwner) internal {\r\n        require(newOwner != address(0), \u0022Ownable: new owner is the zero address\u0022);\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract IReferStorage {\r\n    function setReferrerPercent(address _contractAddress, uint _newPercent) public;\r\n\r\n    function setWhitelist(address _newUser, bool _status) public;\r\n\r\n    function withdrawFunds(uint _amount, address _beneficiary, address _contract) public;\r\n}\r\n\r\ncontract IFundsStorage {\r\n    function getPercentFund(address _contractAddress, uint _typeFund) public view returns(uint);\r\n\r\n    function setPercentFund(address _contractAddress, uint _typeFund, uint _newPercent) public;\r\n\r\n    function withdrawFunds(uint _typeFund, address _contract, uint _amount, address payable _beneficiary) public;\r\n\r\n    function setWhitelist(address _newUser, bool _status) public;\r\n}\r\n\r\ncontract ISundayLottery {\r\n    function buyTicket(\r\n        address _contract,\r\n        address payable _wallet,\r\n        uint _stake,\r\n        bytes memory _referrerLink,\r\n        bytes32 _hash\r\n    ) public payable;\r\n\r\n    function getTicketInfo(address _contract, uint round) public view returns (\r\n        address payable _wallet,\r\n        uint _investment,\r\n        uint _stakeAmount,\r\n        uint _stake,\r\n        uint _happyNumber\r\n    );\r\n\r\n    function currentRound() public view returns (uint);\r\n\r\n    function makeTwist(address _contract, uint _numberReveal, address _playerWallet) public;\r\n\r\n    function withdrawFunds(uint _amount, address payable _beneficiary) public;\r\n\r\n    function balanceAll() public view returns (uint);\r\n\r\n    function calcMaxStake() public view returns (uint _availableFunds);\r\n\r\n    function calcStake(uint _amount) public view returns (uint _availableFunds);\r\n\r\n    function setSystemOwnerPercent(uint _newValue) external;\r\n\r\n    function setBotComission(uint _newValue) external;\r\n\r\n    function updateAddress(address _newWallet, uint _number) external;\r\n\r\n    function payToMyGameContract(address payable _wallet) external;\r\n}\r\n\r\ncontract IHeadsOrTails {\r\n    function makeNewGame(\r\n        address payable _ownerWallet,\r\n        address payable _contractOwnerWallet,\r\n        uint _systemOwnerPercent,\r\n        uint _percentOwner,\r\n        address _myAccountToJpFund, address _myAccountToReferFund\r\n    ) public returns(address payable);\r\n}\r\n\r\ncontract Controller is Ownable {\r\n    using SafeMath for uint;\r\n\r\n    address public addressReferStorage;\r\n    address public addressFundStorage;\r\n    address public addressHeadsOrTails;\r\n\r\n    address[] private _arrayContractOwners;\r\n    //owner -\u003E list of contracts\r\n    mapping(address =\u003E address payable []) private _listOfContract;\r\n    //owner -\u003E list of contracts\r\n\r\n    mapping(address =\u003E address payable []) private _listOfJoinedMyGame;\r\n    //owner -\u003E list of contracts\r\n\r\n    mapping(address =\u003E address) private _ownerByContract;\r\n    //address of contract -\u003E owner\r\n\r\n    mapping(address =\u003E bool) public myGameWhitelist;\r\n\r\n    address public croupier;\r\n    uint public indexMyGame;\r\n\r\n    IReferStorage private referStorage;\r\n    IFundsStorage private fundsStorage;\r\n    IHeadsOrTails private headsOrTails;\r\n\r\n    event MakeNewGameContract(address indexed owner, address indexed addressContract);\r\n    event ChangeAddressWallet(address indexed owner, address indexed newAddress, address indexed oldAddress);\r\n    event WithdrawFund(string logMessage, uint amount, address indexed sender, address indexed addressContract, uint additional);\r\n\r\n    modifier onlyCroupier {\r\n        require(msg.sender == croupier || isOwner(), \u0022only croupier methods, called by non-croupier.\u0022);\r\n        _;\r\n    }\r\n\r\n    constructor(\r\n        address _croupier\r\n    ) public\r\n    Ownable(msg.sender)\r\n    {\r\n        croupier = _croupier;\r\n    }\r\n\r\n    function makeNewGame(\r\n        address payable _ownerWallet,\r\n        address payable _contractOwnerWallet,\r\n        uint _systemOwnerPercent,\r\n        uint _percentOwner,\r\n        uint _percentReferrer,\r\n        uint _percentFundDay, uint _percentFundWeek, uint _percentFundMonth, uint _percentFundYear,\r\n        address _myAccountToJpFund, address _myAccountToReferFund,\r\n        bool isMyGame\r\n    ) public {\r\n        require(_percentOwner \u003E= _percentReferrer);\r\n        require(_contractOwnerWallet != address(0));\r\n        address myGameAddress;\r\n        if (_percentOwner \u003E 100) {\r\n            _percentOwner = 100;\r\n        }\r\n        if (countContractByOwner(owner()) \u003E 0) {\r\n            myGameAddress = getAddressContract(owner(), indexMyGame);\r\n        }\r\n\r\n        if (isMyGame == true) {\r\n            require(myGameWhitelist[msg.sender]);\r\n            _myAccountToJpFund = myGameAddress;\r\n            _myAccountToReferFund = myGameAddress;\r\n            _ownerWallet = owner();\r\n        }\r\n\r\n        address payable newContractAddress = headsOrTails.makeNewGame(\r\n            _ownerWallet,\r\n            _contractOwnerWallet,\r\n                _systemOwnerPercent,\r\n            _percentOwner,\r\n            _myAccountToJpFund, _myAccountToReferFund\r\n        );\r\n\r\n        if (isMyGame == false) {\r\n            settingJpPercentNewGameContract(\r\n                newContractAddress, _myAccountToJpFund,\r\n                _percentFundDay, _percentFundWeek, _percentFundMonth, _percentFundYear\r\n            );\r\n            settingReferPercentNewGameContract(\r\n                newContractAddress, _myAccountToReferFund,\r\n                _percentReferrer\r\n            );\r\n\r\n            _checkNewOwner(_ownerWallet);\r\n            _listOfContract[msg.sender].push(newContractAddress);\r\n        } else {\r\n            _listOfContract[_ownerWallet].push(newContractAddress);\r\n            _listOfJoinedMyGame[msg.sender].push(newContractAddress);\r\n            _getSundayLottery(_ownerWallet, indexMyGame).payToMyGameContract(newContractAddress);\r\n        }\r\n\r\n        _ownerByContract[newContractAddress] = _ownerWallet;\r\n        fundsStorage.setWhitelist(newContractAddress, true);\r\n        referStorage.setWhitelist(newContractAddress, true);\r\n\r\n        emit MakeNewGameContract(msg.sender, newContractAddress);\r\n    }\r\n\r\n    function settingJpPercentNewGameContract(\r\n        address payable _newContractAddress,\r\n        address _myAccountToJpFund,\r\n        uint _percentFundDay, uint _percentFundWeek, uint _percentFundMonth, uint _percentFundYear\r\n    ) internal {\r\n        address accountToJpFund = _myAccountToJpFund;\r\n\r\n        if (_myAccountToJpFund == address(0)) {\r\n            accountToJpFund = _newContractAddress;\r\n        }\r\n\r\n        setJpFundPercent(accountToJpFund, 0, _percentFundDay);\r\n        setJpFundPercent(accountToJpFund, 1, _percentFundWeek);\r\n        setJpFundPercent(accountToJpFund, 2, _percentFundMonth);\r\n        setJpFundPercent(accountToJpFund, 3, _percentFundYear);\r\n    }\r\n\r\n    function settingReferPercentNewGameContract(\r\n        address payable _newContractAddress,\r\n        address _myAccountToReferFund,\r\n        uint _percentReferrer\r\n    ) internal {\r\n        address accountToReferFund = _myAccountToReferFund;\r\n        if (_myAccountToReferFund == address(0)) {\r\n            accountToReferFund = _newContractAddress;\r\n        }\r\n        referStorage.setReferrerPercent(accountToReferFund, _percentReferrer);\r\n    }\r\n\r\n    function setJpFundPercent(address _accountToJpFund, uint _fundType, uint _percent) internal {\r\n        if (_percent \u003E 0) {\r\n            fundsStorage.setPercentFund(_accountToJpFund, _fundType, _percent);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Aceess to game contract\r\n    */\r\n\r\n    function buyTicket(\r\n        address payable _owner,\r\n        uint _index,\r\n        address payable _wallet,\r\n        uint _stake,\r\n        bytes calldata _referrerLink,\r\n        bytes32 _hash\r\n    ) external payable {\r\n        address payable contractAddress = getAddressContract(_owner, _index);\r\n        _getSundayLottery(_owner, _index).buyTicket.value(msg.value)(contractAddress, _wallet, _stake, _referrerLink, _hash);\r\n    }\r\n\r\n    function getAddressContract(address _owner, uint _index) public view returns (address payable) {\r\n        return _listOfContract[_owner][_index];\r\n    }\r\n\r\n    function getJoinedMyGameContract(address _owner, uint _index) public view returns (address payable) {\r\n        return _listOfJoinedMyGame[_owner][_index];\r\n    }\r\n\r\n    function _getSundayLottery(address payable _owner, uint _index) internal view returns (ISundayLottery ) {\r\n        address payable addressContract = getAddressContract(_owner, _index);\r\n        return ISundayLottery(addressContract);\r\n    }\r\n\r\n    function getTicketInfo(address payable _contractOwner, uint _index, uint round) public view returns\r\n    (address payable _wallet, uint _investment, uint _stakeAmount, uint _stake, uint _happyNumber) {\r\n        address payable contractAddress = getAddressContract(_contractOwner, _index);\r\n        (_wallet, _investment, _stakeAmount, _stake, _happyNumber) = _getSundayLottery(_contractOwner, _index).getTicketInfo(contractAddress, round);\r\n    }\r\n\r\n    function getCurrentRound(address payable _contractOwner, uint _index) public view returns (uint) {\r\n        return _getSundayLottery(_contractOwner, _index).currentRound();\r\n    }\r\n\r\n    function getCalcStake(address payable _contractOwner, uint _index, uint _amount) public view returns (uint) {\r\n        return _getSundayLottery(_contractOwner, _index).calcStake(_amount);\r\n    }\r\n\r\n    function getCalcMaxStake(address payable _contractOwner, uint _index) public view returns (uint) {\r\n        return _getSundayLottery(_contractOwner, _index).calcMaxStake();\r\n    }\r\n\r\n    function settleBet(address payable _contractOwner, uint _index, uint _reveal, address _playerWallet) onlyCroupier public {\r\n        address payable contractAddress = getAddressContract(_contractOwner, _index);\r\n        _getSundayLottery(_contractOwner, _index).makeTwist(contractAddress, _reveal, _playerWallet);\r\n    }\r\n\r\n    function setSystemOwnerPercent(address payable _contractOwner, uint _index, uint _newValue) onlyOwner public {\r\n        _getSundayLottery(_contractOwner, _index).setSystemOwnerPercent(_newValue);\r\n    }\r\n\r\n    function setBotComission(address payable _contractOwner, uint _index, uint _newValue) onlyOwner public {\r\n        _getSundayLottery(_contractOwner, _index).setBotComission(_newValue);\r\n    }\r\n\r\n    function updateGameImportantAddress(address payable _contractOwner, uint _index, address _newWallet, uint _number) onlyOwner public {\r\n        _getSundayLottery(_contractOwner, _index).updateAddress(_newWallet, _number);\r\n    }\r\n\r\n    /**\r\n    * Access to funds contract\r\n    */\r\n    function withdrawReferFunds(uint _amount, address _contract) public {\r\n        require(_ownerByContract[_contract] == msg.sender);\r\n        referStorage.withdrawFunds(_amount, msg.sender, _contract);\r\n        emit WithdrawFund(\u0022Withdraw funds from refer contract\u0022, _amount, msg.sender, _contract, 0);\r\n    }\r\n\r\n    function withdrawJackpotFunds(uint _amount, address _contract, uint _typeFund) payable public {\r\n        require(_ownerByContract[_contract] == msg.sender);\r\n        fundsStorage.withdrawFunds(_typeFund, _contract, _amount, msg.sender);\r\n        emit WithdrawFund(\u0022Withdraw funds from jackpot contract\u0022, _amount, msg.sender, _contract, _typeFund);\r\n    }\r\n\r\n    // from game contract\r\n    function withdrawGameFunds(uint _indexContract, uint _amount) public {\r\n        address addressContract = _listOfContract[msg.sender][_indexContract];\r\n        require(countContractByOwner(msg.sender) \u003E 0 );\r\n        require(addressContract != address(0));\r\n        require(_amount \u003C= _getSundayLottery(msg.sender, _indexContract).balanceAll());\r\n        _getSundayLottery(msg.sender, _indexContract).withdrawFunds(_amount, msg.sender);\r\n        emit WithdrawFund(\u0022Withdraw funds from game contract\u0022, _amount, msg.sender, addressContract, _indexContract);\r\n    }\r\n\r\n    // to game contract\r\n    function depositToContract(address _owner, uint _index) public payable {\r\n        address payable addressContract = getAddressContract(_owner, _index);\r\n        if (countContractByOwner(_owner) \u003E 0 \u0026\u0026 addressContract != address(0)) {\r\n            addressContract.transfer(msg.value);\r\n        } else {\r\n            revert();\r\n        }\r\n    }\r\n\r\n    function withdrawParentContractFunds(uint _amount) external onlyOwner {\r\n        require(_amount \u003C= balanceAll(), \u0022Increase amount larger than balance.\u0022);\r\n        address payable owner = owner();\r\n        owner.transfer(_amount);\r\n    }\r\n\r\n    /**\r\n    * Aceess to Control functions\r\n    */\r\n    function setCroupierWallet(address _newWallet) external onlyOwner {\r\n        require(_newWallet != address(0));\r\n        address _oldWallet = croupier;\r\n        croupier = _newWallet;\r\n        emit ChangeAddressWallet(msg.sender, _newWallet, _oldWallet);\r\n    }\r\n\r\n    function setIndexMyGame(uint _newValue) onlyOwner public {\r\n        indexMyGame = _newValue;\r\n    }\r\n\r\n    function setStorageAddress(address _addressFundStorage, address _addressReferStorage, address _addressHeadsOrTails) external onlyOwner {\r\n        require(_addressReferStorage != address(0) \u0026\u0026 _addressFundStorage != address(0) \u0026\u0026 _addressHeadsOrTails != address(0));\r\n        addressFundStorage = _addressFundStorage;\r\n        addressReferStorage = _addressReferStorage;\r\n        addressHeadsOrTails = _addressHeadsOrTails;\r\n\r\n        fundsStorage = IFundsStorage(_addressFundStorage);\r\n        referStorage = IReferStorage(_addressReferStorage);\r\n        headsOrTails = IHeadsOrTails(addressHeadsOrTails);\r\n    }\r\n\r\n    function setMyGameWhitelist(address _newUser, bool _status) external onlyOwner {\r\n        myGameWhitelist[_newUser] = _status;\r\n    }\r\n\r\n    function finish() external onlyOwner {\r\n        address payable __owner = owner();\r\n        selfdestruct(__owner);\r\n    }\r\n\r\n    function balanceAll() public view returns (uint) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    function balanceByGameContract(address payable _owner, uint _index) public view returns (uint) {\r\n        return _getSundayLottery(_owner, _index).balanceAll();\r\n    }\r\n\r\n    function _checkNewOwner(address _owner) internal {\r\n        if (_isNewOwner(_owner)) {\r\n            _arrayContractOwners.push(_owner);\r\n        }\r\n    }\r\n\r\n    function _isNewOwner(address _owner) internal view returns (bool) {\r\n        return countContractByOwner(_owner) \u003E 0 ? false : true;\r\n    }\r\n\r\n    function countOwnersContract() external view returns (uint) {\r\n        return _arrayContractOwners.length;\r\n    }\r\n\r\n    function getOwnerContract(uint _index) external view returns (address) {\r\n        return _arrayContractOwners[_index];\r\n    }\r\n\r\n    function countContractByOwner(address _owner) public view returns (uint) {\r\n        return _listOfContract[_owner].length;\r\n    }\r\n\r\n    function countJoinedMyGameContractByOwner(address _owner) public view returns (uint) {\r\n        return _listOfJoinedMyGame[_owner].length;\r\n    }\r\n}","ABI":"[{\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_croupier\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022newAddress\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022oldAddress\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022ChangeAddressWallet\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022addressContract\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022MakeNewGameContract\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022previousOwner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022OwnershipTransferred\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022string\u0022,\u0022name\u0022:\u0022logMessage\u0022,\u0022type\u0022:\u0022string\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022sender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022addressContract\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022additional\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022WithdrawFund\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022addressFundStorage\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022addressHeadsOrTails\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022addressReferStorage\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022balanceAll\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_index\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022balanceByGameContract\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_index\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022_wallet\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_stake\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022bytes\u0022,\u0022name\u0022:\u0022_referrerLink\u0022,\u0022type\u0022:\u0022bytes\u0022},{\u0022internalType\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022_hash\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022buyTicket\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022countContractByOwner\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022countJoinedMyGameContractByOwner\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022countOwnersContract\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022croupier\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_index\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022depositToContract\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022finish\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_index\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022getAddressContract\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022_contractOwner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_index\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022getCalcMaxStake\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022_contractOwner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_index\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022getCalcStake\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022_contractOwner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_index\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022getCurrentRound\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_index\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022getJoinedMyGameContract\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_index\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022getOwnerContract\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022_contractOwner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_index\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022round\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022getTicketInfo\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022_wallet\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_investment\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_stakeAmount\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_stake\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_happyNumber\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022indexMyGame\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022isOwner\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022_ownerWallet\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022_contractOwnerWallet\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_systemOwnerPercent\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_percentOwner\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_percentReferrer\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_percentFundDay\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_percentFundWeek\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_percentFundMonth\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_percentFundYear\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_myAccountToJpFund\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_myAccountToReferFund\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022isMyGame\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022name\u0022:\u0022makeNewGame\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022myGameWhitelist\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022owner\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022_contractOwner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_index\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_newValue\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022setBotComission\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_newWallet\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022setCroupierWallet\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_newValue\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022setIndexMyGame\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_newUser\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022_status\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022name\u0022:\u0022setMyGameWhitelist\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_addressFundStorage\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_addressReferStorage\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_addressHeadsOrTails\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022setStorageAddress\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022_contractOwner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_index\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_newValue\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022setSystemOwnerPercent\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022_contractOwner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_index\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_reveal\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_playerWallet\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022settleBet\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022transferOwnership\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022_contractOwner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_index\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_newWallet\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_number\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022updateGameImportantAddress\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_indexContract\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022withdrawGameFunds\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_amount\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_contract\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_typeFund\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022withdrawJackpotFunds\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022withdrawParentContractFunds\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_amount\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_contract\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022withdrawReferFunds\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022}]","ContractName":"Controller","CompilerVersion":"v0.5.16\u002Bcommit.9c3226ce","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000005d6caea68ccc6aeff1963ab40d45211c69ef9295","Library":"","SwarmSource":"bzzr://8879439315f434358e930d481f4c557531bdc14186c411343928c9d9dfd3d635"}]