[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2020-01-20\r\n*/\r\n\r\n/*! (c) 2019 Develop by BelovITLab LLC (smartcontract.ru), author @stupidlovejoy | License: MIT */\r\n\r\npragma solidity 0.5.13;\r\n\r\ncontract Fund {\r\n    mapping(address =\u003E uint16) public percentages;\r\n    mapping(address =\u003E uint256) public withdraws;\r\n\r\n    uint256 replenishment;\r\n    \r\n    constructor() public {\r\n        percentages[0x04aC6675b082c250Ef5FA84a2d43c286014D52F0] = 1875;  // 18.75%\r\n        percentages[0x72dFfD11C75Dc8333C6c376a79a9FBdb3a5acdEA] = 1875;  // 18.75%\r\n        percentages[0x5403371AE7FdB5c0841523dB678496226E140258] = 1875;  // 18.75%\r\n        percentages[0xc30cE68A3F69A05C35FDff1500E7ba77463aa6B1] = 1875;  // 18.75%\r\n\r\n        percentages[0xc6B151C262AC32F02442d2C0C29DFD9B37F08C1d] = 1000;  // \u041A\u043E\u0448\u0435\u043B\u0435\u043A B 10%\r\n        percentages[0xA0D5b453f0A516a9E4D7C00EEa4577EA0b732740] = 500;   // \u041A\u043E\u0448\u0435\u043B\u0435\u043A \u041A 5%\r\n\r\n        percentages[0xFF1E38B7bDD3885798DBAd3E15752E21c8695545] = 100;   // 1% \r\n        percentages[0x1E9f078F8aDE8685992CcF2DB162918A0e5e1975] = 100;   // 1% \r\n        percentages[0x0d8778Cc0f5111E9Ae2F84ac6C68302D6b544ceb] = 100;   // 1% \r\n        percentages[0xd8e1DD6740D73fBa697A93194Dc6e8a53C60B071] = 100;   // 1% \r\n        percentages[0xb9113583f31184702D875fFce33ED5921F537BB2] = 100;   // 1% \r\n        percentages[0x30533D1e03E6DbadA6132Fb6469Af648dAE03138] = 100;   // 1% \r\n        percentages[0x089271D4d343fa7E220913099d958Fc02ed86f7E] = 100;   // 1% \r\n        percentages[0xC6f27025885914E679b4701DC08d41f1437f9ffF] = 100;   // 1% \r\n        percentages[0xc918bCE7B07Dda4c8161aF70823065A081f3213B] = 100;   // 1% \r\n        percentages[0x7f95a95d53475679f0108aa8a969Adc580DA7FE8] = 100;   // 1% \r\n        \r\n    }\r\n\r\n    function() external payable {\r\n        replenishment \u002B= msg.value;\r\n    }\r\n\r\n    function withdraw() external {\r\n        require(percentages[msg.sender] \u003E 0, \u0022You are not a member\u0022);\r\n\r\n        uint256 value = replenishment * percentages[msg.sender] / 10000;\r\n\r\n        require(value \u003E 0 \u0026\u0026 value \u003E withdraws[msg.sender], \u0022No funds to withdraw\u0022);\r\n\r\n        value -= withdraws[msg.sender];\r\n\r\n        withdraws[msg.sender] \u002B= value;\r\n\r\n        address(msg.sender).transfer(value);\r\n    }\r\n\r\n\r\n    function balanceOf(address addr) public view returns(uint) {\r\n        uint256 value = percentages[addr] \u003E 0 ? replenishment * percentages[addr] / 10000 : 0;\r\n\r\n        return value \u003E withdraws[addr] ? value - withdraws[addr] : 0;\r\n    }\r\n\r\n    function changeWallet(address wallet) external {\r\n        require(percentages[msg.sender] \u003E 0, \u0022You are not a member\u0022);\r\n        require(wallet != address(0), \u0022Zero address\u0022);\r\n\r\n        percentages[wallet] = percentages[msg.sender];\r\n        withdraws[wallet] = withdraws[msg.sender];\r\n        percentages[msg.sender] = 0;\r\n        withdraws[msg.sender] = 0;\r\n    }\r\n}\r\n\r\ncontract BlagaDaru {\r\n    struct Level {\r\n        uint96 min_price;\r\n        uint96 max_price;\r\n    }\r\n\r\n    struct User {\r\n        address payable upline;\r\n        address payable[] referrals;\r\n        uint8 level;\r\n        uint64 expires;\r\n        uint256 fwithdraw;\r\n    }\r\n    \r\n    uint32 LEVEL_LIFE_TIME = 180 days;\r\n\r\n    address payable public root_user;\r\n    address payable public blago;\r\n    address payable public walletK;\r\n    address payable public owner;\r\n\r\n    Level[] public levels;\r\n    uint8[] public payouts;\r\n    mapping(address =\u003E User) public users;\r\n    address[] public vips;\r\n\r\n    event Registration(address indexed user, address indexed upline, uint64 time);\r\n    event LevelPurchase(address indexed user, uint8 indexed level, uint64 time, uint64 expires, uint256 amount);\r\n    event ReceivingProfit(address indexed user, address indexed referral, uint8 indexed level, uint64 time, uint256 amount);\r\n    event LostProfit(address indexed user, address indexed referral, uint8 indexed level, uint64 time, uint256 amount);\r\n    event Blago(address indexed from, uint64 time, uint256 amount);\r\n    event Withdraw(address indexed user, uint64 time, uint256 amount);\r\n\r\n    modifier onlyOwner() {\r\n        require(owner == msg.sender, \u0022Ownable: caller is not owner\u0022);\r\n        _;\r\n    }\r\n\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n        root_user = address(new Fund());\r\n        blago = address(0xc6B151C262AC32F02442d2C0C29DFD9B37F08C1d);        // \u041A\u043E\u0448\u0435\u043B\u0435\u043A B 10%\r\n        walletK = address(0xA0D5b453f0A516a9E4D7C00EEa4577EA0b732740);      // \u041A\u043E\u0448\u0435\u043B\u0435\u043A \u041A 5%\r\n\r\n        levels.push(Level({min_price: 0.299 ether, max_price: 1 ether}));\r\n        levels.push(Level({min_price: 1 ether, max_price: 5 ether}));\r\n        levels.push(Level({min_price: 5 ether, max_price: 10 ether}));\r\n        levels.push(Level({min_price: 10 ether, max_price: 15 ether}));\r\n        levels.push(Level({min_price: 15 ether, max_price: 25 ether}));\r\n        levels.push(Level({min_price: 25 ether, max_price: 1000 ether}));\r\n\r\n        payouts.push(30);\r\n        payouts.push(25);\r\n        payouts.push(12);\r\n        payouts.push(5);\r\n        payouts.push(5);\r\n        payouts.push(3);\r\n        payouts.push(2);\r\n        payouts.push(1);\r\n        payouts.push(1);\r\n        payouts.push(1);\r\n        \r\n        users[root_user].level = uint8(levels.length - 1);\r\n        users[root_user].expires = 183267472027;\r\n\r\n        emit Registration(root_user, address(0), uint64(block.timestamp));\r\n        emit LevelPurchase(root_user, users[root_user].level, uint64(block.timestamp), users[root_user].expires, 0);\r\n\r\n        address[] memory list = new address[](46);\r\n        list[0] = 0x79C41dCdc3e331aDa7578f11259d44c2BBbfB610;\r\n        list[1] = 0xe38E9a106311Ff2b14caeF0f6922b35F613f387C;\r\n        list[2] = 0x3c1e315b08Fc68E04f35A48f19b7E623C8c8C76b;\r\n        list[3] = 0x6501d5CD4b5aB4617C095a6cE52d2Bb94A8C4159;\r\n        list[4] = 0x257B71Cef90988522999FA456699d6c1947878cD;\r\n        list[5] = 0xfFbeccDEF0475277530Afb5DE95D91cF09dC99Bc;\r\n        list[6] = 0x2F08375C112Aa0FEBb062BdF2C1DF9fE79E4f7BD;\r\n        list[7] = 0x7bFd19EE813A88A901a0eb7A7b2b3456333Cb93D;\r\n        list[8] = 0xc3EEaEBC59CB53764ad97f80AcF4B6218A603e2b;\r\n        list[9] = 0xcd3DDD9467274Ce6254A073C1FDE212179f7fA22;\r\n\r\n        list[10] = 0x7f4E0498dAca7fc3746716b73b620a6E988C4bd7;\r\n        list[11] = 0x3159d6E10450b1e9c4830884629044B0a7c36bcC;\r\n        list[12] = 0xcD2AcFD2F7527F0a1821d95f3901d1D7FF69e9Dd;\r\n        list[13] = 0xc1e11B2F936d7545185d667D00F449932e0c225A;\r\n        list[14] = 0xB2685358Cc4205ABa1cAe31433B7B8d82F12a89f;\r\n        list[15] = 0x50c2B10D472D6BBdc46cC0Eb149605Efa16A0923;\r\n        list[16] = 0x21056b759fd4147B2e6E703412155c29fcec0809;\r\n        list[17] = 0x1Bb4350AC91954aEcD5698682b1394f62b8603D0;\r\n        list[18] = 0x2e4096D4f47Ce822B0575EbfF8B1BbB48BB5f999;\r\n        list[19] = 0x8Bc8D5fBC067A26aABCD5f4Be671b1a356ef3202;\r\n        list[20] = 0x04a5d1C01c26Db7028A8e92e54Dfe8B02dC33071;\r\n        list[21] = 0x7712dd1D61C43228637bcffdf20C875C5919b167;\r\n        list[22] = 0xf41976F912378D734c09B01d30b0079F3f47134e;\r\n        list[23] = 0x9E20AE55aA3A72C61F5Fe059Bbc3A80B92dCF24a;\r\n        list[24] = 0xA3dea96bEe5269e6C2148c5116a5e2489c880D55;\r\n        list[25] = 0x96a482Dd459B8D636Fa7251E9E0e927f4B97fe8b;\r\n        list[26] = 0x5Ef83BCcFaC6E4f616B5739d7C3C59C3D7589739;\r\n        list[27] = 0xD07f24FF6b342E2576e471581B8E4E617d4E704d;\r\n        list[28] = 0x3f08CB7fE8AE3C698D43A173B41c886Ef9541930;\r\n        list[29] = 0x3cA521797810d8Ff49bA917B4AbEb9398C2be714;\r\n\r\n        list[30] = 0x04aC6675b082c250Ef5FA84a2d43c286014D52F0;   // 18.75%\r\n        list[31] = 0x72dFfD11C75Dc8333C6c376a79a9FBdb3a5acdEA;   // 18.75%\r\n        list[32] = 0x5403371AE7FdB5c0841523dB678496226E140258;   // 18.75%\r\n        list[33] = 0xc30cE68A3F69A05C35FDff1500E7ba77463aa6B1;   // 18.75%\r\n\r\n        list[34] = 0xFF1E38B7bDD3885798DBAd3E15752E21c8695545;   // 1% \r\n        list[35] = 0x1E9f078F8aDE8685992CcF2DB162918A0e5e1975;   // 1% \r\n        list[36] = 0x0d8778Cc0f5111E9Ae2F84ac6C68302D6b544ceb;   // 1% \r\n        list[37] = 0xd8e1DD6740D73fBa697A93194Dc6e8a53C60B071;   // 1% \r\n        list[38] = 0xb9113583f31184702D875fFce33ED5921F537BB2;   // 1% \r\n        list[39] = 0x30533D1e03E6DbadA6132Fb6469Af648dAE03138;   // 1% \r\n        list[40] = 0x089271D4d343fa7E220913099d958Fc02ed86f7E;   // 1% \r\n        list[41] = 0xC6f27025885914E679b4701DC08d41f1437f9ffF;   // 1% \r\n        list[42] = 0xc918bCE7B07Dda4c8161aF70823065A081f3213B;   // 1% \r\n        list[43] = 0x7f95a95d53475679f0108aa8a969Adc580DA7FE8;   // 1% \r\n\r\n        list[44] = 0xc6B151C262AC32F02442d2C0C29DFD9B37F08C1d;   // \u041A\u043E\u0448\u0435\u043B\u0435\u043A B 10%\r\n        list[45] = 0xA0D5b453f0A516a9E4D7C00EEa4577EA0b732740;   // \u041A\u043E\u0448\u0435\u043B\u0435\u043A \u041A 5%\r\n\r\n        for(uint8 i = 0; i \u003C list.length; i\u002B\u002B) {\r\n            users[list[i]].level = i \u003E 43 ? 0 : uint8(levels.length - 1);\r\n            users[list[i]].upline = root_user;\r\n            users[list[i]].expires = 183267472027;\r\n\r\n            if(i \u003C 44)vips.push(list[i]);\r\n\r\n            emit Registration(list[i], users[list[i]].upline, uint64(block.timestamp));\r\n            emit LevelPurchase(list[i], users[list[i]].level, uint64(block.timestamp), users[list[i]].expires, 0);\r\n        }\r\n\r\n    }\r\n\r\n    function payout(address payable user, uint256 value, uint8 level) private {\r\n        address payable member = users[user].upline;\r\n        uint256 balance = value;\r\n        uint256 bvalue = 0;\r\n\r\n        blago.transfer(value * 10 / 100);\r\n        walletK.transfer(value * 4 / 100);\r\n\r\n        balance -= balance * 14 / 100;\r\n\r\n        for(uint8 i = 0; i \u003C payouts.length; i\u002B\u002B) {\r\n            if(member == address(0) || member == root_user) break;\r\n            \r\n            uint256 amount = value * payouts[i] / 100;\r\n\r\n            if(i \u003E 5 \u0026\u0026 users[member].level \u003C i - 5) {\r\n                amount /= 2;\r\n                bvalue \u002B= amount;\r\n            }\r\n\r\n            if(users[member].expires \u003E= block.timestamp \u0026\u0026 users[member].level \u003E= level) {\r\n                if(member.send(amount)) {\r\n                    balance -= amount;\r\n\r\n                    emit ReceivingProfit(member, user, level, uint64(block.timestamp), amount);\r\n                }\r\n            }\r\n            else {\r\n                bvalue \u002B= amount;\r\n\r\n                emit LostProfit(member, user, level, uint64(block.timestamp), amount);\r\n            }\r\n\r\n            member = users[member].upline;\r\n        }\r\n\r\n        if(bvalue \u003E 0) {\r\n            blago.transfer(bvalue);\r\n            balance -= bvalue;\r\n\r\n            emit Blago(user, uint64(block.timestamp), bvalue);\r\n        }\r\n\r\n        if(vips.length \u003E 0) {\r\n            uint256 vpay = value / 100;\r\n            uint256 vpay_pm = vpay / vips.length;\r\n            balance -= vpay;\r\n\r\n            for(uint256 i = 0; i \u003C vips.length; i\u002B\u002B) {\r\n                users[vips[i]].fwithdraw \u002B= vpay_pm;\r\n            }\r\n        }\r\n\r\n        (bool success,) = address(root_user).call.value(balance).gas(180000)(\u0022\u0022);\r\n        require(success, \u0022Error send root money\u0022);\r\n\r\n        emit ReceivingProfit(root_user, user, level, uint64(block.timestamp), balance);\r\n    }\r\n\r\n    function setLevel(uint8 index, uint96 min_price, uint96 max_price) external onlyOwner {\r\n        levels[index] = Level({min_price: min_price, max_price: max_price});\r\n    }\r\n\r\n    function() external payable {\r\n        User storage user = users[msg.sender];\r\n        \r\n        if(user.upline == address(0)) {\r\n            user.upline = bytesToAddress(msg.data);\r\n\r\n            if(users[user.upline].upline == address(0)) {\r\n                user.upline = root_user;\r\n            }\r\n\r\n            users[user.upline].referrals.push(msg.sender);\r\n\r\n            emit Registration(msg.sender, user.upline, uint64(block.timestamp));\r\n        }\r\n\r\n        uint8 level = this.getLevelByPrice(msg.value);\r\n\r\n        require(user.expires == 0 || (user.expires \u003E= block.timestamp \u0026\u0026 level \u003E user.level) || (user.expires \u003C block.timestamp \u0026\u0026 level \u003E= user.level), \u0022Invalid level\u0022);\r\n        \r\n        if(user.level \u003C 5 \u0026\u0026 level == 5) {\r\n            vips.push(msg.sender);\r\n        }\r\n\r\n        user.level = level;\r\n\r\n        user.expires = uint64(block.timestamp \u002B LEVEL_LIFE_TIME);\r\n\r\n        emit LevelPurchase(msg.sender, level, uint64(block.timestamp), user.expires, msg.value);\r\n\r\n        payout(msg.sender, msg.value, level);\r\n    }\r\n\r\n\r\n    function withdraw() external {\r\n        require(users[msg.sender].fwithdraw \u003E 0, \u0022Your balance is empty\u0022);\r\n        require(users[msg.sender].expires \u003E block.timestamp, \u0022Pay level\u0022);\r\n\r\n        address(msg.sender).transfer(users[msg.sender].fwithdraw);\r\n\r\n        emit Withdraw(msg.sender, uint64(block.timestamp), users[msg.sender].fwithdraw);\r\n\r\n        users[msg.sender].fwithdraw = 0;\r\n    }\r\n\r\n    function getLevelByPrice(uint value) external view returns(uint8) {\r\n        require(value \u003E= levels[0].min_price \u0026\u0026 value \u003C= levels[levels.length - 1].max_price, \u0022Amount not in the range\u0022);\r\n\r\n        for(uint8 i = 0; i \u003C levels.length; i\u002B\u002B) {\r\n            if(value \u003E levels[i].min_price \u0026\u0026 value \u003C= levels[i].max_price) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getUserReferrals(address user) external view returns(address payable[] memory) {\r\n        return users[user].referrals;\r\n    }\r\n\r\n    function bytesToAddress(bytes memory data) private pure returns(address payable addr) {\r\n        assembly {\r\n            addr := mload(add(data, 20))\r\n        }\r\n    }\r\n}","ABI":"[{\u0022inputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint64\u0022,\u0022name\u0022:\u0022time\u0022,\u0022type\u0022:\u0022uint64\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Blago\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022uint8\u0022,\u0022name\u0022:\u0022level\u0022,\u0022type\u0022:\u0022uint8\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint64\u0022,\u0022name\u0022:\u0022time\u0022,\u0022type\u0022:\u0022uint64\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint64\u0022,\u0022name\u0022:\u0022expires\u0022,\u0022type\u0022:\u0022uint64\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022LevelPurchase\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022referral\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022uint8\u0022,\u0022name\u0022:\u0022level\u0022,\u0022type\u0022:\u0022uint8\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint64\u0022,\u0022name\u0022:\u0022time\u0022,\u0022type\u0022:\u0022uint64\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022LostProfit\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022referral\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022uint8\u0022,\u0022name\u0022:\u0022level\u0022,\u0022type\u0022:\u0022uint8\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint64\u0022,\u0022name\u0022:\u0022time\u0022,\u0022type\u0022:\u0022uint64\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022ReceivingProfit\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022upline\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint64\u0022,\u0022name\u0022:\u0022time\u0022,\u0022type\u0022:\u0022uint64\u0022}],\u0022name\u0022:\u0022Registration\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint64\u0022,\u0022name\u0022:\u0022time\u0022,\u0022type\u0022:\u0022uint64\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Withdraw\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022fallback\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022blago\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022getLevelByPrice\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint8\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint8\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022getUserReferrals\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address payable[]\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address[]\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022levels\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint96\u0022,\u0022name\u0022:\u0022min_price\u0022,\u0022type\u0022:\u0022uint96\u0022},{\u0022internalType\u0022:\u0022uint96\u0022,\u0022name\u0022:\u0022max_price\u0022,\u0022type\u0022:\u0022uint96\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022owner\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022payouts\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint8\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint8\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022root_user\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint8\u0022,\u0022name\u0022:\u0022index\u0022,\u0022type\u0022:\u0022uint8\u0022},{\u0022internalType\u0022:\u0022uint96\u0022,\u0022name\u0022:\u0022min_price\u0022,\u0022type\u0022:\u0022uint96\u0022},{\u0022internalType\u0022:\u0022uint96\u0022,\u0022name\u0022:\u0022max_price\u0022,\u0022type\u0022:\u0022uint96\u0022}],\u0022name\u0022:\u0022setLevel\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022users\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022upline\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint8\u0022,\u0022name\u0022:\u0022level\u0022,\u0022type\u0022:\u0022uint8\u0022},{\u0022internalType\u0022:\u0022uint64\u0022,\u0022name\u0022:\u0022expires\u0022,\u0022type\u0022:\u0022uint64\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022fwithdraw\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022vips\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022walletK\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022withdraw\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022}]","ContractName":"BlagaDaru","CompilerVersion":"v0.5.13\u002Bcommit.5b0b510c","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://dd3100f142b1c669d4322d6575638bb57e311413e27a89174824a0c10b733847"}]