[{"SourceCode":"pragma solidity ^0.4.20;\r\n\r\n/// @title kryptono exchange AirDropContract for KNOW token\r\n/// @author Trong Cau Ta \u003Ctrongcauhcmus@gmail.com\u003E\r\n/// For more information, please visit kryptono.exchange\r\n\r\n/// @title ERC20\r\ncontract ERC20 {\r\n    uint public totalSupply;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    function balanceOf(address who) view public returns (uint256);\r\n    function allowance(address owner, address spender) view public returns (uint256);\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n    function approve(address spender, uint256 value) public returns (bool);\r\n}\r\n\r\ncontract AirDropContract {\r\n\r\n    event AirDropped(address addr, uint amount);\r\n    address public owner = 0xD4A99236190d6A78E32b675fBd771Dc5d2bA2Cac;\r\n\r\n    function drop(\r\n        address tokenAddress,\r\n        address[] recipients,\r\n        uint256[] amounts) public {\r\n        require(msg.sender == owner);\r\n        require(tokenAddress != 0x0);\r\n        require(amounts.length == recipients.length);\r\n\r\n        ERC20 token = ERC20(tokenAddress);\r\n\r\n        uint balance = token.balanceOf(msg.sender);\r\n        uint allowance = token.allowance(msg.sender, address(this));\r\n        uint available = balance \u003E allowance ? allowance : balance;\r\n\r\n        for (uint i = 0; i \u003C recipients.length; i\u002B\u002B) {\r\n            require(available \u003E= amounts[i]);\r\n            if (isQualitifiedAddress(\r\n                recipients[i]\r\n            )) {\r\n                available -= amounts[i];\r\n                require(token.transferFrom(msg.sender, recipients[i], amounts[i]));\r\n\r\n                AirDropped(recipients[i], amounts[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    function isQualitifiedAddress(address addr)\r\n        public\r\n        view\r\n        returns (bool result)\r\n    {\r\n        result = addr != 0x0 \u0026\u0026 addr != msg.sender \u0026\u0026 !isContract(addr);\r\n    }\r\n\r\n    function isContract(address addr) internal view returns (bool) {\r\n        uint size;\r\n        assembly { size := extcodesize(addr) }\r\n        return size \u003E 0;\r\n    }\r\n\r\n    function () payable public {\r\n        revert();\r\n    }\r\n    \r\n    // withdraw any ERC20 token in this contract to owner\r\n    function transferAnyERC20Token(address tokenAddress, uint tokens) public returns (bool success) {\r\n        return ERC20(tokenAddress).transfer(owner, tokens);\r\n    }\r\n}","ABI":"[{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022tokenAddress\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022recipients\u0022,\u0022type\u0022:\u0022address[]\u0022},{\u0022name\u0022:\u0022amounts\u0022,\u0022type\u0022:\u0022uint256[]\u0022}],\u0022name\u0022:\u0022drop\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022owner\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022addr\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022isQualitifiedAddress\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022result\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022tokenAddress\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022tokens\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transferAnyERC20Token\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022fallback\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022addr\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022AirDropped\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"AirDropContract","CompilerVersion":"v0.4.20\u002Bcommit.3155dd80","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://bb7e30cbfde039901e1d7729a387567e362401f629ab9921d198fdeeb86fb182"}]