[{"SourceCode":"pragma solidity ^0.4.24;\r\n\r\ncontract UtilFairWin  {\r\n    uint ethWei = 1 ether;\r\n    //getlevel\r\n    function getlevel(uint value) public view returns(uint){\r\n        if(value\u003E=1*ethWei \u0026\u0026 value\u003C=5*ethWei){\r\n            return 1;\r\n        }if(value\u003E=6*ethWei \u0026\u0026 value\u003C=10*ethWei){\r\n            return 2;\r\n        }if(value\u003E=11*ethWei \u0026\u0026 value\u003C=15*ethWei){\r\n            return 3;\r\n        }\r\n            return 0;\r\n    }\r\n    //getLinelevel\r\n    function getLineLevel(uint value) public view returns(uint){\r\n        if(value\u003E=1*ethWei \u0026\u0026 value\u003C=5*ethWei){\r\n            return 1;\r\n        }if(value\u003E=6*ethWei \u0026\u0026 value\u003C=10*ethWei){\r\n            return 2;\r\n        }if(value\u003E=11*ethWei){\r\n            return 3;\r\n        }\r\n    }\r\n    \r\n    //level-commend  /1000\r\n    function getScBylevel(uint level) public view returns(uint){\r\n        if(level == 1){ \r\n            return 5;\r\n        }if(level == 2){\r\n            return 7;\r\n        }if(level == 3) {\r\n            return 10;\r\n        }\r\n        return 0;\r\n    }\r\n    \r\n    //level fire scale   /10\r\n    function getFireScBylevel(uint level) public view returns(uint){\r\n        if(level == 1){\r\n            return 3;\r\n        }if(level == 2){\r\n            return 6;\r\n        }if(level == 3) {\r\n            return 10;\r\n        }return 0;\r\n    }\r\n    \r\n    //level and times =\u003E invite scale /100\r\n    function getRecommendScaleBylevelandTim(uint level,uint times) public view returns(uint){\r\n        if(level == 1 \u0026\u0026 times == 1){ \r\n            return 50;\r\n        }if(level == 2 \u0026\u0026 times == 1){\r\n            return 70;\r\n        }if(level == 2 \u0026\u0026 times == 2){\r\n            return 50;\r\n        }if(level == 3) {\r\n            if(times == 1){\r\n                return 100;\r\n            }if(times == 2){\r\n                return 70;\r\n            }if(times == 3){\r\n                return 50;\r\n            }if(times \u003E= 4 \u0026\u0026 times \u003C= 10){\r\n                return 10;\r\n            }if(times \u003E= 11 \u0026\u0026 times \u003C= 20){\r\n                return 5;\r\n            }if(times \u003E= 21){\r\n                return 1;\r\n            }\r\n        } return 0;\r\n    }\r\n    \r\n    function compareStr (string _str,string str) public view returns(bool) {\r\n         bool checkResult = false;\r\n        if(keccak256(abi.encodePacked(_str)) == keccak256(abi.encodePacked(str))) {\r\n            checkResult = true;\r\n        }\r\n        return checkResult;\r\n    }\r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022getlevel\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022getLineLevel\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022level\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022getFireScBylevel\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022level\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022times\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022getRecommendScaleBylevelandTim\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022level\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022getScBylevel\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_str\u0022,\u0022type\u0022:\u0022string\u0022},{\u0022name\u0022:\u0022str\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022name\u0022:\u0022compareStr\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022}]","ContractName":"UtilFairWin","CompilerVersion":"v0.4.24\u002Bcommit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://788add20d4ca1336d8bd62d64e0a59856948db65d7b6c97e24169e31b489ecb4"}]