[{"SourceCode":"pragma solidity ^0.4.21;\r\n\r\ncontract ERC223ReceivingContract {\r\n   function tokenFallback(address _from, uint _value, bytes _data) public;\r\n}\r\n\r\ninterface ERC20 {\r\n   function balanceOf(address who) public view returns (uint256);\r\n   function transfer(address to, uint256 value) public returns (bool);\r\n   function allowance(address owner, address spender) public view returns (uint256);\r\n   function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n   function approve(address spender, uint256 value) public returns (bool);\r\n   event Transfer(address indexed from, address indexed to, uint256 value);\r\n   event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ninterface ERC223 {\r\n   function transfer(address to, uint value, bytes data) public;\r\n   event Transfer(address indexed from, address indexed to, uint value, bytes indexed data);\r\n}\r\n\r\n\r\n\r\nlibrary SafeMath {\r\n   function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n       if (a == 0) {\r\n           return 0;\r\n       }\r\n       uint256 c = a * b;\r\n       assert(c / a == b);\r\n       return c;\r\n   }\r\n\r\n   function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n       // assert(b \u003E 0); // Solidity automatically throws when dividing by 0\r\n       uint256 c = a / b;\r\n       // assert(a == b * c \u002B a % b); // There is no case in which this doesn\u0027t hold\r\n       return c;\r\n   }\r\n\r\n   function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n       assert(b \u003C= a);\r\n       return a - b;\r\n   }\r\n\r\n   function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n       uint256 c = a \u002B b;\r\n       assert(c \u003E= a);\r\n       return c;\r\n   }\r\n}\r\n\r\ncontract StandardToken is ERC20, ERC223 {\r\n   using SafeMath for uint;\r\n\r\n   string internal _name;\r\n   string internal _symbol;\r\n   uint8 internal _decimals;\r\n   uint256 internal _totalSupply;\r\n\r\n   mapping (address =\u003E uint256) internal balances;\r\n   mapping (address =\u003E mapping (address =\u003E uint256)) internal allowed;\r\n\r\n   function StandardToken() public {\r\n       _name = \u0022Onbuff IP Token\u0022;                                   // Set the name for display purposes\r\n       _decimals = 18;                            // Amount of decimals for display purposes\r\n       _symbol = \u0022ONIT\u0022;                               // Set the symbol for display purposes\r\n       _totalSupply = 1000000000000000000000000000;                        // Update total supply (100000 for example)\r\n       balances[msg.sender] = 1000000000000000000000000000;               // Give the creator all initial tokens (100000 for example)\r\n   }\r\n\r\n   function name()\r\n   public\r\n   view\r\n   returns (string) {\r\n       return _name;\r\n   }\r\n\r\n   function symbol()\r\n   public\r\n   view\r\n   returns (string) {\r\n       return _symbol;\r\n   }\r\n\r\n   function decimals()\r\n   public\r\n   view\r\n   returns (uint8) {\r\n       return _decimals;\r\n   }\r\n\r\n   function totalSupply()\r\n   public\r\n   view\r\n   returns (uint256) {\r\n       return _totalSupply;\r\n   }\r\n\r\n   function transfer(address _to, uint256 _value) public returns (bool) {\r\n       require(_to != address(0));\r\n       require(_value \u003C= balances[msg.sender]);\r\n       balances[msg.sender] = SafeMath.sub(balances[msg.sender], _value);\r\n       balances[_to] = SafeMath.add(balances[_to], _value);\r\n       Transfer(msg.sender, _to, _value);\r\n       return true;\r\n   }\r\n\r\n   function transfer(address _to, uint _value, bytes _data) public {\r\n       require(_value \u003E 0 );\r\n       if(isContract(_to)) {\r\n           ERC223ReceivingContract receiver = ERC223ReceivingContract(_to);\r\n           receiver.tokenFallback(msg.sender, _value, _data);\r\n       }\r\n       balances[msg.sender] = balances[msg.sender].sub(_value);\r\n       balances[_to] = balances[_to].add(_value);\r\n       Transfer(msg.sender, _to, _value, _data);\r\n   }\r\n\r\n   function isContract(address _addr) private returns (bool is_contract) {\r\n       uint length;\r\n       assembly {\r\n       //retrieve the size of the code on target address, this needs assembly\r\n           length := extcodesize(_addr)\r\n       }\r\n       return (length\u003E0);\r\n   }\r\n\r\n   function balanceOf(address _owner) public view returns (uint256 balance) {\r\n       return balances[_owner];\r\n   }\r\n\r\n   function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n       require(_to != address(0));\r\n       require(_value \u003C= balances[_from]);\r\n       require(_value \u003C= allowed[_from][msg.sender]);\r\n\r\n       balances[_from] = SafeMath.sub(balances[_from], _value);\r\n       balances[_to] = SafeMath.add(balances[_to], _value);\r\n       allowed[_from][msg.sender] = SafeMath.sub(allowed[_from][msg.sender], _value);\r\n       Transfer(_from, _to, _value);\r\n       return true;\r\n   }\r\n\r\n   function approve(address _spender, uint256 _value) public returns (bool) {\r\n       allowed[msg.sender][_spender] = _value;\r\n       Approval(msg.sender, _spender, _value);\r\n       return true;\r\n   }\r\n\r\n   function allowance(address _owner, address _spender) public view returns (uint256) {\r\n       return allowed[_owner][_spender];\r\n   }\r\n\r\n   function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\r\n       allowed[msg.sender][_spender] = SafeMath.add(allowed[msg.sender][_spender], _addedValue);\r\n       Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n       return true;\r\n   }\r\n\r\n   function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\r\n       uint oldValue = allowed[msg.sender][_spender];\r\n       if (_subtractedValue \u003E oldValue) {\r\n           allowed[msg.sender][_spender] = 0;\r\n       } else {\r\n           allowed[msg.sender][_spender] = SafeMath.sub(oldValue, _subtractedValue);\r\n       }\r\n       Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n       return true;\r\n   }\r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022name\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022approve\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022totalSupply\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transferFrom\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022decimals\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint8\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_subtractedValue\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022decreaseApproval\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022balanceOf\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022balance\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022symbol\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transfer\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_data\u0022,\u0022type\u0022:\u0022bytes\u0022}],\u0022name\u0022:\u0022transfer\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_addedValue\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022increaseApproval\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_spender\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022allowance\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022data\u0022,\u0022type\u0022:\u0022bytes\u0022}],\u0022name\u0022:\u0022Transfer\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Transfer\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Approval\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"StandardToken","CompilerVersion":"v0.4.21\u002Bcommit.dfe3193c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://733f48b35626656299ada06fbcf14c46b5bd2c9d03fd05b8ab9767016fcb02d2"}]