[{"SourceCode":"# Burnin (based on the ERC-721 specification)\r\n# https://burni.co\r\n\r\nfrom vyper.interfaces import ERC721\r\n\r\nimplements: ERC721\r\n\r\n# Used to verify a transfer into a NFT-ready smart contract.\r\ncontract ERC721Receiver:\r\n\tdef onERC721Received(_operator: address, _from: address, _tokenId: uint256, _data: bytes[1024]) -\u003E bytes32: modifying\r\n\r\n# Used to verify a transfer into the Burni smart contract.\r\ncontract ERC20:\r\n\tdef transfer(_to: address, _value: uint256) -\u003E bool: modifying\r\n\tdef burn(_value: uint256): modifying\r\n\r\n# Events\r\nTransfer: event({_from: indexed(address), _to: indexed(address), _tokenId: indexed(uint256)})\r\nApproval: event({_owner: indexed(address), _approved: indexed(address), _tokenId: indexed(uint256)})\r\nApprovalForAll: event({_owner: indexed(address), _operator: indexed(address), _approved: bool})\r\nImmutable_Multihash: event({_from: indexed(address), _hash: bytes[256], _tokenId: indexed(uint256)})\r\nMutable_Multihash: event({_from: indexed(address), _hash: bytes[256], _tokenId: indexed(uint256)})\r\n\r\nname: public(string[64])     # Burnin\r\nsymbol: public(string[32])   # BURNIN\r\ntokenURI: public(string[64]) # https://burni.co\r\n\r\nidToOwner: map(uint256, address)                       # Id -\u003E Owner address\r\nidToApprovals: map(uint256, address)                   # Id -\u003E Spender address\r\nidToImmutableMultihash: map(uint256, bytes[256])       # Id -\u003E Permanent multihash\r\nidToMutableMultihash: map(uint256, bytes[256])         # Id -\u003E Updatable multihash\r\nidToValuation: map(uint256, uint256)                   # Id -\u003E Burni used to mint token\r\nidToOwnerIdx: map(uint256, uint256)                    # Id -\u003E Index of token (relative to owner)\r\nimmutableHashToId: map(bytes[256], uint256)            # Permanent multihash -\u003E Id\r\nownerIdxToTokenId: map(address, map(uint256, uint256)) # Index of token (relative to owner) -\u003E Id\r\nownerToNFTokenCount: map(address, uint256)             # Total supply of tokens for an address\r\nownerToOperators: map(address, map(address, bool))     # Owner address -\u003E Operator address -\u003E isOperator\r\nsupportedInterfaces: map(bytes32, bool)                # Interface -\u003E isSupported\r\n\r\nERC165_INTERFACE_ID: constant(bytes32) = 0x0000000000000000000000000000000000000000000000000000000001ffc9a7\r\nERC721_INTERFACE_ID: constant(bytes32) = 0x0000000000000000000000000000000000000000000000000000000080ac58cd\r\nerc20_address: address\r\npayment_address: address\r\ntotal_supply: uint256\r\n\r\n@public\r\ndef __init__(_name: string[64], _symbol: string[32], _tokenURI: string[64]):\r\n\t# Define the token and connect it to the Burni smart contract and operator.\r\n\tself.supportedInterfaces[ERC165_INTERFACE_ID] = True\r\n\tself.supportedInterfaces[ERC721_INTERFACE_ID] = True\r\n\tself.payment_address = msg.sender\r\n\tself.name = _name\r\n\tself.symbol = _symbol\r\n\tself.tokenURI = _tokenURI\r\n\tself.payment_address = 0x7bde389181EC80591ED40E011b0Ff576a2Beb74b\r\n\tself.erc20_address = 0x076a7c93343579355626F1426dE63F8827C9b9B2\r\n\r\n@public\r\n@constant\r\ndef totalSupply() -\u003E uint256:\r\n\t# The total supply of Burnin will gradually increase as tokens are created from Burni.\r\n\treturn self.total_supply\r\n\r\n@public\r\n@constant\r\ndef supportsInterface(_interfaceID: bytes32) -\u003E bool:\r\n\t# Returns the supported ERC-165 interface ids.\r\n\treturn self.supportedInterfaces[_interfaceID]\r\n\r\n@public\r\n@constant\r\ndef balanceOf(_owner: address) -\u003E uint256:\r\n\t# Returns the total Burnins owned by an address (throws if owner is zero).\r\n\tassert _owner != ZERO_ADDRESS\r\n\treturn self.ownerToNFTokenCount[_owner]\r\n\r\n@public\r\n@constant\r\ndef ownerOf(_tokenId: uint256) -\u003E address:\r\n\t# Returns the owner of a Burnin token by id (throws if token id is invalid).\r\n\towner: address = self.idToOwner[_tokenId]\r\n\tassert owner != ZERO_ADDRESS\r\n\treturn owner\r\n\r\n@public\r\n@constant\r\ndef tokenByIndex(_index: uint256) -\u003E uint256:\r\n\t# Tokens are numbered with 1-based indexing (throws if 0-based index is \u003E= supply).\r\n\tassert _index \u003C self.total_supply\r\n\treturn _index \u002B 1\r\n\r\n@public\r\n@constant\r\ndef tokenOfOwnerByIndex(_owner: address, _index: uint256) -\u003E uint256:\r\n\t# Returns the token id by an owner\u0027s token index (throws if owner is zero or index \u003E= supply).\r\n\tassert _owner != ZERO_ADDRESS\r\n\tassert _index \u003C self.ownerToNFTokenCount[_owner]\r\n\treturn self.ownerIdxToTokenId[_owner][_index]\r\n\r\n@public\r\n@constant\r\ndef getApproved(_tokenId: uint256) -\u003E address:\r\n\t# Returns approved spender for a Burnin token (throws if invalid token).\r\n\tassert self.idToOwner[_tokenId] != ZERO_ADDRESS\r\n\treturn self.idToApprovals[_tokenId]\r\n\r\n@public\r\n@constant\r\ndef getValuation(_tokenId: uint256) -\u003E uint256:\r\n\t# Returns the Burni used to create the Burnin (95% of the total ERC20 tx cost).\r\n\tassert self.idToOwner[_tokenId] != ZERO_ADDRESS\r\n\treturn self.idToValuation[_tokenId]\r\n\r\n@public\r\n@constant\r\ndef getImmutableMultihashOf(_tokenId: uint256) -\u003E bytes[256]:\r\n\t# Returns the permanent multihash for an id (throws if owner is zero).\r\n\towner: address = self.idToOwner[_tokenId]\r\n\tassert owner != ZERO_ADDRESS\r\n\treturn self.idToImmutableMultihash[_tokenId]\r\n\r\n@public\r\n@constant\r\ndef getMutableMultihashOf(_tokenId: uint256) -\u003E bytes[256]:\r\n\t# Returns the updatable multihash for an id (throws if owner is zero).\r\n\towner: address = self.idToOwner[_tokenId]\r\n\tassert owner != ZERO_ADDRESS\r\n\treturn self.idToMutableMultihash[_tokenId]\r\n\r\n@public\r\n@constant\r\ndef isApprovedForAll(_owner: address, _operator: address) -\u003E bool:\r\n\t# Checks if an operator is approved for the specified owner.\r\n\treturn (self.ownerToOperators[_owner])[_operator]\r\n\r\n@private\r\n@constant\r\ndef _isApprovedOrOwner(_spender: address, _tokenId: uint256) -\u003E bool:\r\n\t# Checks if the given spender can transfer a specified token.\r\n\towner: address = self.idToOwner[_tokenId]\r\n\tspenderIsOwner: bool = owner == _spender\r\n\tspenderIsApproved: bool = _spender == self.idToApprovals[_tokenId]\r\n\tspenderIsApprovedForAll: bool = (self.ownerToOperators[owner])[_spender]\r\n\treturn (spenderIsOwner or spenderIsApproved) or spenderIsApprovedForAll\r\n\r\n@private\r\ndef _addTokenTo(_to: address, _tokenId: uint256):\r\n\t# Adds a token to a new owner (throws if owner is zero).\r\n\tassert self.idToOwner[_tokenId] == ZERO_ADDRESS\r\n\tself.idToOwner[_tokenId] = _to\r\n\tself.idToOwnerIdx[_tokenId] = self.ownerToNFTokenCount[_to]\r\n\tself.ownerIdxToTokenId[_to][self.ownerToNFTokenCount[_to]] = _tokenId\r\n\tself.ownerToNFTokenCount[_to] \u002B= 1\r\n\r\n@private\r\ndef _removeTokenFrom(_from: address, _tokenId: uint256):\r\n\t# Removes a token from a previous owner (throws if the token belongs to another owner).\r\n\tassert self.idToOwner[_tokenId] == _from\r\n\tself.idToOwner[_tokenId] = ZERO_ADDRESS\r\n\r\n\t# Checks the owner\u0027s token index and reindexes if necessary.\r\n\ttokenIdx: uint256 = self.idToOwnerIdx[_tokenId]\r\n\tlastTokenIdx: uint256 = self.ownerToNFTokenCount[_from] - 1\r\n\r\n\tif self.ownerToNFTokenCount[_from] \u003E 1 and tokenIdx \u003C lastTokenIdx:\r\n\t\t# When an inner token is removed, fill the gap using the last token.\r\n\t\tlastTokenId: uint256 = self.ownerIdxToTokenId[_from][lastTokenIdx]\r\n\t\tself.ownerIdxToTokenId[_from][tokenIdx] = lastTokenId\r\n\t\tself.ownerIdxToTokenId[_from][lastTokenIdx] = 0\r\n\r\n\tself.ownerToNFTokenCount[_from] -= 1\r\n\r\n@private\r\ndef _clearApproval(_owner: address, _tokenId: uint256):\r\n\t# Clear an approval for a specified address (throws if the token belongs to another owner).\r\n\tassert self.idToOwner[_tokenId] == _owner\r\n\tif self.idToApprovals[_tokenId] != ZERO_ADDRESS:\r\n\t\tself.idToApprovals[_tokenId] = ZERO_ADDRESS\r\n\r\n@private\r\ndef _transferFrom(_from: address, _to: address, _tokenId: uint256, _sender: address):\r\n\t# Transfer to a new owner (throws if unauthorized or invalid recipient).\r\n\tassert self._isApprovedOrOwner(_sender, _tokenId)\r\n\tassert _to != ZERO_ADDRESS\r\n\tself._clearApproval(_from, _tokenId)\r\n\tself._removeTokenFrom(_from, _tokenId)\r\n\tself._addTokenTo(_to, _tokenId)\r\n\tlog.Transfer(_from, _to, _tokenId)\r\n\r\n@public\r\ndef transferFrom(_from: address, _to: address, _tokenId: uint256):\r\n\t# Transfer a Burnin token.\r\n\tself._transferFrom(_from, _to, _tokenId, msg.sender)\r\n\r\n@public\r\ndef safeTransferFrom(_from: address, _to: address, _tokenId: uint256, _data: bytes[1024]=\u0022\u0022):\r\n\t# Transfer to a new owner or smart contract (throws if unauthorized or invalid recipient).\r\n\tself._transferFrom(_from, _to, _tokenId, msg.sender)\r\n\tif _to.is_contract:\r\n\t\treturnValue: bytes32 = ERC721Receiver(_to).onERC721Received(msg.sender, _from, _tokenId, _data)\r\n\t\tassert returnValue == method_id(\u0022onERC721Received(address,address,uint256,bytes)\u0022, bytes32)\r\n\r\n@public\r\ndef approve(_approved: address, _tokenId: uint256):\r\n\t# Approve an address for a token (throws if the owner is zero or unauthorized).\r\n\towner: address = self.idToOwner[_tokenId]\r\n\tassert owner != ZERO_ADDRESS\r\n\tassert _approved != owner\r\n\tsenderIsOwner: bool = self.idToOwner[_tokenId] == msg.sender\r\n\tsenderIsApprovedForAll: bool = (self.ownerToOperators[owner])[msg.sender]\r\n\tassert (senderIsOwner or senderIsApprovedForAll)\r\n\tself.idToApprovals[_tokenId] = _approved\r\n\tlog.Approval(owner, _approved, _tokenId)\r\n\r\n@public\r\ndef clearApproval(_from: address, _tokenId: uint256):\r\n\t# Removes an approval address (throws if the token is invalid or belongs to another owner).\r\n\towner: address = self.idToOwner[_tokenId]\r\n\tassert owner != ZERO_ADDRESS\r\n\tassert owner == msg.sender\r\n\tself._clearApproval(_from, _tokenId)\r\n\r\n@public\r\ndef setApprovalForAll(_operator: address, _approved: bool):\r\n\t# Approves an operator for an owner\u0027s assets (throws if self-approving).\r\n\tassert _operator != msg.sender\r\n\tself.ownerToOperators[msg.sender][_operator] = _approved\r\n\tlog.ApprovalForAll(msg.sender, _operator, _approved)\r\n\r\n@public\r\ndef setImmutableMultihash(_hash: bytes[256], _tokenId: uint256):\r\n\t# Sets a permanent multihash (throws if invalid/predefined hash or the token belongs to another owner).\r\n\tassert self.idToOwner[_tokenId] == msg.sender\r\n\tassert _hash != \u0027\u0027\r\n\tassert self.idToMutableMultihash[_tokenId] == \u0027\u0027\r\n\tassert self.immutableHashToId[_hash] == 0\r\n\tself.idToMutableMultihash[_tokenId] = _hash\r\n\tlog.Mutable_Multihash(msg.sender, _hash, _tokenId)\r\n\r\n@public\r\ndef setMutableMultihash(_hash: bytes[256], _tokenId: uint256):\r\n\t# Sets an updatable multihash (throws if invalid/predefined hash or the token belongs to another owner).\r\n\tassert self._isApprovedOrOwner(msg.sender, _tokenId)\r\n\tassert _hash != \u0027\u0027\r\n\tself.idToMutableMultihash[_tokenId] = _hash\r\n\tlog.Mutable_Multihash(msg.sender, _hash, _tokenId)\r\n\r\n@public\r\ndef updateTokenURI(_tokenURI: string[64]):\r\n\t# Admin function to change the tokenURI metadata link if necessary (eg. domain change).\r\n\tassert msg.sender == self.payment_address\r\n\tself.tokenURI = _tokenURI\r\n\r\n@public\r\ndef updatePaymentAddress(_payment_address: address):\r\n\t# Admin function to change the 2.5% tx fee if necessary (eg. wallet change).\r\n\tassert msg.sender == self.payment_address\r\n\tself.payment_address = _payment_address\r\n\r\n@public\r\ndef onERC20Received(_from: address, _value: uint256) -\u003E bytes32:\r\n\t# Mint if 40\u002B Burni are received (throws if unauthorized or insufficient funds).\r\n\tassert msg.sender == self.erc20_address\r\n\tassert _value \u003E= 40\r\n\r\n\t# 2.5% of the total Burni are spared.\r\n\tfee: uint256 = _value / 40\r\n\tvaluation: uint256 = _value - fee\r\n\tdidPayFee: bool = ERC20(self.erc20_address).transfer(self.payment_address, fee)\r\n\tERC20(self.erc20_address).burn(valuation)\r\n\tassert didPayFee\r\n\r\n\tself.total_supply \u002B= 1\r\n\tself.idToValuation[self.total_supply] = valuation\r\n\tself._addTokenTo(_from, self.total_supply)\r\n\r\n\t# Handshake with Burni smart contract.\r\n\treturn method_id(\u0022onERC20Received(address,uint256)\u0022, bytes32)","ABI":"[{\u0022name\u0022:\u0022Transfer\u0022,\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_from\u0022,\u0022indexed\u0022:true},{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_to\u0022,\u0022indexed\u0022:true},{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_tokenId\u0022,\u0022indexed\u0022:true}],\u0022anonymous\u0022:false,\u0022type\u0022:\u0022event\u0022},{\u0022name\u0022:\u0022Approval\u0022,\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_owner\u0022,\u0022indexed\u0022:true},{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_approved\u0022,\u0022indexed\u0022:true},{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_tokenId\u0022,\u0022indexed\u0022:true}],\u0022anonymous\u0022:false,\u0022type\u0022:\u0022event\u0022},{\u0022name\u0022:\u0022ApprovalForAll\u0022,\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_owner\u0022,\u0022indexed\u0022:true},{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_operator\u0022,\u0022indexed\u0022:true},{\u0022type\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022_approved\u0022,\u0022indexed\u0022:false}],\u0022anonymous\u0022:false,\u0022type\u0022:\u0022event\u0022},{\u0022name\u0022:\u0022Immutable_Multihash\u0022,\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_from\u0022,\u0022indexed\u0022:true},{\u0022type\u0022:\u0022bytes\u0022,\u0022name\u0022:\u0022_hash\u0022,\u0022indexed\u0022:false},{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_tokenId\u0022,\u0022indexed\u0022:true}],\u0022anonymous\u0022:false,\u0022type\u0022:\u0022event\u0022},{\u0022name\u0022:\u0022Mutable_Multihash\u0022,\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_from\u0022,\u0022indexed\u0022:true},{\u0022type\u0022:\u0022bytes\u0022,\u0022name\u0022:\u0022_hash\u0022,\u0022indexed\u0022:false},{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_tokenId\u0022,\u0022indexed\u0022:true}],\u0022anonymous\u0022:false,\u0022type\u0022:\u0022event\u0022},{\u0022outputs\u0022:[],\u0022inputs\u0022:[{\u0022type\u0022:\u0022string\u0022,\u0022name\u0022:\u0022_name\u0022},{\u0022type\u0022:\u0022string\u0022,\u0022name\u0022:\u0022_symbol\u0022},{\u0022type\u0022:\u0022string\u0022,\u0022name\u0022:\u0022_tokenURI\u0022}],\u0022constant\u0022:false,\u0022payable\u0022:false,\u0022type\u0022:\u0022constructor\u0022},{\u0022name\u0022:\u0022totalSupply\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022out\u0022}],\u0022inputs\u0022:[],\u0022constant\u0022:true,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:1151},{\u0022name\u0022:\u0022supportsInterface\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022out\u0022}],\u0022inputs\u0022:[{\u0022type\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022_interfaceID\u0022}],\u0022constant\u0022:true,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:1296},{\u0022name\u0022:\u0022balanceOf\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022out\u0022}],\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_owner\u0022}],\u0022constant\u0022:true,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:1462},{\u0022name\u0022:\u0022ownerOf\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022out\u0022}],\u0022inputs\u0022:[{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_tokenId\u0022}],\u0022constant\u0022:true,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:1468},{\u0022name\u0022:\u0022tokenByIndex\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022out\u0022}],\u0022inputs\u0022:[{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_index\u0022}],\u0022constant\u0022:true,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:1544},{\u0022name\u0022:\u0022tokenOfOwnerByIndex\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022out\u0022}],\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_owner\u0022},{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_index\u0022}],\u0022constant\u0022:true,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:2679},{\u0022name\u0022:\u0022getApproved\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022out\u0022}],\u0022inputs\u0022:[{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_tokenId\u0022}],\u0022constant\u0022:true,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:2455},{\u0022name\u0022:\u0022getValuation\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022out\u0022}],\u0022inputs\u0022:[{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_tokenId\u0022}],\u0022constant\u0022:true,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:2485},{\u0022name\u0022:\u0022getImmutableMultihashOf\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022bytes\u0022,\u0022name\u0022:\u0022out\u0022}],\u0022inputs\u0022:[{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_tokenId\u0022}],\u0022constant\u0022:true,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:14795},{\u0022name\u0022:\u0022getMutableMultihashOf\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022bytes\u0022,\u0022name\u0022:\u0022out\u0022}],\u0022inputs\u0022:[{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_tokenId\u0022}],\u0022constant\u0022:true,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:14825},{\u0022name\u0022:\u0022isApprovedForAll\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022out\u0022}],\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_owner\u0022},{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_operator\u0022}],\u0022constant\u0022:true,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:1759},{\u0022name\u0022:\u0022transferFrom\u0022,\u0022outputs\u0022:[],\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_from\u0022},{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_to\u0022},{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_tokenId\u0022}],\u0022constant\u0022:false,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:583204},{\u0022name\u0022:\u0022safeTransferFrom\u0022,\u0022outputs\u0022:[],\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_from\u0022},{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_to\u0022},{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_tokenId\u0022}],\u0022constant\u0022:false,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022},{\u0022name\u0022:\u0022safeTransferFrom\u0022,\u0022outputs\u0022:[],\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_from\u0022},{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_to\u0022},{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_tokenId\u0022},{\u0022type\u0022:\u0022bytes\u0022,\u0022name\u0022:\u0022_data\u0022}],\u0022constant\u0022:false,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022},{\u0022name\u0022:\u0022approve\u0022,\u0022outputs\u0022:[],\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_approved\u0022},{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_tokenId\u0022}],\u0022constant\u0022:false,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:41105},{\u0022name\u0022:\u0022clearApproval\u0022,\u0022outputs\u0022:[],\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_from\u0022},{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_tokenId\u0022}],\u0022constant\u0022:false,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:25006},{\u0022name\u0022:\u0022setApprovalForAll\u0022,\u0022outputs\u0022:[],\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_operator\u0022},{\u0022type\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022_approved\u0022}],\u0022constant\u0022:false,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:38420},{\u0022name\u0022:\u0022setImmutableMultihash\u0022,\u0022outputs\u0022:[],\u0022inputs\u0022:[{\u0022type\u0022:\u0022bytes\u0022,\u0022name\u0022:\u0022_hash\u0022},{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_tokenId\u0022}],\u0022constant\u0022:false,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:340306},{\u0022name\u0022:\u0022setMutableMultihash\u0022,\u0022outputs\u0022:[],\u0022inputs\u0022:[{\u0022type\u0022:\u0022bytes\u0022,\u0022name\u0022:\u0022_hash\u0022},{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_tokenId\u0022}],\u0022constant\u0022:false,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:331256},{\u0022name\u0022:\u0022updateTokenURI\u0022,\u0022outputs\u0022:[],\u0022inputs\u0022:[{\u0022type\u0022:\u0022string\u0022,\u0022name\u0022:\u0022_tokenURI\u0022}],\u0022constant\u0022:false,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:107737},{\u0022name\u0022:\u0022updatePaymentAddress\u0022,\u0022outputs\u0022:[],\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_payment_address\u0022}],\u0022constant\u0022:false,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:36967},{\u0022name\u0022:\u0022onERC20Received\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022out\u0022}],\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_from\u0022},{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_value\u0022}],\u0022constant\u0022:false,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:229811},{\u0022name\u0022:\u0022name\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022string\u0022,\u0022name\u0022:\u0022out\u0022}],\u0022inputs\u0022:[],\u0022constant\u0022:true,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:8333},{\u0022name\u0022:\u0022symbol\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022string\u0022,\u0022name\u0022:\u0022out\u0022}],\u0022inputs\u0022:[],\u0022constant\u0022:true,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:7386},{\u0022name\u0022:\u0022tokenURI\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022string\u0022,\u0022name\u0022:\u0022out\u0022}],\u0022inputs\u0022:[],\u0022constant\u0022:true,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:8393}]","ContractName":"Vyper_contract","CompilerVersion":"vyper:0.1.0b16","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000064275726e696e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064255524e494e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001068747470733a2f2f6275726e692e636f00000000000000000000000000000000","Library":"","SwarmSource":""}]