[{"SourceCode":"/**\r\n * Copyright 2017-2020, bZeroX, LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0.\r\n */\r\n\r\npragma solidity 0.5.16;\r\n\r\n\r\ncontract ArbitraryCaller {\r\n    function sendCall(\r\n        address target,\r\n        bytes calldata callData)\r\n        external\r\n        payable\r\n    {\r\n        (bool success,) = target.call.value(msg.value)(callData);\r\n        assembly {\r\n            let size := returndatasize()\r\n            let ptr := mload(0x40)\r\n            returndatacopy(ptr, 0, size)\r\n            if eq(success, 0) { revert(ptr, size) }\r\n            return(ptr, size)\r\n        }\r\n    }\r\n}","ABI":"[{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022target\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022bytes\u0022,\u0022name\u0022:\u0022callData\u0022,\u0022type\u0022:\u0022bytes\u0022}],\u0022name\u0022:\u0022sendCall\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022}]","ContractName":"ArbitraryCaller","CompilerVersion":"v0.5.16\u002Bcommit.9c3226ce","OptimizationUsed":"1","Runs":"1000000","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://4d7317041fca9912089daf4bf5f9a8f38cc6bb2c489a28fef95aefd16d7f5ec0"}]