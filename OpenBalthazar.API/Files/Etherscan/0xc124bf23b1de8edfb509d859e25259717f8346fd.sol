[{"SourceCode":"pragma solidity \u003E=0.4.10;\r\n\r\n// from Zeppelin\r\ncontract SafeMath {\r\n    function safeMul(uint a, uint b) internal returns (uint) {\r\n        uint c = a * b;\r\n        require(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function safeSub(uint a, uint b) internal returns (uint) {\r\n        require(b \u003C= a);\r\n        return a - b;\r\n    }\r\n\r\n    function safeAdd(uint a, uint b) internal returns (uint) {\r\n        uint c = a \u002B b;\r\n        require(c\u003E=a \u0026\u0026 c\u003E=b);\r\n        return c;\r\n    }\r\n}\r\n// end from Zeppelin\r\n\r\ncontract Owned {\r\n\taddress public owner;\r\n\taddress newOwner;\r\n\r\n\tfunction Owned() {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction changeOwner(address _newOwner) onlyOwner {\r\n\t\tnewOwner = _newOwner;\r\n\t}\r\n\r\n\tfunction acceptOwnership() {\r\n\t\tif (msg.sender == newOwner) {\r\n\t\t\towner = newOwner;\r\n\t\t}\r\n\t}\r\n}\r\n\r\ncontract Pausable is Owned {\r\n\tbool public paused;\r\n\r\n\tfunction pause() onlyOwner {\r\n\t\tpaused = true;\r\n\t}\r\n\r\n\tfunction unpause() onlyOwner {\r\n\t\tpaused = false;\r\n\t}\r\n\r\n\tmodifier notPaused() {\r\n\t\trequire(!paused);\r\n\t\t_;\r\n\t}\r\n}\r\n\r\ncontract Finalizable is Owned {\r\n\tbool public finalized;\r\n\r\n\tfunction finalize() onlyOwner {\r\n\t\tfinalized = true;\r\n\t}\r\n\r\n\tmodifier notFinalized() {\r\n\t\trequire(!finalized);\r\n\t\t_;\r\n\t}\r\n}\r\n\r\ncontract IToken {\r\n\tfunction transfer(address _to, uint _value) returns (bool);\r\n\tfunction balanceOf(address owner) returns(uint);\r\n}\r\n\r\n// In case someone accidentally sends token to one of these contracts,\r\n// add a way to get them back out.\r\ncontract TokenReceivable is Owned {\r\n\tfunction claimTokens(address _token, address _to) onlyOwner returns (bool) {\r\n\t\tIToken token = IToken(_token);\r\n\t\treturn token.transfer(_to, token.balanceOf(this));\r\n\t}\r\n}\r\n\r\ncontract EventDefinitions {\r\n\tevent Transfer(address indexed from, address indexed to, uint value);\r\n\tevent Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\ncontract Token is Finalizable, TokenReceivable, SafeMath, EventDefinitions, Pausable {\r\n\t// Set these appropriately before you deploy\r\n\tstring constant public name = \u0022Philippine Coin\u0022;\r\n\tuint8 constant public decimals = 8;\r\n\tstring constant public symbol = \u0022PHC\u0022;\r\n\tController public controller;\r\n\tstring public motd;\r\n\tevent Motd(string message);\r\n\r\n\t// functions below this line are onlyOwner\r\n\r\n\t// set \u0022message of the day\u0022\r\n\tfunction setMotd(string _m) onlyOwner {\r\n\t\tmotd = _m;\r\n\t\tMotd(_m);\r\n\t}\r\n\r\n\tfunction setController(address _c) onlyOwner notFinalized {\r\n\t\tcontroller = Controller(_c);\r\n\t}\r\n\r\n\t// functions below this line are public\r\n\r\n\tfunction balanceOf(address a) constant returns (uint) {\r\n\t\treturn controller.balanceOf(a);\r\n\t}\r\n\r\n\tfunction totalSupply() constant returns (uint) {\r\n\t\treturn controller.totalSupply();\r\n\t}\r\n\r\n\tfunction allowance(address _owner, address _spender) constant returns (uint) {\r\n\t\treturn controller.allowance(_owner, _spender);\r\n\t}\r\n\r\n\tfunction transfer(address _to, uint _value) onlyPayloadSize(2) notPaused returns (bool success) {\r\n\t\tif (controller.transfer(msg.sender, _to, _value)) {\r\n\t\t\tTransfer(msg.sender, _to, _value);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction transferFrom(address _from, address _to, uint _value) onlyPayloadSize(3) notPaused returns (bool success) {\r\n\t\tif (controller.transferFrom(msg.sender, _from, _to, _value)) {\r\n\t\t\tTransfer(_from, _to, _value);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction approve(address _spender, uint _value) onlyPayloadSize(2) notPaused returns (bool success) {\r\n\t\t// promote safe user behavior\r\n\t\tif (controller.approve(msg.sender, _spender, _value)) {\r\n\t\t\tApproval(msg.sender, _spender, _value);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction increaseApproval (address _spender, uint _addedValue) onlyPayloadSize(2) notPaused returns (bool success) {\r\n\t\tif (controller.increaseApproval(msg.sender, _spender, _addedValue)) {\r\n\t\t\tuint newval = controller.allowance(msg.sender, _spender);\r\n\t\t\tApproval(msg.sender, _spender, newval);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction decreaseApproval (address _spender, uint _subtractedValue) onlyPayloadSize(2) notPaused returns (bool success) {\r\n\t\tif (controller.decreaseApproval(msg.sender, _spender, _subtractedValue)) {\r\n\t\t\tuint newval = controller.allowance(msg.sender, _spender);\r\n\t\t\tApproval(msg.sender, _spender, newval);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tmodifier onlyPayloadSize(uint numwords) {\r\n\t\tassert(msg.data.length \u003E= numwords * 32 \u002B 4);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction burn(uint _amount) notPaused {\r\n\t\tcontroller.burn(msg.sender, _amount);\r\n\t\tTransfer(msg.sender, 0x0, _amount);\r\n\t}\r\n\r\n\t// functions below this line are onlyController\r\n\r\n\tmodifier onlyController() {\r\n\t\tassert(msg.sender == address(controller));\r\n\t\t_;\r\n\t}\r\n\r\n\t// In the future, when the controller supports multiple token\r\n\t// heads, allow the controller to reconstitute the transfer and\r\n\t// approval history.\r\n\r\n\tfunction controllerTransfer(address _from, address _to, uint _value) onlyController {\r\n\t\tTransfer(_from, _to, _value);\r\n\t}\r\n\r\n\tfunction controllerApprove(address _owner, address _spender, uint _value) onlyController {\r\n\t\tApproval(_owner, _spender, _value);\r\n\t}\r\n}\r\n\r\ncontract Controller is Owned, Finalizable {\r\n\tLedger public ledger;\r\n\tToken public token;\r\n\r\n\tfunction Controller() {\r\n\t}\r\n\r\n\t// functions below this line are onlyOwner\r\n\r\n\tfunction setToken(address _token) onlyOwner {\r\n\t\ttoken = Token(_token);\r\n\t}\r\n\r\n\tfunction setLedger(address _ledger) onlyOwner {\r\n\t\tledger = Ledger(_ledger);\r\n\t}\r\n\r\n\tmodifier onlyToken() {\r\n\t\trequire(msg.sender == address(token));\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier onlyLedger() {\r\n\t\trequire(msg.sender == address(ledger));\r\n\t\t_;\r\n\t}\r\n\r\n\t// public functions\r\n\r\n\tfunction totalSupply() constant returns (uint) {\r\n\t\treturn ledger.totalSupply();\r\n\t}\r\n\r\n\tfunction balanceOf(address _a) constant returns (uint) {\r\n\t\treturn ledger.balanceOf(_a);\r\n\t}\r\n\r\n\tfunction allowance(address _owner, address _spender) constant returns (uint) {\r\n\t\treturn ledger.allowance(_owner, _spender);\r\n\t}\r\n\r\n\t// functions below this line are onlyLedger\r\n\r\n\t// let the ledger send transfer events (the most obvious case\r\n\t// is when we mint directly to the ledger and need the Transfer()\r\n\t// events to appear in the token)\r\n\tfunction ledgerTransfer(address from, address to, uint val) onlyLedger {\r\n\t\ttoken.controllerTransfer(from, to, val);\r\n\t}\r\n\r\n\t// functions below this line are onlyToken\r\n\r\n\tfunction transfer(address _from, address _to, uint _value) onlyToken returns (bool success) {\r\n\t\treturn ledger.transfer(_from, _to, _value);\r\n\t}\r\n\r\n\tfunction transferFrom(address _spender, address _from, address _to, uint _value) onlyToken returns (bool success) {\r\n\t\treturn ledger.transferFrom(_spender, _from, _to, _value);\r\n\t}\r\n\r\n\tfunction approve(address _owner, address _spender, uint _value) onlyToken returns (bool success) {\r\n\t\treturn ledger.approve(_owner, _spender, _value);\r\n\t}\r\n\r\n\tfunction increaseApproval (address _owner, address _spender, uint _addedValue) onlyToken returns (bool success) {\r\n\t\treturn ledger.increaseApproval(_owner, _spender, _addedValue);\r\n\t}\r\n\r\n\tfunction decreaseApproval (address _owner, address _spender, uint _subtractedValue) onlyToken returns (bool success) {\r\n\t\treturn ledger.decreaseApproval(_owner, _spender, _subtractedValue);\r\n\t}\r\n\r\n\tfunction burn(address _owner, uint _amount) onlyToken {\r\n\t\tledger.burn(_owner, _amount);\r\n\t}\r\n}\r\n\r\ncontract Ledger is Owned, SafeMath, Finalizable, TokenReceivable {\r\n\tController public controller;\r\n\tmapping(address =\u003E uint) public balanceOf;\r\n\tmapping (address =\u003E mapping (address =\u003E uint)) public allowance;\r\n\tuint public totalSupply;\r\n\tuint public mintingNonce;\r\n\tbool public mintingStopped;\r\n\r\n\t// functions below this line are onlyOwner\r\n\r\n\tfunction Ledger() {\r\n\t}\r\n\r\n\tfunction setController(address _controller) onlyOwner notFinalized {\r\n\t\tcontroller = Controller(_controller);\r\n\t}\r\n\r\n\tfunction InitMinting(address _owner) onlyOwner {\r\n\t    // PHC COIN Supply requested\r\n\t\ttotalSupply = 2000000000000000000;\r\n\t\tbalanceOf[_owner] = totalSupply;\r\n\t}\r\n\r\n\tfunction stopMinting() onlyOwner {\r\n\t\tmintingStopped = true;\r\n\t}\r\n\r\n\tfunction multiMint(uint nonce, uint256[] bits) onlyOwner {\r\n\t\trequire(!mintingStopped);\r\n\t\tif (nonce != mintingNonce) return;\r\n\t\tmintingNonce \u002B= 1;\r\n\t\tuint256 lomask = (1 \u003C\u003C 96) - 1;\r\n\t\tuint created = 0;\r\n\t\tfor (uint i=0; i\u003Cbits.length; i\u002B\u002B) {\r\n\t\t\taddress a = address(bits[i]\u003E\u003E96);\r\n\t\t\tuint value = bits[i]\u0026lomask;\r\n\t\t\tbalanceOf[a] = balanceOf[a] \u002B value;\r\n\t\t\tcontroller.ledgerTransfer(0, a, value);\r\n\t\t\tcreated \u002B= value;\r\n\t\t}\r\n\t\ttotalSupply \u002B= created;\r\n\t}\r\n\r\n\t// functions below this line are onlyController\r\n\r\n\tmodifier onlyController() {\r\n\t\trequire(msg.sender == address(controller));\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction transfer(address _from, address _to, uint _value) onlyController returns (bool success) {\r\n\t\tif (balanceOf[_from] \u003C _value) return false;\r\n\r\n\t\tbalanceOf[_from] = safeSub(balanceOf[_from], _value);\r\n\t\tbalanceOf[_to] = safeAdd(balanceOf[_to], _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transferFrom(address _spender, address _from, address _to, uint _value) onlyController returns (bool success) {\r\n\t\tif (balanceOf[_from] \u003C _value) return false;\r\n\r\n\t\tvar allowed = allowance[_from][_spender];\r\n\t\tif (allowed \u003C _value) return false;\r\n\r\n\t\tbalanceOf[_to] = safeAdd(balanceOf[_to], _value);\r\n\t\tbalanceOf[_from] = safeSub(balanceOf[_from], _value);\r\n\t\tallowance[_from][_spender] = safeSub(allowed, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction approve(address _owner, address _spender, uint _value) onlyController returns (bool success) {\r\n\t\t// require user to set to zero before resetting to nonzero\r\n\t\tif ((_value != 0) \u0026\u0026 (allowance[_owner][_spender] != 0)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tallowance[_owner][_spender] = _value;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction increaseApproval (address _owner, address _spender, uint _addedValue) onlyController returns (bool success) {\r\n\t\tuint oldValue = allowance[_owner][_spender];\r\n\t\tallowance[_owner][_spender] = safeAdd(oldValue, _addedValue);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction decreaseApproval (address _owner, address _spender, uint _subtractedValue) onlyController returns (bool success) {\r\n\t\tuint oldValue = allowance[_owner][_spender];\r\n\t\tif (_subtractedValue \u003E oldValue) {\r\n\t\t\tallowance[_owner][_spender] = 0;\r\n\t\t} else {\r\n\t\t\tallowance[_owner][_spender] = safeSub(oldValue, _subtractedValue);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction burn(address _owner, uint _amount) onlyController {\r\n\t\tbalanceOf[_owner] = safeSub(balanceOf[_owner], _amount);\r\n\t\ttotalSupply = safeSub(totalSupply, _amount);\r\n\t}\r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022name\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022approve\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022totalSupply\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transferFrom\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022decimals\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint8\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022unpause\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022burn\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022finalize\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022motd\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022paused\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_m\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022name\u0022:\u0022setMotd\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_subtractedValue\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022decreaseApproval\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_token\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022claimTokens\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022a\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022balanceOf\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022acceptOwnership\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022pause\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022owner\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022controllerApprove\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_c\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022setController\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022symbol\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022controllerTransfer\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022changeOwner\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transfer\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022finalized\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_addedValue\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022increaseApproval\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_spender\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022allowance\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022controller\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022message\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022name\u0022:\u0022Motd\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Transfer\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Approval\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"Token","CompilerVersion":"v0.4.26\u002Bcommit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f68c6fb00f1a06dd7f226e9bb5ad18b58bdf25b0dd7d78f838713b085359ad6c"}]