[{"SourceCode":"pragma solidity \u003E= 0.4.24;\r\n\r\n//by AGAINST Network Team\r\n\r\ninterface erc20 {\r\n    function name() external returns (string);\r\n\tfunction symbol() external returns (string);\r\n\tfunction decimals() external returns (uint8);\r\n    function transfer(address receiver, uint amount) external;\r\n\tfunction transferFrom(address from, address to, uint value) external;\r\n    function balanceOf(address tokenOwner) constant external returns (uint balance);\r\n    function allowance(address _owner, address _spender) constant external returns (uint remaining); \r\n}\r\n\r\ncontract againstTokenRegister {\r\n    string public name = \u0022AGAINST TKDEX\u0022;\r\n    string public symbol = \u0022AGAINST\u0022;\r\n    string public comment = \u0022AGAINST Token Index \u0026 Full DEX 1.0\u0022;\r\n    address internal owner;\r\n    uint public indexCount = 0;\r\n\tuint public registerFee = 0;\r\n    uint public ratePlaces = 9;\r\n    uint public openMarketFee = 0;\r\n    uint public actionFee = 10**15;\r\n    uint public garbageFees = 0;\r\n    uint internal minQtd = (10**18)/(10**4);\r\n\t\r\n\tevent orderPlaced(address token, address tokenPair, address ownerId, uint orderId);\r\n\tevent orderDone(address token, address tokenPair, uint orderId, uint doneId);\r\n\tevent orderCanceled(address token, address tokenPair, uint orderId);\r\n\tevent orderRemovedLowBalance(address token, address tokenPair, uint orderId);\r\n    event ctrWithdraw(address wallet, uint value);\r\n  \r\n    struct order {\r\n      uint orderId;\r\n      address orderOwner;\r\n      uint rate;\r\n      uint amount;\r\n      bool sell; \r\n      uint date;\r\n    } \r\n   \r\n    struct done {\r\n\t  uint orderId;\r\n      address fillOwner;\r\n      uint fillAmount;\r\n      uint fillDate;\r\n      uint rate;   \r\n    }\r\n\t\r\n\tstruct market {  \r\n      bool exists;\r\n      address tokenPair;\r\n      uint ordersCount;\r\n      uint donesCount;\r\n\t  mapping(uint =\u003E order) orders; \r\n      mapping(uint =\u003E done) dones;\r\n\t}\r\n\r\n    struct voted {\r\n      bool like;\r\n      bool dislike;\r\n    }\r\n\r\n    struct token {\r\n      address tokenBase;\r\n      string name;\r\n      string symbol;\r\n      uint decimals;\r\n      uint likesCount;\r\n      uint dislikesCount; \r\n      uint marketsCount;\r\n      mapping(uint =\u003E address) marketIndex; \r\n      mapping(address =\u003E market) markets;\r\n      mapping(address =\u003E voted) voteStatus;\r\n    }\r\n\t\r\n    mapping(uint =\u003E address) public index;\r\n\tmapping(address =\u003E token) public tokens;\r\n    mapping(address =\u003E bool) public exists;\t\r\n    \t\r\n\tconstructor() public {\r\n       owner = address(msg.sender); \r\n    }\r\n\r\n    function () public {\r\n      bool pass = false;\r\n      require(pass,\u0022Nothing Here\u0022);\r\n    }\r\n\r\n    function getTokenByAddr(address _addr) public view returns (string _name, \r\n                                                                string _symbol, \r\n                                                                uint _decimals, \r\n                                                                uint _marketsCount) {\r\n\r\n       return (tokens[_addr].name,\r\n               tokens[_addr].symbol,\r\n               tokens[_addr].decimals,\r\n               tokens[_addr].marketsCount);\r\n    }\r\n\r\n    function getTokenByIndex(uint _index) public view returns (address _tokenBase, \r\n                                                               string _name, \r\n                                                               string _symbol, \r\n                                                               uint _decimals, \r\n                                                               uint _marketsCount) {\r\n       return (tokens[index[_index]].tokenBase, \r\n               tokens[index[_index]].name,\r\n               tokens[index[_index]].symbol,\r\n               tokens[index[_index]].decimals,\r\n               tokens[index[_index]].marketsCount);\r\n    }\r\n\r\n    function getLikesByAddr(address _addr) public view returns (uint _likesCount, uint _dislikesCount) {\r\n       return (tokens[_addr].likesCount, tokens[_addr].dislikesCount);\r\n    }\r\n\r\n    function getVoteStatus(address _addr) public view returns (bool _like, bool _dislike) {\r\n      return (tokens[_addr].voteStatus[msg.sender].like, tokens[_addr].voteStatus[msg.sender].dislike);\r\n    }\r\n\r\n    function getLikesByIndex(uint _index) public view returns (address tokenBase, uint _likesCount, uint _dislikesCount) {\r\n       return (tokens[index[_index]].tokenBase, tokens[index[_index]].likesCount, tokens[index[_index]].dislikesCount);\r\n    }\r\n\r\n    function getPairByAddr(address _base, address _pairAddr) public view returns (uint _ordersCount, uint _donesCount, bool _exists) {        \r\n       return (tokens[_base].markets[_pairAddr].ordersCount,\r\n               tokens[_base].markets[_pairAddr].donesCount,\r\n               tokens[_base].markets[_pairAddr].exists);\r\n    }\r\n\r\n    function getPairByIndex(address _base, uint _pairIndex) public view returns (address _tokenPair, uint _ordersCount, uint _donesCount) {\r\n       return (tokens[_base].markets[tokens[_base].marketIndex[_pairIndex]].tokenPair,\r\n               tokens[_base].markets[tokens[_base].marketIndex[_pairIndex]].ordersCount,\r\n               tokens[_base].markets[tokens[_base].marketIndex[_pairIndex]].donesCount);\r\n    }\r\n\r\n    function getOrders(address _base, address _pair, uint _orderIndex) public view returns (uint _orderId,\r\n                                                                                            address _owner,\r\n                                                                                            uint _rate,\r\n                                                                                            uint _amount,\r\n                                                                                            bool _sell) {\r\n       return (tokens[_base].markets[_pair].orders[_orderIndex].orderId,\r\n               tokens[_base].markets[_pair].orders[_orderIndex].orderOwner,\r\n               tokens[_base].markets[_pair].orders[_orderIndex].rate,\r\n               tokens[_base].markets[_pair].orders[_orderIndex].amount,\r\n               tokens[_base].markets[_pair].orders[_orderIndex].sell);\r\n    }\r\n\r\n    function getDones(address _base, address _pair, uint _doneIndex) public view returns (uint _orderId,\r\n                                                                                          address _fillOwner,\r\n                                                                                          uint _fillAmount,\r\n                                                                                          uint _fillDate,\r\n                                                                                          uint _rate) {\r\n       return (tokens[_base].markets[_pair].dones[_doneIndex].orderId,\r\n               tokens[_base].markets[_pair].dones[_doneIndex].fillOwner,\r\n               tokens[_base].markets[_pair].dones[_doneIndex].fillAmount,\r\n               tokens[_base].markets[_pair].dones[_doneIndex].fillDate,\r\n               tokens[_base].markets[_pair].dones[_doneIndex].rate);\r\n    }\t\r\n\r\n\tfunction changeOwner(address _newOwner) public {\r\n\t  if (msg.sender == owner) {\r\n\t    owner = _newOwner;\r\n\t  }\r\n\t}\r\n\r\n\tfunction registerToken(address _token) public payable {\r\n\t   require((msg.sender == owner) || (msg.value \u003E= registerFee), \u0022Register Fee Very Low\u0022);\r\n\t   erc20 refToken = erc20(_token);\r\n       if (!exists[_token]) {            \r\n            indexCount = indexCount\u002B1;\r\n            index[indexCount] = _token; \r\n            tokens[_token].tokenBase = _token;  \r\n            tokens[_token].name = refToken.name();\t\t\r\n            tokens[_token].symbol = refToken.symbol();\r\n            tokens[_token].decimals = refToken.decimals();\t\t\t\r\n            tokens[_token].likesCount = 0;\r\n            tokens[_token].dislikesCount = 0;\r\n            tokens[_token].marketsCount = 0; \t\t\r\n            exists[_token] = true;            \r\n       }\t             \r\n\t}\r\n\r\n    function createMarket(address _token, address _tokenPair) public payable {\r\n      require(msg.value \u003E= openMarketFee, \u0022Open Market Fee Very Low\u0022);\r\n      require(exists[_token] \u0026\u0026 exists[_tokenPair],\u0022token or tokenPair not listed\u0022);     \r\n      require(!tokens[_token].markets[_tokenPair].exists,\u0022Market already exists\u0022);\r\n      require(tokens[_token].tokenBase != _tokenPair,\u0022Not allowed token = tokenPair\u0022);\r\n      tokens[_token].marketsCount = tokens[_token].marketsCount\u002B1;\r\n      tokens[_token].marketIndex[tokens[_token].marketsCount] = _tokenPair;\r\n      tokens[_token].markets[_tokenPair].tokenPair = _tokenPair;\r\n      tokens[_token].markets[_tokenPair].ordersCount = 0;\r\n      tokens[_token].markets[_tokenPair].donesCount = 0;\r\n      tokens[_token].markets[_tokenPair].exists = true;\r\n    }\r\n\r\n    function createOrder(address _token, address _tokenPair, uint _rate, uint _amount, bool _sell) public payable {\r\n       require(msg.value \u003E= actionFee);  \r\n       require(_token != _tokenPair,\u0022Not allowed token = tokenPair\u0022);     \r\n       require(exists[_token] \u0026\u0026 exists[_tokenPair],\u0022Token or tokenPair not listed\u0022);\r\n       require((_rate \u003E 0) \u0026\u0026 (_rate \u003C= (10**(ratePlaces*2)) \u0026\u0026 (_amount \u003E 0) \u0026\u0026 (_amount \u003C= 10**36)),\u0022Invalid Values\u0022);\r\n       tokens[_token].markets[_tokenPair].ordersCount = tokens[_token].markets[_tokenPair].ordersCount\u002B1;\r\n       tokens[_token].markets[_tokenPair].orders[tokens[_token].markets[_tokenPair].ordersCount].orderId = tokens[_token].markets[_tokenPair].ordersCount;\r\n       tokens[_token].markets[_tokenPair].orders[tokens[_token].markets[_tokenPair].ordersCount].orderOwner = msg.sender; \r\n       tokens[_token].markets[_tokenPair].orders[tokens[_token].markets[_tokenPair].ordersCount].rate = _rate;\r\n       tokens[_token].markets[_tokenPair].orders[tokens[_token].markets[_tokenPair].ordersCount].amount = _amount;\r\n       tokens[_token].markets[_tokenPair].orders[tokens[_token].markets[_tokenPair].ordersCount].sell = _sell;\r\n       tokens[_token].markets[_tokenPair].orders[tokens[_token].markets[_tokenPair].ordersCount].date = now;\r\n       garbageFees \u002B= actionFee; \r\n\t   emit orderPlaced(_token, _tokenPair, msg.sender, tokens[_token].markets[_tokenPair].ordersCount);\r\n    }\r\n\t\r\n\tfunction tokenLike(address _token) public {\t\r\n        require(exists[_token], \u0022Token not listed\u0022);    \r\n        if (!tokens[_token].voteStatus[msg.sender].like) {\r\n\t      tokens[_token].likesCount = tokens[_token].likesCount\u002B1;\r\n          tokens[_token].voteStatus[msg.sender].like = true;\r\n          if (tokens[_token].voteStatus[msg.sender].dislike) {\r\n\t          tokens[_token].dislikesCount = tokens[_token].dislikesCount-1;\r\n              tokens[_token].voteStatus[msg.sender].dislike = false;\r\n          }\r\n        } else {\r\n          tokens[_token].likesCount = tokens[_token].likesCount-1;\r\n          tokens[_token].voteStatus[msg.sender].like = false;\r\n        }\t   \r\n\t}\r\n\t\r\n\tfunction tokenDislike(address _token) public {\r\n        require(exists[_token],\u0022Token not listed\u0022);\r\n   \t    if (!tokens[_token].voteStatus[msg.sender].dislike) {\r\n\t      tokens[_token].dislikesCount = tokens[_token].dislikesCount\u002B1;\r\n          tokens[_token].voteStatus[msg.sender].dislike = true;\r\n          if (tokens[_token].voteStatus[msg.sender].like) {\r\n            tokens[_token].likesCount = tokens[_token].likesCount-1;\r\n            tokens[_token].voteStatus[msg.sender].like = false;\r\n          }\t   \r\n        } else {\r\n\t      tokens[_token].dislikesCount = tokens[_token].dislikesCount-1;\r\n          tokens[_token].voteStatus[msg.sender].dislike = false;\r\n        }\t   \r\n\t}\t\t\r\n\t\r\n\tfunction changeRegisterFee(uint _registerFee) public {\r\n\t   require(msg.sender == owner);\r\n\t   registerFee = _registerFee;\t  \r\n\t}\t\r\n\r\n\tfunction changeOpenMarketFee(uint _openMarketFee) public {\r\n\t   require(msg.sender == owner,\u0022Access denied\u0022);\r\n\t   openMarketFee = _openMarketFee;\r\n\t}\r\n\r\n\tfunction changeActionFee(uint _actionFee) public {\r\n\t   require(msg.sender == owner,\u0022Access denied\u0022);\r\n\t   actionFee = _actionFee;\r\n\t}\r\n\r\n    function withdraw(uint amount) public {\r\n\t    require(owner == msg.sender,\u0022Only for owner\u0022);\r\n        require(amount\u002BgarbageFees \u003C= address(this).balance,\u0022No funds\u0022);\t\t\r\n        if (owner.send(amount)) {\r\n           emit ctrWithdraw(owner, amount);     \r\n        }  \r\n    }\r\n\r\n    function cancelOrder(uint _orderId, address _token, address _tokenPair) public payable {\r\n       require(tokens[_token].markets[_tokenPair].ordersCount \u003E 0, \u0022bof orders\u0022); \r\n       uint orderAmount = tokens[_token].markets[_tokenPair].orders[_orderId].amount;\r\n       erc20 tokenMaker = erc20(tokens[_token].tokenBase);\r\n       if (tokens[_token].markets[_tokenPair].orders[_orderId].orderOwner != msg.sender) {\r\n          require(\r\n                   (tokenMaker.allowance(tokens[_token].markets[_tokenPair].orders[_orderId].orderOwner, address(this)) \u003C orderAmount) ||\r\n                   (tokenMaker.balanceOf(tokens[_token].markets[_tokenPair].orders[_orderId].orderOwner) \u003C orderAmount), \u0022Only garbage can be removed by you here\u0022\r\n          );\t\r\n       }             \r\n       uint top = tokens[_token].markets[_tokenPair].ordersCount;\r\n       tokens[_token].markets[_tokenPair].ordersCount = tokens[_token].markets[_tokenPair].ordersCount-1;      \r\n       if (tokens[_token].markets[_tokenPair].orders[top].amount \u003E 0) {\r\n           tokens[_token].markets[_tokenPair].orders[_orderId] = tokens[_token].markets[_tokenPair].orders[top];       \r\n           tokens[_token].markets[_tokenPair].orders[_orderId].orderId = _orderId;\r\n           tokens[_token].markets[_tokenPair].orders[top].amount = 0;           \r\n       }       \r\n\t   emit orderCanceled(_token, _tokenPair, _orderId);\r\n       if (garbageFees \u003E= actionFee) {\r\n          garbageFees -= actionFee;\r\n          if (msg.sender.send(actionFee)) {\r\n             emit ctrWithdraw(msg.sender, actionFee);     \r\n          }\r\n       }    \r\n    } \r\n\r\n    function fillOrder(uint _orderID, address _token, address _tokenPair, uint _rate, uint _amountFill) public payable {             \r\n       require(tokens[_token].markets[_tokenPair].orders[_orderID].orderId \u003E 0,\u0022Not placed\u0022); \r\n       require((_amountFill \u003E 0) \u0026\u0026 (_amountFill \u003C= 10**36),\u0022Fill out of range\u0022);\r\n       require(_rate == tokens[_token].markets[_tokenPair].orders[_orderID].rate,\u0022Rate error\u0022);\r\n       erc20 tokenMaker = erc20(tokens[_token].tokenBase);\r\n       erc20 tokenTaker = erc20(tokens[_token].markets[_tokenPair].tokenPair);      \t\r\n\t   uint amount =  (((_amountFill*tokens[_token].markets[_tokenPair].orders[_orderID].rate)/(10**tokens[_tokenPair].decimals))*(10**tokens[_token].decimals))/(10**ratePlaces);\r\n       require(tokenTaker.allowance(msg.sender, address(this)) \u003E= _amountFill, \u0022Verify taker approval\u0022);\r\n       require(tokenTaker.balanceOf(msg.sender) \u003E= _amountFill, \u0022Verify taker balance\u0022);\t\r\n       require(tokenMaker.allowance(tokens[_token].markets[_tokenPair].orders[_orderID].orderOwner, address(this)) \u003E= amount, \u0022Verify maker approval\u0022);\r\n       require(tokenMaker.balanceOf(tokens[_token].markets[_tokenPair].orders[_orderID].orderOwner) \u003E= amount, \u0022Verify maker balance\u0022);\t\r\n       require(tokens[_token].markets[_tokenPair].orders[_orderID].amount \u003E= amount,\u0022Amount error\u0022); \r\n\t   tokens[_token].markets[_tokenPair].orders[_orderID].amount=tokens[_token].markets[_tokenPair].orders[_orderID].amount-amount;\t         \r\n       tokenMaker.transferFrom(tokens[_token].markets[_tokenPair].orders[_orderID].orderOwner, msg.sender,amount);\r\n       tokenTaker.transferFrom(msg.sender,tokens[_token].markets[_tokenPair].orders[_orderID].orderOwner,_amountFill);\r\n       tokens[_token].markets[_tokenPair].donesCount = tokens[_token].markets[_tokenPair].donesCount\u002B1;\r\n\t   tokens[_token].markets[_tokenPair].dones[tokens[_token].markets[_tokenPair].donesCount].orderId = _orderID;\r\n       tokens[_token].markets[_tokenPair].dones[tokens[_token].markets[_tokenPair].donesCount].fillOwner = msg.sender;\r\n       tokens[_token].markets[_tokenPair].dones[tokens[_token].markets[_tokenPair].donesCount].fillAmount = _amountFill;\r\n       tokens[_token].markets[_tokenPair].dones[tokens[_token].markets[_tokenPair].donesCount].fillDate = now;\r\n       tokens[_token].markets[_tokenPair].dones[tokens[_token].markets[_tokenPair].donesCount].rate = _rate;\r\n\t   emit orderDone(_token, _tokenPair, _orderID, tokens[_token].markets[_tokenPair].donesCount);\r\n       if (tokens[_token].markets[_tokenPair].orders[_orderID].amount*(10**(18-tokens[_token].decimals)) \u003C minQtd) {\r\n          require(tokens[_token].markets[_tokenPair].ordersCount \u003E 0, \u0022bof orders\u0022);\r\n          uint top = tokens[_token].markets[_tokenPair].ordersCount;\r\n          tokens[_token].markets[_tokenPair].ordersCount = tokens[_token].markets[_tokenPair].ordersCount-1;\r\n          if (garbageFees \u003E= actionFee) {\r\n             garbageFees -= actionFee;\r\n             if (address(tokens[_token].markets[_tokenPair].orders[_orderID].orderOwner).send(actionFee)) {\r\n                emit ctrWithdraw(address(tokens[_token].markets[_tokenPair].orders[_orderID].orderOwner), actionFee);     \r\n             }\r\n          }          \r\n          if (tokens[_token].markets[_tokenPair].orders[top].amount \u003E 0) {\r\n              tokens[_token].markets[_tokenPair].orders[_orderID] = tokens[_token].markets[_tokenPair].orders[top];          \r\n              tokens[_token].markets[_tokenPair].orders[_orderID].orderId = _orderID;\r\n              tokens[_token].markets[_tokenPair].orders[top].amount = 0;   \r\n          }          \r\n\t      emit orderRemovedLowBalance(_token, _tokenPair, _orderID);\r\n       }\r\n    }  \r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022registerFee\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022name\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_token\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022registerToken\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022actionFee\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_token\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_tokenPair\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_rate\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_amount\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_sell\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022name\u0022:\u0022createOrder\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022garbageFees\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022indexCount\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_token\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_tokenPair\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022createMarket\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_actionFee\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022changeActionFee\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022withdraw\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_base\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_pairAddr\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022getPairByAddr\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022_ordersCount\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_donesCount\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_exists\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022index\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_base\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_pair\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_doneIndex\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022getDones\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022_orderId\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_fillOwner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_fillAmount\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_fillDate\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_rate\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_base\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_pairIndex\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022getPairByIndex\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022_tokenPair\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_ordersCount\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_donesCount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_addr\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022getVoteStatus\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022_like\u0022,\u0022type\u0022:\u0022bool\u0022},{\u0022name\u0022:\u0022_dislike\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_token\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022tokenDislike\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_index\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022getTokenByIndex\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022_tokenBase\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_name\u0022,\u0022type\u0022:\u0022string\u0022},{\u0022name\u0022:\u0022_symbol\u0022,\u0022type\u0022:\u0022string\u0022},{\u0022name\u0022:\u0022_decimals\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_marketsCount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_addr\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022getTokenByAddr\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022_name\u0022,\u0022type\u0022:\u0022string\u0022},{\u0022name\u0022:\u0022_symbol\u0022,\u0022type\u0022:\u0022string\u0022},{\u0022name\u0022:\u0022_decimals\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_marketsCount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_token\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022tokenLike\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022ratePlaces\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_registerFee\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022changeRegisterFee\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022symbol\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_orderID\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_token\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_tokenPair\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_rate\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_amountFill\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022fillOrder\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022changeOwner\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_orderId\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_token\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_tokenPair\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022cancelOrder\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_openMarketFee\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022changeOpenMarketFee\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022tokens\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022tokenBase\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022name\u0022,\u0022type\u0022:\u0022string\u0022},{\u0022name\u0022:\u0022symbol\u0022,\u0022type\u0022:\u0022string\u0022},{\u0022name\u0022:\u0022decimals\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022likesCount\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022dislikesCount\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022marketsCount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_index\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022getLikesByIndex\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022tokenBase\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_likesCount\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_dislikesCount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022openMarketFee\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_base\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_pair\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_orderIndex\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022getOrders\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022_orderId\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_rate\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_amount\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_sell\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022comment\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022exists\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_addr\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022getLikesByAddr\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022_likesCount\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_dislikesCount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022fallback\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022token\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022tokenPair\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022ownerId\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022orderId\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022orderPlaced\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022token\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022tokenPair\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022orderId\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022doneId\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022orderDone\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022token\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022tokenPair\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022orderId\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022orderCanceled\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022token\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022tokenPair\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022orderId\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022orderRemovedLowBalance\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022wallet\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022ctrWithdraw\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"againstTokenRegister","CompilerVersion":"v0.4.24\u002Bcommit.e67f0147","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://f0e10f83352811f25d0b44f511c8665d4e5f5ac2f551551bd670baadb909c052"}]