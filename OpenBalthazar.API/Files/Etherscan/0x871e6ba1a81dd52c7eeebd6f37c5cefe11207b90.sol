[{"SourceCode":"pragma solidity 0.5.9;\r\n\r\n/* SOLIDITY RETAINER LETTER FOR LEGAL ENGINEERING\r\n\r\nDEAR MSG.SENDER(S):\r\n\r\nUpon calling the \u0022payRetainerFee\u0022 function in the ascribed *uint256* public fee amount (\u039E) (\u0022Retainer Fee\u0022)\r\nand providing an e-mail or similar communication address for your contact as the *string* value therein, \r\na member of Open, ESQ LLC (\u0022OE\u0022), shall contact you thereby within three (3) business days\r\nand arrange a consultation to upload one (1) legal agreement in OpenLaw.io markup,\r\nnot to exceed twenty (20) pages, and deploy up to three (3) related Solidity scripts on Ethereum, \r\nwith such retained OE services to be completed within five (5) business days,\r\nor a full refund (\u039E) shall be promptly returned to msg.sender(s). \r\n\r\nOE may transfer the benefit of Retainer Fees by calling the \u0022assignBeneficiary\u0022 function.\r\n\r\nOE may revise the Retainer Fee amount by calling the \u0022updateFee\u0022 function; \r\nfor the avoidance of doubt, such state changes shall not affect OE services already retained hereby.\r\n\r\nThis Solidity Retainer Letter is governed by New York law; \r\nrelated disputes shall be resolved by arbitration in Kings County, New York.\r\n\r\nOE, info@openesq.tech\r\n*/\r\n\r\ncontract Retainer {\r\n    \r\n    address payable public beneficiary; // address to receive retainer fees\r\n    uint256 public fee; // wei amount of retainer fee\r\n    \r\n    address private admin;\r\n    \r\n    event Retained(address indexed, string request); // triggered on payRetainerFee success\r\n    \r\n    modifier onlyAdmin() // restrict functions to beneficiary address\r\n    {\r\n        require(\r\n            msg.sender == admin,\r\n            \u0022Sender not authorized.\u0022\r\n        );\r\n        _;\r\n    }\r\n    \r\n    constructor(uint256 _fee) public { // initializes contract with retainer fee amount\r\n        beneficiary = msg.sender;\r\n        admin = msg.sender;\r\n        fee = _fee;\r\n    }\r\n\r\n    function payRetainerFee(string memory request) public payable { // allows public to pay retainer fee\r\n        require(msg.value == fee);\r\n        beneficiary.transfer(msg.value);\r\n        emit Retained(msg.sender, request);\r\n    }\r\n    \r\n    // Beneficiary can manage retainer structure \r\n    \r\n    function updateFee(uint256 newFee) public onlyAdmin { // changes fee amount for retainers\r\n        fee = newFee;\r\n    }\r\n    \r\n    function assignBeneficiary(address payable newBeneficiary) public onlyAdmin { // changes beneficiary address\r\n        beneficiary = newBeneficiary;\r\n    }\r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022beneficiary\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022request\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022name\u0022:\u0022payRetainerFee\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022newFee\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022updateFee\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022newBeneficiary\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022assignBeneficiary\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022fee\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[{\u0022name\u0022:\u0022_fee\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022request\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022name\u0022:\u0022Retained\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"Retainer","CompilerVersion":"v0.5.9\u002Bcommit.e560f70d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000000000000000000000000000000214e8348c4f0000","Library":"","SwarmSource":"bzzr://6215e1691f13a0fa0e94af77a2bcccc5cde4ecbbdb31fdc8bf3c132ffd390f9c"}]