[{"SourceCode":"pragma solidity ^0.5.16;\r\ncontract SmartContactForUser {\r\n    event PersonRemoval(address indexed removed, address indexed attachedTo, Role indexed role);\r\n    event HolderAdd(address indexed added);\r\n    mapping(address =\u003E mapping(address =\u003E uint256)) _allowed; //mapping of accounts allowed to withdraw from a given account and their balances\r\n    address[] _holders; //all token holders\r\n    address _owner;\r\n    enum Role {Holder, Appointee, Owner}\r\n    constructor() public payable {\r\n        _holders.push(msg.sender);\r\n        _owner = msg.sender;\r\n    }\r\n    function holderExist(address accountToCheck) public view returns (bool){\r\n        for(uint i = 0; i\u003C_holders.length; i\u002B\u002B){\r\n            if(_holders[i] == accountToCheck)\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    function signContact(address accountToAdd) public returns (bool){\r\n        require(!holderExist(accountToAdd), \u0022Contact already exists.\u0022);\r\n        require(checkHolderPermission(msg.sender), \u0022Not authorized\u0022);\r\n        _holders.push(accountToAdd);\r\n        assert(holderExist(accountToAdd));\r\n        emit HolderAdd(accountToAdd);\r\n        return true;\r\n    }\r\n    /*Only contract\u0027s owner can remove a holder.\r\n    */\r\n    function removeContact(address toRemove) public returns (bool){\r\n        require(checkOwnerPermission(msg.sender), \u0022Not authorized.\u0022);\r\n        require(holderExist(toRemove), \u0022Contact not exist.\u0022);\r\n        uint index;\r\n        for(uint i = 0; i\u003C_holders.length; i\u002B\u002B){\r\n            if(_holders[i] == toRemove){\r\n                index = i;\r\n            }\r\n        }\r\n        uint256 arrlen = _holders.length;\r\n        delete _holders[index];\r\n        _holders[index] = _holders[arrlen - 1];\r\n        _holders.length--;\r\n        \r\n        emit PersonRemoval(toRemove, address(0), Role.Holder);\r\n        return true;\r\n    }\r\n    function checkHolderPermission(address toCheck) public view returns (bool){\r\n        return (holderExist(toCheck));\r\n        return true;\r\n    }\r\n    function checkOwnerPermission(address toCheck) public view returns (bool){\r\n        return (toCheck == _owner);\r\n    }\r\n    function checkAppointeePermission(address toCheck, address mapToOwner) public view returns (bool){\r\n        return (_allowed[mapToOwner][toCheck] != 0);\r\n    }\r\n    function getOwner() public view returns(address owner){\r\n        return _owner;\r\n    }\r\n}","ABI":"[{\u0022inputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022added\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022HolderAdd\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022removed\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022attachedTo\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022enum SmartContactForUser.Role\u0022,\u0022name\u0022:\u0022role\u0022,\u0022type\u0022:\u0022uint8\u0022}],\u0022name\u0022:\u0022PersonRemoval\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022toCheck\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022mapToOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022checkAppointeePermission\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022toCheck\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022checkHolderPermission\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022toCheck\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022checkOwnerPermission\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getOwner\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022owner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022accountToCheck\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022holderExist\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022toRemove\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022removeContact\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022accountToAdd\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022signContact\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022}]","ContractName":"SmartContactForUser","CompilerVersion":"v0.5.16\u002Bcommit.9c3226ce","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://ce0ea0ed414ab5ad24bba7d4ce98b1b914dc0c7d313bdffdb43cfeef1b03d520"}]