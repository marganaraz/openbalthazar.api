[{"SourceCode":"pragma solidity ^0.5.10;\r\n\r\ncontract MolochLike {\r\n    function updateDelegateKey(address) external;\r\n    function submitVote(uint256, uint8) external;\r\n    function submitProposal(address, uint256, uint256, string calldata) external;\r\n    function getProposalQueueLength() external view returns (uint256);\r\n    function getMemberProposalVote(address, uint256) external view returns (uint256);\r\n    function proposalDeposit() external view returns (uint256);\r\n    function periodDuration() external view returns (uint256);\r\n    function approvedToken() external view returns (address);\r\n}\r\n\r\ncontract GemLike {\r\n    function approve(address, uint256) external returns (bool);\r\n    function transfer(address, uint256) external returns (bool);\r\n    function balanceOf(address) external view returns (uint256);\r\n}\r\n\r\ncontract SelloutDao {\r\n    address    public owner;\r\n    MolochLike public dao;\r\n    GemLike    public gem;\r\n    address    public hat;\r\n    bool       public sold;\r\n    uint256    public prop;\r\n    bool       public voted;\r\n\r\n    modifier auth() {\r\n        require(msg.sender == owner, \u0022nope\u0022);\r\n        _;\r\n    }\r\n\r\n    modifier only_hat() {\r\n        require(msg.sender == hat, \u0022nope\u0022);\r\n        _;\r\n    }\r\n\r\n    constructor(MolochLike dao_) public {\r\n        owner = msg.sender;\r\n        dao = dao_;\r\n        gem = GemLike(dao.approvedToken());\r\n    }\r\n\r\n    function () external payable {\r\n        buy();\r\n    }\r\n\r\n    function buy() public payable {\r\n        require(!sold, \u0022already sold\u0022);\r\n        require(msg.value \u003E= 0.5 ether, \u0022need to send at least 0.5 eth\u0022);\r\n        sold = true;\r\n        hat = msg.sender;\r\n    }\r\n\r\n    function make(address who, uint256 tribute, uint256 shares, string calldata text) external only_hat {\r\n        require(prop == 0, \u0022can only create one proposal\u0022);\r\n        gem.approve(address(dao), dao.proposalDeposit());\r\n        dao.submitProposal(who, tribute, shares, text);\r\n        prop = dao.getProposalQueueLength() - 1;\r\n    }\r\n\r\n    function vote(uint8 val) external {\r\n        dao.submitVote(prop, val);\r\n    }\r\n\r\n    function take() external auth {\r\n        msg.sender.transfer(address(this).balance);\r\n        gem.transfer(msg.sender, gem.balanceOf(address(this)));\r\n    }\r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022sold\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022take\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022voted\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022dao\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022gem\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022owner\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022buy\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022who\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022tribute\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022shares\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022text\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022name\u0022:\u0022make\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022val\u0022,\u0022type\u0022:\u0022uint8\u0022}],\u0022name\u0022:\u0022vote\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022prop\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022hat\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[{\u0022name\u0022:\u0022dao_\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022fallback\u0022}]","ContractName":"SelloutDao","CompilerVersion":"v0.5.10\u002Bcommit.5a6ea5b1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"0000000000000000000000001fd169a4f5c59acf79d0fd5d91d1201ef1bce9f1","Library":"","SwarmSource":"bzzr://a3baab7155cc2267fb342e1dfaa338607f6407211e6f95200122f806dd0135dd"}]