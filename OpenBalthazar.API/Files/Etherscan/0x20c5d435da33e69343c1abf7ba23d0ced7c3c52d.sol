[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\ncontract CrowdsaleToken {\r\n    /* Public variables of the token */\r\n    string public constant name = \u0027Rocketclock\u0027;\r\n    string public constant symbol = \u0027RCLK\u0027;\r\n    //uint256 public constant decimals = 6;\r\n    address payable owner;\r\n    address payable contractaddress;\r\n    uint256 public constant totalSupply = 1000;\r\n\r\n    /* This creates an array with all balances */\r\n    mapping (address =\u003E uint256) public balanceOf;\r\n    //mapping (address =\u003E mapping (address =\u003E uint256)) public allowance;\r\n\r\n    /* This generates a public event on the blockchain that will notify clients */\r\n    event Transfer(address payable indexed from, address payable indexed to, uint256 value);\r\n    //event LogWithdrawal(address receiver, uint amount);\r\n\r\n    modifier onlyOwner() {\r\n        // Only owner is allowed to do this action.\r\n        if (msg.sender != owner) {\r\n            revert();\r\n        }\r\n        _;\r\n    }\r\n\r\n    /* Initializes contract with initial supply tokens to the creator of the contract */\r\n    constructor() public{\r\n        contractaddress = address(this);\r\n        owner = msg.sender;\r\n        balanceOf[owner] = totalSupply;\r\n        //balanceOf[contractaddress] = totalSupply;\r\n\r\n    }\r\n\r\n    /*ERC20*/\r\n    /* Internal transfer, only can be called by this contract */\r\n    function _transfer(address payable _from, address payable _to, uint256 _value) internal {\r\n    //function _transfer(address _from, address _to, uint _value) public {\r\n        require (_to != address(0x0));                               // Prevent transfer to 0x0 address. Use burn() instead\r\n        require (balanceOf[_from] \u003E _value);                // Check if the sender has enough\r\n        require (balanceOf[_to] \u002B _value \u003E balanceOf[_to]); // Check for overflows\r\n        balanceOf[_from] -= _value;                         // Subtract from the sender\r\n        balanceOf[_to] \u002B= _value;                            // Add the same to the recipient\r\n        emit Transfer(_from, _to, _value);\r\n    }\r\n\r\n    /// @notice Send \u0060_value\u0060 tokens to \u0060_to\u0060 from your account\r\n    /// @param _to The address of the recipient\r\n    /// @param _value the amount to send\r\n    function transfer(address payable _to, uint256 _value) public returns (bool success) {\r\n\r\n        _transfer(msg.sender, _to, _value);\r\n        return true;\r\n\r\n    }\r\n\r\n    /*fallback function*/\r\n    function () external payable onlyOwner{}\r\n\r\n\r\n    function getBalance(address addr) public view returns(uint256) {\r\n  \t\treturn balanceOf[addr];\r\n  \t}\r\n\r\n    function getEtherBalance() public view returns(uint256) {\r\n  \t\t//return contract ether balance;\r\n      return address(this).balance;\r\n  \t}\r\n\r\n    function getOwner() public view returns(address) {\r\n      return owner;\r\n    }\r\n\r\n}","ABI":"[{\u0022inputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Transfer\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022fallback\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022balanceOf\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022addr\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022getBalance\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getEtherBalance\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getOwner\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022name\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022string\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022symbol\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022string\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022totalSupply\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address payable\u0022,\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transfer\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022}]","ContractName":"CrowdsaleToken","CompilerVersion":"v0.5.13\u002Bcommit.5b0b510c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://2604df05f22c76186087e7aac5202c38fe58f12863c5087f66307430065a222c"}]