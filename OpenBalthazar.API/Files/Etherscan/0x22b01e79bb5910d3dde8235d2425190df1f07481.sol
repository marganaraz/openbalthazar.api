[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\n\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\r\n  /**\r\n  * @dev Multiplies two numbers, throws on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two numbers, truncating the quotient.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b \u003E 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c \u002B a % b); // There is no case in which this doesn\u0027t hold\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b \u003C= a);\r\n    return a - b;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two numbers, throws on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a \u002B b;\r\n    assert(c \u003E= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n\r\n\r\n/*\r\nPAYSPEC: Generic global invoicing contract\r\n\r\n\r\n*/\r\n\r\ncontract ERC20Interface {\r\n    function totalSupply() public view returns (uint);\r\n    function balanceOf(address tokenOwner) public view returns (uint balance);\r\n    function allowance(address tokenOwner, address spender) public view returns (uint remaining);\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\n\r\ncontract ApproveAndCallFallBack {\r\n    function receiveApproval(address from, uint256 tokens, address token, bytes memory data) public;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\ncontract PaySpec  {\r\n\r\n   using SafeMath for uint;\r\n\r\n\r\n   mapping(bytes32 =\u003E Invoice) invoices;\r\n\r\n\r\n\r\n  event CreatedInvoice(bytes32 uuid);\r\n  event PaidInvoice(bytes32 uuid, address from);\r\n\r\n\r\n  struct Invoice {\r\n    bytes32 uuid;\r\n    string description;\r\n    uint256 refNumber;\r\n\r\n\r\n    address token;\r\n    uint256 amountDue;\r\n    address payTo;\r\n    uint256 ethBlockCreatedAt;\r\n\r\n\r\n    address paidBy;\r\n    uint256 amountPaid;\r\n    uint256 ethBlockPaidAt;\r\n\r\n\r\n    uint256 ethBlockExpiresAt;\r\n\r\n  }\r\n\r\n\r\n\r\n  constructor(  ) public {\r\n\r\n\r\n  }\r\n\r\n\r\n  //do not allow ether to enter\r\n  function() external    payable {\r\n      revert();\r\n  }\r\n\r\n\r\n  function getContractVersion( ) public pure returns (uint)\r\n  {\r\n      return 1;\r\n  }\r\n\r\n\r\n  function createInvoice(uint256 refNumber, string memory description,  address token, uint256 amountDue, address payTo, uint256 ethBlockExpiresAt ) public returns (bytes32 uuid) {\r\n      return _createInvoiceInternal(msg.sender, refNumber,description,token,amountDue,payTo,ethBlockExpiresAt);\r\n  }\r\n\r\n  //why doesnt this work ?\r\n  function createAndPayInvoice(uint256 refNumber, string memory description,  address token, uint256 amountDue, address payTo, uint256 ethBlockExpiresAt ) public returns (bool) {\r\n      bytes32 invoiceUUID =  _createInvoiceInternal(msg.sender, refNumber,description,token,amountDue,payTo,ethBlockExpiresAt) ;\r\n\r\n      require( ERC20Interface(  invoices[invoiceUUID].token ).transferFrom(msg.sender, address(this),  invoices[invoiceUUID].amountDue )   );\r\n\r\n      return _payInvoiceInternal( invoiceUUID, msg.sender);\r\n  }\r\n\r\n   function _createInvoiceInternal( address from, uint256 refNumber, string memory description,  address token, uint256 amountDue, address payTo, uint256 ethBlockExpiresAt ) private returns (bytes32 uuid) {\r\n\r\n      uint256 ethBlockCreatedAt = block.number;\r\n\r\n      bytes32 newuuid = keccak256( abi.encodePacked(from, refNumber, description,  token, amountDue, payTo ) );\r\n\r\n      require( invoices[newuuid].uuid == 0 );  //make sure you do not overwrite invoices\r\n\r\n      invoices[newuuid] = Invoice({\r\n       uuid: newuuid,\r\n       description: description,\r\n       refNumber: refNumber,\r\n       token: token,\r\n       amountDue: amountDue,\r\n       payTo: payTo,\r\n       ethBlockCreatedAt: ethBlockCreatedAt,\r\n       paidBy: address(0),\r\n       amountPaid: 0,\r\n       ethBlockPaidAt: 0,\r\n       ethBlockExpiresAt: ethBlockExpiresAt\r\n\r\n      });\r\n\r\n\r\n       emit CreatedInvoice(newuuid);\r\n\r\n       return newuuid;\r\n   }\r\n\r\n   function payInvoice(bytes32 invoiceUUID) public returns (bool)\r\n   {\r\n     //transfer the tokens into escrow into this contract to stage for paying the invoice\r\n     require( ERC20Interface(  invoices[invoiceUUID].token ).transferFrom(msg.sender, address(this),  invoices[invoiceUUID].amountDue )   );\r\n\r\n     return _payInvoiceInternal( invoiceUUID, msg.sender);\r\n\r\n\r\n   }\r\n\r\n   function _payInvoiceInternal( bytes32 invoiceUUID, address from ) private returns (bool) {\r\n\r\n       require( invoices[invoiceUUID].uuid == invoiceUUID ); //make sure invoice exists\r\n       require( invoiceWasPaid(invoiceUUID) == false );\r\n       require( invoiceHasExpired(invoiceUUID) == false);\r\n\r\n       //Transfer the tokens. Always transfer from this contracts escrow (not wildcard) so tokens only approved to this universal contract cannot be spent by others.\r\n       require( ERC20Interface( invoices[invoiceUUID].token  ).transfer(  invoices[invoiceUUID].payTo, invoices[invoiceUUID].amountDue   ) );\r\n\r\n       invoices[invoiceUUID].amountPaid = invoices[invoiceUUID].amountDue;\r\n\r\n       invoices[invoiceUUID].paidBy = from;\r\n\r\n       invoices[invoiceUUID].ethBlockPaidAt = block.number;\r\n\r\n\r\n\r\n       emit PaidInvoice(invoiceUUID, from);\r\n\r\n       return true;\r\n\r\n\r\n   }\r\n\r\n   function getDescription( bytes32 invoiceUUID ) public view returns ( string  memory )\r\n   {\r\n       return invoices[invoiceUUID].description;\r\n   }\r\n\r\n   function getRefNumber( bytes32 invoiceUUID ) public view returns (uint)\r\n   {\r\n       return invoices[invoiceUUID].refNumber;\r\n   }\r\n\r\n   function getEthBlockExpiresAt( bytes32 invoiceUUID ) public view returns (uint)\r\n   {\r\n       return invoices[invoiceUUID].ethBlockExpiresAt;\r\n   }\r\n\r\n   function getTokenAddress( bytes32 invoiceUUID ) public view returns (address)\r\n   {\r\n       return invoices[invoiceUUID].token;\r\n   }\r\n\r\n   function getRecipientAddress( bytes32 invoiceUUID ) public view returns (address)\r\n   {\r\n       return invoices[invoiceUUID].payTo;\r\n   }\r\n\r\n   function invoiceExists ( bytes32 invoiceUUID ) public view returns (bool)\r\n   {\r\n     return invoices[invoiceUUID].uuid == invoiceUUID;\r\n   }\r\n\r\n\r\n   function getAmountDue( bytes32 invoiceUUID ) public view returns (uint)\r\n   {\r\n       return invoices[invoiceUUID].amountDue;\r\n   }\r\n\r\n   function getAmountPaid( bytes32 invoiceUUID ) public view returns (uint)\r\n   {\r\n       return invoices[invoiceUUID].amountPaid;\r\n   }\r\n\r\n   function getEthBlockPaidAt( bytes32 invoiceUUID ) public view returns (uint)\r\n   {\r\n       return invoices[invoiceUUID].ethBlockPaidAt;\r\n   }\r\n\r\n\r\n   function invoiceWasPaid( bytes32 invoiceUUID ) public view returns (bool)\r\n   {\r\n       return getEthBlockPaidAt(invoiceUUID) \u003E 0;\r\n   }\r\n\r\n\r\n   function invoiceHasExpired( bytes32 invoiceUUID ) public view returns (bool)\r\n   {\r\n       return (getEthBlockExpiresAt(invoiceUUID) != 0 \u0026\u0026 block.number \u003E= getEthBlockExpiresAt(invoiceUUID));\r\n   }\r\n\r\n\r\n\r\n   /*\r\n     Receive approval from ApproveAndCall() to pay invoice.  The first 32 bytes of the data array are used for the invoice UUID bytes32.\r\n\r\n   */\r\n     function receiveApproval(address from, uint256 tokens, address token, bytes memory data) public returns (bool) {\r\n\r\n        //can only be called by the token contract\r\n        require(msg.sender == token);\r\n\r\n        //transfer the tokens into escrow into this contract to stage for paying the invoice\r\n        require( ERC20Interface(token).transferFrom(from, address(this), tokens)   );\r\n\r\n        require(  _payInvoiceInternal(bytesToBytes32(data,0), from)  );\r\n\r\n        return true;\r\n\r\n     }\r\n\r\n    function bytesToBytes32(bytes memory b, uint offset) private pure returns (bytes32) {\r\n      bytes32 out;\r\n\r\n      for (uint i = 0; i \u003C 32; i\u002B\u002B) {\r\n        out |= bytes32(b[offset \u002B i] \u0026 0xFF) \u003E\u003E (i * 8);\r\n      }\r\n      return out;\r\n    }\r\n\r\n\r\n}","ABI":"[{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022refNumber\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022description\u0022,\u0022type\u0022:\u0022string\u0022},{\u0022name\u0022:\u0022token\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022amountDue\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022payTo\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022ethBlockExpiresAt\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022createAndPayInvoice\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022invoiceUUID\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022getAmountDue\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022invoiceUUID\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022invoiceHasExpired\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022invoiceUUID\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022invoiceExists\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022invoiceUUID\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022payInvoice\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022refNumber\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022description\u0022,\u0022type\u0022:\u0022string\u0022},{\u0022name\u0022:\u0022token\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022amountDue\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022payTo\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022ethBlockExpiresAt\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022createInvoice\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022uuid\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022invoiceUUID\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022getAmountPaid\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022invoiceUUID\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022getRefNumber\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getContractVersion\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022pure\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022tokens\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022token\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022data\u0022,\u0022type\u0022:\u0022bytes\u0022}],\u0022name\u0022:\u0022receiveApproval\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022invoiceUUID\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022getEthBlockPaidAt\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022invoiceUUID\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022getTokenAddress\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022invoiceUUID\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022getDescription\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022invoiceUUID\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022invoiceWasPaid\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022invoiceUUID\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022getEthBlockExpiresAt\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022invoiceUUID\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022getRecipientAddress\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022fallback\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022uuid\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022CreatedInvoice\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022uuid\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022from\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022PaidInvoice\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"PaySpec","CompilerVersion":"v0.5.0\u002Bcommit.1d4f565a","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://3e25a054d19e7af783b3b0f1eadc2c9300be120271b46dbb812710ad62208410"}]