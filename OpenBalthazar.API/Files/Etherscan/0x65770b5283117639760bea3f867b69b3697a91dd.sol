[{"SourceCode":"# Modified from: https://github.com/ethereum/vyper/blob/master/examples/tokens/ERC721.vy\r\n\r\ncontract ERC721Receiver:\r\n    def onERC721Received(\r\n        _operator: address,\r\n        _from: address,\r\n        _tokenId: uint256,\r\n        _data: bytes[1024]\r\n    ) -\u003E bytes32: modifying\r\n\r\ncontract URI:\r\n    def tokenURI(_tokenId: uint256) -\u003E string[128]: constant\r\n\r\ncontract Socks:\r\n    def totalSupply() -\u003E uint256: constant\r\n\r\nTransfer: event({_from: indexed(address), _to: indexed(address), _tokenId: indexed(uint256)})\r\nApproval: event({_owner: indexed(address), _approved: indexed(address), _tokenId: indexed(uint256)})\r\nApprovalForAll: event({_owner: indexed(address), _operator: indexed(address), _approved: bool})\r\n\r\nname: public(string[32])\r\nsymbol: public(string[32])\r\ntotalSupply: public(uint256)\r\n\r\nminter: public(address)\r\nsocks: public(Socks)\r\nnewURI: public(address)\r\n\r\nownerOf: public(map(uint256, address))                     # map(tokenId, owner)\r\nbalanceOf: public(map(address, uint256))                   # map(owner, balance)\r\ngetApproved: public(map(uint256, address))                 # map(tokenId, approvedSpender)\r\nisApprovedForAll: public(map(address, map(address, bool))) # map(owner, map(operator, bool))\r\nsupportsInterface: public(map(bytes32, bool))              # map(interfaceId, bool)\r\nownerIndexToTokenId: map(address, map(uint256, uint256))   # map(owner, map(index, tokenId))\r\ntokenIdToIndex: map(uint256, uint256)                      # map(tokenId, index)\r\n\r\nERC165_INTERFACE_ID: constant(bytes32) = 0x0000000000000000000000000000000000000000000000000000000001ffc9a7\r\nERC721_ENUMERABLE_INTERFACE_ID: constant(bytes32) = 0x00000000000000000000000000000000000000000000000000000000780e9d63\r\nERC721_METADATA_INTERFACE_ID: constant(bytes32) = 0x000000000000000000000000000000000000000000000000000000005b5e139f\r\nERC721_INTERFACE_ID: constant(bytes32) = 0x0000000000000000000000000000000000000000000000000000000080ac58cd\r\n\r\n\r\n@public\r\ndef __init__():\r\n    self.name = \u0027Unisocks\u0027\r\n    self.symbol = \u0027S0CKS\u0027\r\n    self.minter = msg.sender\r\n    self.socks = Socks(0x23B608675a2B2fB1890d3ABBd85c5775c51691d5)\r\n    self.supportsInterface[ERC165_INTERFACE_ID] = True\r\n    self.supportsInterface[ERC721_ENUMERABLE_INTERFACE_ID] = True\r\n    self.supportsInterface[ERC721_METADATA_INTERFACE_ID] = True\r\n    self.supportsInterface[ERC721_INTERFACE_ID] = True\r\n\r\n\r\n@public\r\n@constant\r\ndef tokenURI(_tokenId: uint256) -\u003E string[128]:\r\n    if (self.newURI == ZERO_ADDRESS):\r\n        return \u0027https://cloudflare-ipfs.com/ipfs/QmNZEeAN1zk6hLoHHREVkZ7PoPYaoH7n6LR6w9QAcEc29h\u0027\r\n    else:\r\n        return URI(self.newURI).tokenURI(_tokenId)\r\n\r\n\r\n# Token index is same as ID and can\u0027t change\r\n@public\r\n@constant\r\ndef tokenByIndex(_index: uint256) -\u003E uint256:\r\n    assert _index \u003C self.totalSupply\r\n    return _index\r\n\r\n@public\r\n@constant\r\ndef tokenOfOwnerByIndex(_owner: address, _index: uint256) -\u003E uint256:\r\n    assert _index \u003C self.balanceOf[_owner]\r\n    return self.ownerIndexToTokenId[_owner][_index]\r\n\r\n@private\r\ndef _transferFrom(_from: address, _to: address, _tokenId: uint256, _sender: address):\r\n    _owner: address = self.ownerOf[_tokenId]\r\n    # Check requirements\r\n    assert _owner == _from and _to != ZERO_ADDRESS\r\n    _senderIsOwner: bool = _sender == _owner\r\n    _senderIsApproved: bool = _sender == self.getApproved[_tokenId]\r\n    _senderIsApprovedForAll: bool = self.isApprovedForAll[_owner][_sender]\r\n    assert _senderIsOwner or _senderIsApproved or _senderIsApprovedForAll\r\n    # Update ownerIndexToTokenId for _from\r\n    _highestIndexFrom: uint256 = self.balanceOf[_from] - 1   # get highest index of _from\r\n    _tokenIdIndexFrom: uint256 = self.tokenIdToIndex[_tokenId] # get index of _from where _tokenId is\r\n    if _highestIndexFrom == _tokenIdIndexFrom:               # _tokenId is the last token in _from\u0027s list\r\n        self.ownerIndexToTokenId[_from][_highestIndexFrom] = 0\r\n    else:\r\n        self.ownerIndexToTokenId[_from][_tokenIdIndexFrom] = self.ownerIndexToTokenId[_from][_highestIndexFrom]\r\n        self.ownerIndexToTokenId[_from][_highestIndexFrom] = 0\r\n    # Update ownerIndexToTokenId for _to\r\n    _newHighestIndexTo: uint256 = self.balanceOf[_to]\r\n    self.ownerIndexToTokenId[_to][_newHighestIndexTo] = _tokenId\r\n    # Update tokenIdToIndex\r\n    self.tokenIdToIndex[_tokenId] = _newHighestIndexTo\r\n    # update ownerOf and balanceOf\r\n    self.ownerOf[_tokenId] = _to\r\n    self.balanceOf[_from] -= 1\r\n    self.balanceOf[_to] \u002B= 1\r\n    # Clear approval.\r\n    if self.getApproved[_tokenId] != ZERO_ADDRESS:\r\n        self.getApproved[_tokenId] = ZERO_ADDRESS\r\n    log.Transfer(_from, _to, _tokenId)\r\n\r\n\r\n@public\r\ndef transferFrom(_from: address, _to: address, _tokenId: uint256):\r\n    self._transferFrom(_from, _to, _tokenId, msg.sender)\r\n\r\n\r\n@public\r\ndef safeTransferFrom(_from: address, _to: address, _tokenId: uint256, _data: bytes[1024]=\u0022\u0022):\r\n    self._transferFrom(_from, _to, _tokenId, msg.sender)\r\n    if _to.is_contract:\r\n        returnValue: bytes32 = ERC721Receiver(_to).onERC721Received(msg.sender, _from, _tokenId, _data)\r\n        # Throws if transfer destination is a contract which does not implement \u0027onERC721Received\u0027\r\n        assert returnValue == method_id(\u0027onERC721Received(address,address,uint256,bytes)\u0027, bytes32)\r\n\r\n\r\n@public\r\ndef approve(_approved: address, _tokenId: uint256):\r\n    owner: address = self.ownerOf[_tokenId]\r\n    # Check requirements\r\n    senderIsOwner: bool = msg.sender == owner\r\n    senderIsApprovedForAll: bool = (self.isApprovedForAll[owner])[msg.sender]\r\n    assert senderIsOwner or senderIsApprovedForAll\r\n    # Set the approval\r\n    self.getApproved[_tokenId] = _approved\r\n    log.Approval(owner, _approved, _tokenId)\r\n\r\n\r\n@public\r\ndef setApprovalForAll(_operator: address, _approved: bool):\r\n    assert _operator != msg.sender\r\n    self.isApprovedForAll[msg.sender][_operator] = _approved\r\n    log.ApprovalForAll(msg.sender, _operator, _approved)\r\n\r\n\r\n@public\r\ndef mint(_to: address) -\u003E bool:\r\n    assert msg.sender == self.minter and _to != ZERO_ADDRESS\r\n    _tokenId: uint256 = self.totalSupply\r\n    _toBal: uint256 = self.balanceOf[_to]\r\n    # can only mint if a sock has been burned\r\n    _socksSupply: uint256 = self.socks.totalSupply()\r\n    _socksBurned: uint256 = 500 * 10**18 - _socksSupply\r\n    assert _tokenId * 10**18 \u003C _socksBurned\r\n    # update mappings\r\n    self.ownerOf[_tokenId] = _to\r\n    self.balanceOf[_to] \u002B= 1\r\n    self.ownerIndexToTokenId[_to][_toBal] = _tokenId\r\n    self.tokenIdToIndex[_tokenId] = _toBal\r\n    self.totalSupply \u002B= 1\r\n    log.Transfer(ZERO_ADDRESS, _to, _tokenId)\r\n    return True\r\n\r\n\r\n@public\r\ndef changeMinter(_minter: address):\r\n    assert msg.sender == self.minter\r\n    self.minter = _minter\r\n\r\n@public\r\ndef changeURI(_newURI: address):\r\n    assert msg.sender == self.minter\r\n    self.newURI = _newURI","ABI":"[{\u0022name\u0022:\u0022Transfer\u0022,\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_from\u0022,\u0022indexed\u0022:true},{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_to\u0022,\u0022indexed\u0022:true},{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_tokenId\u0022,\u0022indexed\u0022:true}],\u0022anonymous\u0022:false,\u0022type\u0022:\u0022event\u0022},{\u0022name\u0022:\u0022Approval\u0022,\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_owner\u0022,\u0022indexed\u0022:true},{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_approved\u0022,\u0022indexed\u0022:true},{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_tokenId\u0022,\u0022indexed\u0022:true}],\u0022anonymous\u0022:false,\u0022type\u0022:\u0022event\u0022},{\u0022name\u0022:\u0022ApprovalForAll\u0022,\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_owner\u0022,\u0022indexed\u0022:true},{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_operator\u0022,\u0022indexed\u0022:true},{\u0022type\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022_approved\u0022,\u0022indexed\u0022:false}],\u0022anonymous\u0022:false,\u0022type\u0022:\u0022event\u0022},{\u0022outputs\u0022:[],\u0022inputs\u0022:[],\u0022constant\u0022:false,\u0022payable\u0022:false,\u0022type\u0022:\u0022constructor\u0022},{\u0022name\u0022:\u0022tokenURI\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022string\u0022,\u0022name\u0022:\u0022out\u0022}],\u0022inputs\u0022:[{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_tokenId\u0022}],\u0022constant\u0022:true,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:22405},{\u0022name\u0022:\u0022tokenByIndex\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022out\u0022}],\u0022inputs\u0022:[{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_index\u0022}],\u0022constant\u0022:true,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:631},{\u0022name\u0022:\u0022tokenOfOwnerByIndex\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022out\u0022}],\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_owner\u0022},{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_index\u0022}],\u0022constant\u0022:true,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:1248},{\u0022name\u0022:\u0022transferFrom\u0022,\u0022outputs\u0022:[],\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_from\u0022},{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_to\u0022},{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_tokenId\u0022}],\u0022constant\u0022:false,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:259486},{\u0022name\u0022:\u0022safeTransferFrom\u0022,\u0022outputs\u0022:[],\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_from\u0022},{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_to\u0022},{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_tokenId\u0022}],\u0022constant\u0022:false,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022},{\u0022name\u0022:\u0022safeTransferFrom\u0022,\u0022outputs\u0022:[],\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_from\u0022},{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_to\u0022},{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_tokenId\u0022},{\u0022type\u0022:\u0022bytes\u0022,\u0022name\u0022:\u0022_data\u0022}],\u0022constant\u0022:false,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022},{\u0022name\u0022:\u0022approve\u0022,\u0022outputs\u0022:[],\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_approved\u0022},{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_tokenId\u0022}],\u0022constant\u0022:false,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:38422},{\u0022name\u0022:\u0022setApprovalForAll\u0022,\u0022outputs\u0022:[],\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_operator\u0022},{\u0022type\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022_approved\u0022}],\u0022constant\u0022:false,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:38016},{\u0022name\u0022:\u0022mint\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022out\u0022}],\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_to\u0022}],\u0022constant\u0022:false,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:182636},{\u0022name\u0022:\u0022changeMinter\u0022,\u0022outputs\u0022:[],\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_minter\u0022}],\u0022constant\u0022:false,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:35897},{\u0022name\u0022:\u0022changeURI\u0022,\u0022outputs\u0022:[],\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_newURI\u0022}],\u0022constant\u0022:false,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:35927},{\u0022name\u0022:\u0022name\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022string\u0022,\u0022name\u0022:\u0022out\u0022}],\u0022inputs\u0022:[],\u0022constant\u0022:true,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:6612},{\u0022name\u0022:\u0022symbol\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022string\u0022,\u0022name\u0022:\u0022out\u0022}],\u0022inputs\u0022:[],\u0022constant\u0022:true,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:6642},{\u0022name\u0022:\u0022totalSupply\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022out\u0022}],\u0022inputs\u0022:[],\u0022constant\u0022:true,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:873},{\u0022name\u0022:\u0022minter\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022out\u0022}],\u0022inputs\u0022:[],\u0022constant\u0022:true,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:903},{\u0022name\u0022:\u0022socks\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022out\u0022,\u0022unit\u0022:\u0022Socks\u0022}],\u0022inputs\u0022:[],\u0022constant\u0022:true,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:933},{\u0022name\u0022:\u0022newURI\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022out\u0022}],\u0022inputs\u0022:[],\u0022constant\u0022:true,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:963},{\u0022name\u0022:\u0022ownerOf\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022out\u0022}],\u0022inputs\u0022:[{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022arg0\u0022}],\u0022constant\u0022:true,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:1126},{\u0022name\u0022:\u0022balanceOf\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022out\u0022}],\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022arg0\u0022}],\u0022constant\u0022:true,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:1195},{\u0022name\u0022:\u0022getApproved\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022out\u0022}],\u0022inputs\u0022:[{\u0022type\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022arg0\u0022}],\u0022constant\u0022:true,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:1186},{\u0022name\u0022:\u0022isApprovedForAll\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022out\u0022}],\u0022inputs\u0022:[{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022arg0\u0022},{\u0022type\u0022:\u0022address\u0022,\u0022name\u0022:\u0022arg1\u0022}],\u0022constant\u0022:true,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:1415},{\u0022name\u0022:\u0022supportsInterface\u0022,\u0022outputs\u0022:[{\u0022type\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022out\u0022}],\u0022inputs\u0022:[{\u0022type\u0022:\u0022bytes32\u0022,\u0022name\u0022:\u0022arg0\u0022}],\u0022constant\u0022:true,\u0022payable\u0022:false,\u0022type\u0022:\u0022function\u0022,\u0022gas\u0022:1246}]","ContractName":"Vyper_contract","CompilerVersion":"vyper:0.1.0b10","OptimizationUsed":"0","Runs":"0","ConstructorArguments":"","Library":"","SwarmSource":""}]