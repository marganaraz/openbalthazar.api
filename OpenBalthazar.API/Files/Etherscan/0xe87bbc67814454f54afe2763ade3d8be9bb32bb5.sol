[{"SourceCode":"pragma solidity ^0.5.9;\r\n\r\n/**\r\n *  ParkingResovler\r\n *\r\n *  A simple Resolver to point any number of ENS names to\r\n *  fixed values.\r\n *\r\n */\r\n\r\n\r\ninterface ReverseRegistrar {\r\n    function claim(address owner) external returns (bytes32 node);\r\n}\r\n\r\ninterface AbstractENS {\r\n    function owner(bytes32 node) external view returns (address);\r\n}\r\n\r\n\r\ncontract ParkingResolver {\r\n    bytes4 constant INTERFACE_META_ID         = 0x01ffc9a7;\r\n    bytes4 constant ADDR_INTERFACE_ID         = 0x3b3b57de;\r\n    bytes4 constant TEXT_INTERFACE_ID         = 0x59d1d43c;\r\n    bytes4 constant CONTENTHASH_INTERFACE_ID  = 0xbc1c58d1;\r\n\r\n    // namehash(\u0027addr.reverse\u0027)\r\n    bytes32 constant NODE_RR = 0x91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e2;\r\n\r\n    AbstractENS private _ens;\r\n    address private _owner;\r\n\r\n    address private _addr;\r\n    mapping (string =\u003E string) private _text;\r\n    bytes private _contenthash;\r\n\r\n    constructor(address ens, address addr) public {\r\n        _owner = addr;\r\n        _addr = addr;\r\n        _ens = AbstractENS(ens);\r\n        ReverseRegistrar(_ens.owner(NODE_RR)).claim(_owner);\r\n    }\r\n\r\n    function owner() external view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    function setOwner(address owner) external {\r\n        require(msg.sender == _owner);\r\n        _owner = owner;\r\n        ReverseRegistrar(_ens.owner(NODE_RR)).claim(_owner);\r\n    }\r\n\r\n\r\n    function addr(bytes32 nodehash) external view returns (address) {\r\n        return _addr;\r\n    }\r\n\r\n    function setAddr(bytes32 nodehash, address addr) external {\r\n        require(msg.sender == _owner);\r\n        _addr = addr;\r\n    }\r\n\r\n\r\n    function text(bytes32 nodehash, string calldata key) external view returns (string memory) {\r\n        return _text[key];\r\n    }\r\n\r\n    function setText(bytes32 nodehash, string calldata key, string calldata value) external {\r\n        require(msg.sender == _owner);\r\n        _text[key] = value;\r\n    }\r\n\r\n\r\n    function contenthash(bytes32 node) external view returns (bytes memory) {\r\n        return _contenthash;\r\n    }\r\n\r\n    function setContenthash(bytes32 nodehash, bytes calldata contenthash) external {\r\n        require(msg.sender == _owner);\r\n        _contenthash = contenthash;\r\n    }\r\n\r\n\r\n    function supportsInterface(bytes4 interfaceID) external pure returns (bool) {\r\n        return (interfaceID == ADDR_INTERFACE_ID ||\r\n                interfaceID == TEXT_INTERFACE_ID ||\r\n                interfaceID == CONTENTHASH_INTERFACE_ID ||\r\n                interfaceID == INTERFACE_META_ID);\r\n    }\r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022interfaceID\u0022,\u0022type\u0022:\u0022bytes4\u0022}],\u0022name\u0022:\u0022supportsInterface\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022pure\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022nodehash\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022name\u0022:\u0022key\u0022,\u0022type\u0022:\u0022string\u0022},{\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022name\u0022:\u0022setText\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022owner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022setOwner\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022nodehash\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022name\u0022:\u0022contenthash\u0022,\u0022type\u0022:\u0022bytes\u0022}],\u0022name\u0022:\u0022setContenthash\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022nodehash\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022addr\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022nodehash\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022name\u0022:\u0022key\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022name\u0022:\u0022text\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022owner\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022node\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022contenthash\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bytes\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022nodehash\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022name\u0022:\u0022addr\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022setAddr\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[{\u0022name\u0022:\u0022ens\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022addr\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022}]","ContractName":"ParkingResolver","CompilerVersion":"v0.5.10\u002Bcommit.5a6ea5b1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000314159265dd8dbb310642f98f50c066173c1259b000000000000000000000000f770358c6f29faa38186e49c149c87968775b228","Library":"","SwarmSource":"bzzr://3de471593f04898b2d5825ebb7bd3be27b10c64b68e81c557315cb44e5db6d6c"}]