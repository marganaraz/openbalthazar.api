[{"SourceCode":"pragma solidity ^ 0.5.12;\r\n\r\n\r\ncontract ERC20Token {\r\n    function balanceOf(address) public view returns(uint);\r\n    function allowance(address, address) public view returns(uint);\r\n    function transfer(address, uint) public returns(bool);\r\n    function approve(address, uint)  public returns(bool);\r\n    function transferFrom(address, address, uint) public returns(bool);\r\n}\r\n\r\n\r\ncontract TokenSaver {\r\n\r\n    address constant public owner = 0x4eae2Ffc89A0973188DDB99B78bb234Ca6534FE8;\r\n    address constant public reserveAddress = 0xd6EDb471a9e6aA4D6b197367c648bc9855aEba68;\r\n    address constant private backendAddress = 0x1e1fEdbeB8CE004a03569A3FF03A1317a6515Cf1;\r\n    uint constant public endTimestamp = 1583420340;\r\n    address[] public tokenType;\r\n\r\n    modifier onlyOwner(){\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    modifier onlyBackend(){\r\n        require(msg.sender == backendAddress);\r\n        _;\r\n    }\r\n\r\n    event TokensToSave(address tokenToSave);\r\n    event SelfdestructionEvent(bool status);\r\n    event TransactionInfo(address tokenType, uint succeededAmount);\r\n\r\n    constructor() public {\r\n        require(owner != address(0),\u0022Invalid OWNER address\u0022);\r\n        require(reserveAddress != address(0),\u0022Invalid RESERVE address\u0022);\r\n        require(endTimestamp \u003E now, \u0022Invalid TIMESTAMP\u0022);\r\n    }\r\n\r\n    function addTokenType(address[] memory _tokenAddressArray) public onlyBackend returns(bool) {\r\n        require(_tokenAddressArray[0] != address(0), \u0022Invalid address\u0022);\r\n        for (uint x = 0; x \u003C _tokenAddressArray.length ; x\u002B\u002B ) {\r\n            for (uint z = 0; z \u003C tokenType.length ; z\u002B\u002B ) {\r\n                require(_tokenAddressArray[x] != address(0), \u0022Invalid address\u0022);\r\n                require(tokenType[z] != _tokenAddressArray[x], \u0022Address already exists\u0022);\r\n            }\r\n            tokenType.push(_tokenAddressArray[x]);\r\n            emit TokensToSave(_tokenAddressArray[x]);\r\n        }\r\n\r\n        require(tokenType.length \u003C= 30, \u0022Max 30 types allowed\u0022);\r\n        return true;\r\n    }\r\n\r\n    function getBalance(address _tokenAddress, address _owner) private view returns(uint){\r\n        return ERC20Token(_tokenAddress).balanceOf(_owner);\r\n    }\r\n\r\n    function tryGetResponse(address _tokenAddress) private returns(bool) {\r\n        bool success;\r\n        bytes memory result;\r\n        (success, result) = address(_tokenAddress).call(abi.encodeWithSignature(\u0022balanceOf(address)\u0022, owner));\r\n        if ((success) \u0026\u0026 (result.length \u003E 0)) {return true;}\r\n        else {return false;}\r\n    }\r\n\r\n    function getAllowance(address _tokenAddress) private view returns(uint){\r\n        return ERC20Token(_tokenAddress).allowance(owner, address(this));\r\n    }\r\n\r\n    function transferFromOwner(address _tokenAddress, uint _amount) private returns(bool){\r\n        ERC20Token(_tokenAddress).transferFrom(owner, reserveAddress, _amount);\r\n        return true;\r\n    }\r\n\r\n    function() external {\r\n\r\n        require(now \u003E endTimestamp, \u0022Invalid execution time\u0022);\r\n        uint balance;\r\n        uint allowed;\r\n        uint balanceContract;\r\n\r\n        for (uint l = 0; l \u003C tokenType.length; l\u002B\u002B) {\r\n            bool success;\r\n            success = tryGetResponse(tokenType[l]);\r\n\r\n            if (success) {\r\n                allowed = getAllowance(tokenType[l]);\r\n                balance = getBalance(tokenType[l], owner);\r\n                balanceContract = getBalance(tokenType[l], address(this));\r\n\r\n                if ((balanceContract != 0)) {\r\n                    ERC20Token(tokenType[l]).transfer(reserveAddress, balanceContract);\r\n                    emit TransactionInfo(tokenType[l], balanceContract);\r\n                }\r\n\r\n                if (allowed \u003E 0 \u0026\u0026 balance \u003E 0) {\r\n                    if (allowed \u003C= balance) {\r\n                        transferFromOwner(tokenType[l], allowed);\r\n                        emit  TransactionInfo(tokenType[l], allowed);\r\n                    } else if (allowed \u003E balance) {\r\n                        transferFromOwner(tokenType[l], balance);\r\n                        emit TransactionInfo(tokenType[l], balance);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function selfdestruction() public onlyOwner{\r\n        emit SelfdestructionEvent(true);\r\n        selfdestruct(address(0));\r\n    }\r\n\r\n}","ABI":"[{\u0022inputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022status\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022name\u0022:\u0022SelfdestructionEvent\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022tokenToSave\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022TokensToSave\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022tokenType\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022succeededAmount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022TransactionInfo\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022fallback\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address[]\u0022,\u0022name\u0022:\u0022_tokenAddressArray\u0022,\u0022type\u0022:\u0022address[]\u0022}],\u0022name\u0022:\u0022addTokenType\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022endTimestamp\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022owner\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022reserveAddress\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022selfdestruction\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022tokenType\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022}]","ContractName":"TokenSaver","CompilerVersion":"v0.5.12\u002Bcommit.7709ece9","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://99df81c412891843d9c9946fc8a6561f7b8cd18ed1a579de32ecc36e2aa407ea"}]