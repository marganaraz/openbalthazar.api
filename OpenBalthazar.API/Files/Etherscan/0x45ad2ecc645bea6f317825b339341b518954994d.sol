[{"SourceCode":"pragma solidity ^0.5.0;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b \u003C= a);\r\n    return a - b;\r\n  }\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a \u002B b;\r\n    assert(c \u003E= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract Owned {\r\n    constructor() public { owner = msg.sender; }\r\n    address payable owner;\r\n    modifier onlyOwner {\r\n        require(\r\n            msg.sender == owner,\r\n            \u0022Only owner can call this function.\u0022\r\n        );\r\n        _;\r\n    }\r\n}\r\n\r\ncontract ERC20Distributor is Owned{\r\n\tusing SafeMath for uint256;\t\r\n    IERC20 public handledToken;    \r\n    struct Account {\r\n        address addy;\r\n        uint256 share;\r\n    }\r\n\tAccount[] accounts;\r\n    uint256 totalShares = 0;\r\n\tuint256 totalAccounts = 0;\r\n\tuint256 fullViewPercentage = 10000;\r\n\tconstructor(IERC20 _token) public {\r\n        handledToken = _token;\r\n    }\r\n\tfunction getGlobals() public view returns(\r\n\t\tuint256 _tokenBalance, \r\n\t\tuint256 _totalAccounts, \r\n\t\tuint256 _totalShares, \r\n\t\tuint256 _fullViewPercentage){\r\n\t\treturn (\r\n\t\t\thandledToken.balanceOf(address(this)), \r\n\t\t\ttotalAccounts, \r\n\t\t\ttotalShares, \r\n\t\t\tfullViewPercentage\r\n\t\t);\r\n\t}\r\n\tfunction getAccountInfo(uint256 index) public view returns(\r\n\t\tuint256 _tokenBalance,\r\n\t\tuint256 _tokenEntitled,\r\n\t\tuint256 _shares, \r\n\t\tuint256 _percentage,\r\n\t\taddress _address){\r\n\t\treturn (\r\n\t\t\thandledToken.balanceOf(accounts[index].addy),\r\n\t\t\t(accounts[index].share.mul(handledToken.balanceOf(address(this)))).div(totalShares),\r\n\t\t\taccounts[index].share, \r\n\t\t\t(accounts[index].share.mul(fullViewPercentage)).div(totalShares), \r\n\t\t\taccounts[index].addy\r\n\t\t);\r\n\t}\r\n    function writeAccount(address _address, uint256 _share) public onlyOwner {\r\n        require(_address != address(0), \u0022address can\u0027t be 0 address\u0022);\r\n        require(_address != address(this), \u0022address can\u0027t be this contract address\u0022);\r\n        require(_share \u003E 0, \u0022share must be more than 0\u0022);\r\n\t\tdeleteAccount(_address);\r\n        Account memory acc = Account(_address, _share);\r\n        accounts.push(acc);\r\n        totalShares \u002B= _share;\r\n\t\ttotalAccounts\u002B\u002B;\r\n    }\r\n    function deleteAccount(address _address) public onlyOwner{\r\n        for(uint i = 0; i \u003C accounts.length; i\u002B\u002B)\r\n        {\r\n\t\t\tif(accounts[i].addy == _address){\r\n\t\t\t\ttotalShares -= accounts[i].share;\r\n\t\t\t\tif(i \u003C accounts.length - 1){\r\n\t\t\t\t\taccounts[i] = accounts[accounts.length - 1];\r\n\t\t\t\t}\r\n\t\t\t\tdelete accounts[accounts.length - 1];\r\n\t\t\t\taccounts.length--;\r\n\t\t\t\ttotalAccounts--;\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n    function distributeTokens() public payable { \r\n\t\tuint256 sharesProcessed = 0;\r\n\t\tuint256 currentAmount = handledToken.balanceOf(address(this));\r\n\t\t\r\n        for(uint i = 0; i \u003C accounts.length; i\u002B\u002B)\r\n        {\r\n\t\t\tif(accounts[i].share \u003E 0 \u0026\u0026 accounts[i].addy != address(0)){\r\n\t\t\t\tuint256 amount = (currentAmount.mul(accounts[i].share)).div(totalShares.sub(sharesProcessed));\r\n\t\t\t\tcurrentAmount -= amount;\r\n\t\t\t\tsharesProcessed \u002B= accounts[i].share;\r\n\t\t\t\thandledToken.transfer(accounts[i].addy, amount);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n\tfunction withdrawERC20(IERC20 _token) public payable onlyOwner{\r\n\t\trequire(_token.balanceOf(address(this)) \u003E 0);\r\n\t\t_token.transfer(owner, _token.balanceOf(address(this)));\r\n\t}\r\n}","ABI":"[{\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022contract IERC20\u0022,\u0022name\u0022:\u0022_token\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_address\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022deleteAccount\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022distributeTokens\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022index\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022getAccountInfo\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_tokenBalance\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_tokenEntitled\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_shares\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_percentage\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_address\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getGlobals\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_tokenBalance\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_totalAccounts\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_totalShares\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_fullViewPercentage\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022handledToken\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022contract IERC20\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022contract IERC20\u0022,\u0022name\u0022:\u0022_token\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022withdrawERC20\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022_address\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022_share\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022writeAccount\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022}]","ContractName":"ERC20Distributor","CompilerVersion":"v0.5.13\u002Bcommit.5b0b510c","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"0000000000000000000000002b591e99afe9f32eaa6214f7b7629768c40eeb39","Library":"","SwarmSource":"bzzr://1858ae183ba6b3d4d912a975193198484fc372a497f9e98f678daab45d950bd5"}]