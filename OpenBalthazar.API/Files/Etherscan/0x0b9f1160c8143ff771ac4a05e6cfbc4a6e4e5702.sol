[{"SourceCode":"pragma solidity ^0.5.9;\r\n \r\nlibrary SafeMath {\r\n \r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // assert(b \u003E 0); // Solidity automatically throws when dividing by 0\r\n        return (a / b);\r\n    }\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b \u003C= a);\r\n        return (a - b);\r\n    }\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a \u002B b;\r\n        assert(c \u003E= a);\r\n        return c;\r\n    }\r\n}\r\n \r\ncontract ERC20Interface {\r\n \r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n \r\n    function totalSupply() public view returns (uint256);\r\n    function balanceOf(address _owner) public view returns (uint256);\r\n    function transfer(address _to, uint256 _value) public returns (bool);\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool);\r\n    function approve(address _spender, uint256 _value) public returns (bool);\r\n    function allowance(address _owner, address _spender) public view returns (uint256);\r\n}\r\n \r\ncontract WADZToken is ERC20Interface {\r\n   \r\n    string public constant name = \u0022WTK\u0022;\r\n    string public constant symbol = \u0022WTK\u0022;\r\n    uint8 public constant decimals = 2;  // 18 is the most common number of decimal places\r\n \r\n \r\n    using SafeMath for uint256;\r\n \r\n    // Total amount of tokens issued\r\n    uint256 constant internal salesPool = 27400000000; // sales pool size\r\n    uint256 constant internal retainedPool = 18400000000; // retained pool size\r\n   \r\n    uint256 internal salesIssued = 0;\r\n    uint256 internal retainedIssued = 0;\r\n   \r\n    bool public isIcoRunning = false;\r\n    bool public isTransferAllowed = false;\r\n   \r\n    address public owner;\r\n   \r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    event AdminsAdded(address[] _addresses);\r\n    event Whitelisted(address[] _addresses);\r\n \r\n    mapping(address =\u003E uint256) balances;\r\n    mapping(address =\u003E mapping (address =\u003E uint256)) internal allowed;\r\n    mapping(address =\u003E bool) admins;\r\n    mapping(address =\u003E bool) whitelist;\r\n   \r\n   \r\n    /**\r\n    * @dev The ERC20 constructor sets the original \u0060owner\u0060 of the contract to the sender\r\n    * account and initializes the pools\r\n    */\r\n    constructor() public {\r\n        owner = msg.sender;\r\n        admins[msg.sender] = true;\r\n    }\r\n   \r\n    function startICO() public onlyOwner {\r\n        isIcoRunning = true;\r\n    }\r\n      \r\n    function startTransfers() public onlyOwner {\r\n        isTransferAllowed = true;\r\n    }\r\n   \r\n    /**\r\n    * @dev Throws if called by any account other than the owner.\r\n    */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n   \r\n    modifier onlyAdmin() {\r\n        require(isAdmin(msg.sender));\r\n        _;\r\n    }\r\n   \r\n    /**\r\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n    * @param newOwner The address to transfer ownership to.\r\n    */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0));\r\n        owner = newOwner;\r\n       \r\n        emit OwnershipTransferred(owner, newOwner);\r\n    }\r\n   \r\n    /**\r\n    * @dev Allows the current owner to insert administratiors\r\n    * @param _addresses An array of addresses to insert.\r\n    */\r\n    function setAdministrators(address[] memory _addresses) public onlyOwner {\r\n        for(uint i=0; i \u003C _addresses.length; i\u002B\u002B) {\r\n            admins[_addresses[i]] = true;\r\n        }\r\n       \r\n        emit AdminsAdded(_addresses);\r\n    }\r\n   \r\n    /**\r\n    * @dev Allows the current owner to remove administratiors\r\n    * @param _address Address of the administrator that needs to be disabled.\r\n    */\r\n    function unsetAdministrator(address _address) public onlyOwner {\r\n        admins[_address] = false;\r\n    }\r\n   \r\n    /**\r\n    * @dev Checks whether an address is administrator or not\r\n    * @param addr Address that we are checking.\r\n    */\r\n    function isAdmin(address addr) public view returns (bool) {\r\n \r\n        return admins[addr];\r\n    }\r\n   \r\n    /**\r\n    * @dev Allows the current owner to whitelist addresses\r\n    * @param _addresses An array of addresses to whitelist.\r\n    */\r\n    function whitelistAddresses(address[] memory _addresses) public onlyAdmin {\r\n        for(uint i=0; i \u003C _addresses.length; i\u002B\u002B) {\r\n            whitelist[_addresses[i]] = true;\r\n        }\r\n       \r\n        emit Whitelisted(_addresses);\r\n    }\r\n   \r\n    /**\r\n    * @dev Allows the admins to remove existing whitelist permissions\r\n    * @param _address Address of the user that needs to be blacklisted.\r\n    */\r\n    function unsetWhitelist(address _address) public onlyAdmin {\r\n        whitelist[_address] = false;\r\n    }\r\n   \r\n    /**\r\n    * @dev Checks whether an address is whitelisted or not\r\n    * @param addr Address that we are checking.\r\n    */\r\n    function isWhitelisted(address addr) public view returns (bool) {\r\n \r\n        return whitelist[addr];\r\n    }\r\n \r\n    function totalSupply() public view returns (uint256) {\r\n        return salesPool \u002B retainedPool;\r\n    }\r\n   \r\n    function getsalesSupply() public pure returns (uint256) {\r\n        return salesPool;\r\n    }\r\n   \r\n    function getRetainedSupply() public pure returns (uint256) {\r\n        return retainedPool;\r\n    }\r\n   \r\n    function getIssuedsalesSupply() public view returns (uint256) {\r\n        return salesIssued;\r\n    }\r\n   \r\n    function getIssuedRetainedSupply() public view returns (uint256) {\r\n        return retainedIssued;\r\n    }\r\n   \r\n \r\n    /* Get the account balance for an address */\r\n    function balanceOf(address _owner) public view returns (uint256) {\r\n        return balances[_owner];\r\n    }\r\n \r\n \r\n \r\n    /* Transfer the balance from owner\u0027s account to another account */\r\n    function transfer(address _to, uint256 _amount) public returns (bool) {\r\n \r\n        require(_to != address(0x0));\r\n \r\n \r\n        // amount sent cannot exceed balance\r\n        require(balances[msg.sender] \u003E= _amount);\r\n       \r\n        require(isTransferAllowed);\r\n        require(isIcoRunning);\r\n \r\n       \r\n        // update balances\r\n        balances[msg.sender] = balances[msg.sender].sub(_amount);\r\n        balances[_to]        = balances[_to].add(_amount);\r\n \r\n        // log event\r\n        emit Transfer(msg.sender, _to, _amount);\r\n       \r\n        return true;\r\n    }\r\n   \r\n    /* Sales transfer of balance from admin to investor */\r\n    /* Amount includes the 2 decimal places, so if you want to send 22,54 tokens the amount should be 2254 */\r\n    /* If you want to send 20 tokens, the amount should be 2000 */\r\n    function salesTransfer(address _to, uint256 _amount) public onlyAdmin returns (bool) {\r\n        require(isWhitelisted(_to));\r\n       \r\n        require(_to != address(0x0));\r\n       \r\n        require(salesPool \u003E= salesIssued \u002B _amount);\r\n       \r\n \r\n        balances[_to] = balances[_to].add(_amount);\r\n        salesIssued = salesIssued.add(_amount);\r\n       \r\n        emit Transfer(address(0x0), _to, _amount);\r\n       \r\n        return true;\r\n       \r\n    }\r\n   \r\n    function retainedTransfer(address _to, uint256 _amount) public onlyOwner returns (bool) {\r\n        require(isWhitelisted(_to));\r\n       \r\n        require(_to != address(0x0));\r\n       \r\n        require(retainedPool \u003E= retainedIssued \u002B _amount);\r\n       \r\n       \r\n        balances[_to] = balances[_to].add(_amount);\r\n        retainedIssued = retainedIssued.add(_amount);\r\n       \r\n        emit Transfer(address(0x0), _to, _amount);\r\n       \r\n        return true;\r\n    }\r\n   \r\n    /* Allow _spender to withdraw from your account up to _amount */\r\n    function approve(address _spender, uint256 _amount) public returns (bool) {\r\n       \r\n        require(_spender != address(0x0));\r\n \r\n        // update allowed amount\r\n        allowed[msg.sender][_spender] = _amount;\r\n \r\n        // log event\r\n        emit Approval(msg.sender, _spender, _amount);\r\n       \r\n        return true;\r\n    }\r\n \r\n    /* Spender of tokens transfers tokens from the owner\u0027s balance */\r\n    /* Must be pre-approved by owner */\r\n    function transferFrom(address _from, address _to, uint256 _amount) public returns (bool) {\r\n       \r\n        require(_to != address(0x0));\r\n       \r\n \r\n        // balance checks\r\n        require(balances[_from] \u003E= _amount);\r\n        require(allowed[_from][msg.sender] \u003E= _amount);\r\n       \r\n        require(isTransferAllowed);\r\n        require(isIcoRunning);\r\n \r\n        // update balances and allowed amount\r\n        balances[_from]            = balances[_from].sub(_amount);\r\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\r\n        balances[_to]              = balances[_to].add(_amount);\r\n \r\n        // log event\r\n        emit Transfer(_from, _to, _amount);\r\n       \r\n        return true;\r\n    }\r\n \r\n    /* Returns the amount of tokens approved by the owner */\r\n    /* that can be transferred by spender */\r\n    function allowance(address _owner, address _spender) public view returns (uint256) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n   \r\n    function withdrawTo(address payable _to) public onlyOwner {\r\n        require(_to != address(0));\r\n        _to.transfer(address(this).balance);\r\n    }\r\n \r\n    function withdrawToOwner() public onlyOwner {\r\n        withdrawTo(msg.sender);\r\n    }\r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022name\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022approve\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getIssuedsalesSupply\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022totalSupply\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transferFrom\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022addr\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022isAdmin\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_addresses\u0022,\u0022type\u0022:\u0022address[]\u0022}],\u0022name\u0022:\u0022whitelistAddresses\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022decimals\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint8\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getsalesSupply\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022pure\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022addr\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022isWhitelisted\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022withdrawToOwner\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022balanceOf\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022withdrawTo\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022startTransfers\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022retainedTransfer\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022startICO\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022owner\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getRetainedSupply\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022pure\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022salesTransfer\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022isIcoRunning\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022symbol\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_address\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022unsetAdministrator\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transfer\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_addresses\u0022,\u0022type\u0022:\u0022address[]\u0022}],\u0022name\u0022:\u0022setAdministrators\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022isTransferAllowed\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_address\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022unsetWhitelist\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_spender\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022allowance\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022transferOwnership\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getIssuedRetainedSupply\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022previousOwner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022OwnershipTransferred\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022_addresses\u0022,\u0022type\u0022:\u0022address[]\u0022}],\u0022name\u0022:\u0022AdminsAdded\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022_addresses\u0022,\u0022type\u0022:\u0022address[]\u0022}],\u0022name\u0022:\u0022Whitelisted\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022_from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Transfer\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022_spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Approval\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"WADZToken","CompilerVersion":"v0.5.9\u002Bcommit.e560f70d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://8c839c1cdc6e3edcfcc9ffe8fce804ebcce30138a95a1666410c1364cdfa5774"}]