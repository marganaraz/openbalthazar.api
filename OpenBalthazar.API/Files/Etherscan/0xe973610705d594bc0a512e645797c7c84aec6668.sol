[{"SourceCode":"pragma solidity^0.4.24;  \r\n\r\ninterface tokenTransfer {\r\n    function transfer(address receiver, uint amount);\r\n    function transferFrom(address _from, address _to, uint256 _value)returns (bool success);\r\n    function balanceOf(address receiver) returns(uint256);\r\n}\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n \r\n    function Ownable () public {\r\n        owner = msg.sender;\r\n    }\r\n \r\n    modifier onlyOwner {\r\n        require (msg.sender == owner, \u0022OnlyOwner methods called by non-owner.\u0022);\r\n        _;\r\n    }\r\n \r\n    /**\r\n     * @param  newOwner address \r\n     */\r\n    function transferOwnership(address newOwner) onlyOwner public {\r\n        if (newOwner != address(0)) {\r\n        owner = newOwner;\r\n      }\r\n    }\r\n  \r\n}\r\ncontract BebTreasure is Ownable{\r\n    \r\n    uint256 totalFraction;\r\n    uint256 fractionAmount;\r\n    uint256 totalNumber;\r\n    uint256 numberOfPeriods=201900000; \r\n    address winAddress;\r\n    uint256 position;\r\n    address minter;\r\n    tokenTransfer public bebTokenTransfer; \r\n    function BebTreasure(address _tokenAddress){\r\n         bebTokenTransfer = tokenTransfer(_tokenAddress);\r\n         //minter=_minter;\r\n     }\r\n     struct UserTreasure{\r\n         address addr;\r\n     }\r\n    mapping (address =\u003E UserTreasure) public UserTreasures;\r\n    address[] public minersArray;\r\n    //buy Treasure\r\n    function treasure(uint256 _amount,uint256 _fraction)public{\r\n        require(totalFraction \u003E= _fraction\u002BtotalNumber);\r\n        require(_amount == fractionAmount);\r\n        uint256 sumAmount=_amount*_fraction;\r\n        address _addr = msg.sender;\r\n        UserTreasure storage user=UserTreasures[_addr];\r\n        bebTokenTransfer.transferFrom(_addr,address(this),sumAmount);\r\n        if(_fraction \u003E1){\r\n            for(uint i=0;i\u003C_fraction;i\u002B\u002B){\r\n            minersArray.push(_addr);\r\n            }\r\n        }else{\r\n            minersArray.push(_addr);\r\n        }\r\n        user.addr=_addr;\r\n        totalNumber \u002B=_fraction;\r\n    }\r\n    //new Treasure\r\n    function startTreasure(uint256 _totalFraction,uint256 _fractionAmount)onlyOwner {\r\n        //require(msg.sender ==minter,\u0022Insufficient\u0022); \r\n        numberOfPeriods\u002B=1;\r\n        totalFraction=_totalFraction;\r\n        fractionAmount=_fractionAmount* 10 ** 18;\r\n        totalNumber=0;\r\n        delete minersArray;\r\n    }\r\n    //openTreasure \r\n    function openTreasure(uint256 _gamesmul)onlyOwner{\r\n       // require(msg.sender ==minter,\u0022Insufficient\u0022);\r\n        require(totalNumber==totalFraction);\r\n        uint256 random2 = random(block.difficulty\u002B_gamesmul*99/100);\r\n        winAddress = UserTreasures[minersArray[random2]].addr;\r\n        position = random2;\r\n        winAddress.transfer(1 ether);\r\n    }\r\n     function random(uint256 randomyType)   internal returns(uint256 num){\r\n        uint256 random = uint256(keccak256(randomyType,now));\r\n        uint256 randomNum = random%totalNumber;\r\n        return randomNum;\r\n    }\r\n     function getPlayersCount() public view returns(uint256){\r\n        return totalNumber;\r\n    }\r\n     function getWinInfo() public view returns(address,uint256){\r\n        return (winAddress,position);\r\n    }\r\n    function getPeriods() public view returns(uint256){\r\n        return numberOfPeriods;\r\n    }\r\n    function withdrawAmount(uint256 _amount) payable onlyOwner {\r\n        uint256 _amounteth=_amount* 10 ** 18;\r\n       require(this.balance\u003E_amounteth,\u0022Insufficient contract balance\u0022); \r\n      owner.transfer(_amounteth);\r\n    } \r\n   function withdrawAmountBeb(uint256 amount) onlyOwner {\r\n        uint256 _amountbeb=amount* 10 ** 18;\r\n        require(getTokenBalance()\u003E_amountbeb,\u0022Insufficient contract balance\u0022);\r\n       bebTokenTransfer.transfer(owner,_amountbeb);\r\n    }\r\n    function getTokenBalance() public view returns(uint256){\r\n         return bebTokenTransfer.balanceOf(address(this));\r\n    }\r\n    function()payable{\r\n        \r\n    }\r\n}","ABI":"[{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022withdrawAmount\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022minersArray\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022bebTokenTransfer\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_gamesmul\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022openTreasure\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_totalFraction\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_fractionAmount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022startTreasure\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getPeriods\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getWinInfo\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_amount\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_fraction\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022treasure\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getTokenBalance\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022owner\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getPlayersCount\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022UserTreasures\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022addr\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022withdrawAmountBeb\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022transferOwnership\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[{\u0022name\u0022:\u0022_tokenAddress\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022fallback\u0022}]","ContractName":"BebTreasure","CompilerVersion":"v0.4.24\u002Bcommit.e67f0147","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"00000000000000000000000088b175d41d8eaad29aa9a97096fd5699e4f7f03f","Library":"","SwarmSource":"bzzr://4fe185cf308017363c5b73e9e68c7d06807166ae74444853ed3c51041a493250"}]