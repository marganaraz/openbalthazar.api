[{"SourceCode":"pragma solidity ^0.5.4;\r\n\r\ncontract Owned {\r\n\r\n    // The owner\r\n    address public owner;\r\n\r\n    event OwnerChanged(address indexed _newOwner);\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner, \u0022Must be owner\u0022);\r\n        _;\r\n    }\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n     * @dev Lets the owner transfer ownership of the contract to a new owner.\r\n     * @param _newOwner The new owner.\r\n     */\r\n    function changeOwner(address _newOwner) external onlyOwner {\r\n        require(_newOwner != address(0), \u0022Address must not be null\u0022);\r\n        owner = _newOwner;\r\n        emit OwnerChanged(_newOwner);\r\n    }\r\n}\r\n\r\ncontract LogicManager is Owned {\r\n\r\n    event UpdateLogicSubmitted(address indexed logic, bool value);\r\n    event UpdateLogicCancelled(address indexed logic);\r\n    event UpdateLogicDone(address indexed logic, bool value);\r\n\r\n    struct pending {\r\n        bool value;\r\n        uint dueTime;\r\n    }\r\n\r\n    // The authorized logic modules\r\n    mapping (address =\u003E bool) public authorized;\r\n\r\n    /*\r\n    array\r\n    index 0: AccountLogic address\r\n          1: TransferLogic address\r\n          2: DualsigsLogic address\r\n          3: DappLogic address\r\n          4: ...\r\n     */\r\n    address[] public authorizedLogics;\r\n\r\n    // updated logics and their due time of becoming effective\r\n    mapping (address =\u003E pending) public pendingLogics;\r\n\r\n    // pending time before updated logics take effect\r\n    uint public pendingTime;\r\n\r\n    // how many authorized logics\r\n    uint public logicCount;\r\n\r\n    constructor(address[] memory _initialLogics, uint256 _pendingTime) public\r\n    {\r\n        for (uint i = 0; i \u003C _initialLogics.length; i\u002B\u002B) {\r\n            address logic = _initialLogics[i];\r\n            authorized[logic] = true;\r\n            logicCount \u002B= 1;\r\n        }\r\n        authorizedLogics = _initialLogics;\r\n\r\n        // pendingTime: 4 days for mainnet, 4 minutes for ropsten testnet\r\n        pendingTime = _pendingTime;\r\n    }\r\n\r\n    function isAuthorized(address _logic) external view returns (bool) {\r\n        return authorized[_logic];\r\n    }\r\n\r\n    function getAuthorizedLogics() external view returns (address[] memory) {\r\n        return authorizedLogics;\r\n    }\r\n\r\n    function submitUpdate(address _logic, bool _value) external onlyOwner {\r\n        pending storage p = pendingLogics[_logic];\r\n        p.value = _value;\r\n        p.dueTime = now \u002B pendingTime;\r\n        emit UpdateLogicSubmitted(_logic, _value);\r\n    }\r\n\r\n    function cancelUpdate(address _logic) external onlyOwner {\r\n        delete pendingLogics[_logic];\r\n        emit UpdateLogicCancelled(_logic);\r\n    }\r\n\r\n    function triggerUpdateLogic(address _logic) external {\r\n        pending memory p = pendingLogics[_logic];\r\n        require(p.dueTime \u003E 0, \u0022pending logic not found\u0022);\r\n        require(p.dueTime \u003C= now, \u0022too early to trigger updateLogic\u0022);\r\n        updateLogic(_logic, p.value);\r\n        delete pendingLogics[_logic];\r\n    }\r\n\r\n    function updateLogic(address _logic, bool _value) internal {\r\n        if (authorized[_logic] != _value) {\r\n            if(_value) {\r\n                logicCount \u002B= 1;\r\n                authorized[_logic] = true;\r\n                authorizedLogics.push(_logic);\r\n            }\r\n            else {\r\n                logicCount -= 1;\r\n                require(logicCount \u003E 0, \u0022must have at least one logic module\u0022);\r\n                delete authorized[_logic];\r\n                removeLogic(_logic);\r\n            }\r\n            emit UpdateLogicDone(_logic, _value);\r\n        }\r\n    }\r\n\r\n    function removeLogic(address _logic) internal {\r\n        uint len = authorizedLogics.length;\r\n        address lastLogic = authorizedLogics[len - 1];\r\n        if (_logic != lastLogic) {\r\n            for (uint i = 0; i \u003C len; i\u002B\u002B) {\r\n                 if (_logic == authorizedLogics[i]) {\r\n                     authorizedLogics[i] = lastLogic;\r\n                     break;\r\n                 }\r\n            }\r\n        }\r\n        authorizedLogics.length--;\r\n    }\r\n}","ABI":"[{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_logic\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022name\u0022:\u0022submitUpdate\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022pendingLogics\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022bool\u0022},{\u0022name\u0022:\u0022dueTime\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022owner\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getAuthorizedLogics\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address[]\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022changeOwner\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022logicCount\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022pendingTime\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022authorized\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_logic\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022cancelUpdate\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022authorizedLogics\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_logic\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022triggerUpdateLogic\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_logic\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022isAuthorized\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[{\u0022name\u0022:\u0022_initialLogics\u0022,\u0022type\u0022:\u0022address[]\u0022},{\u0022name\u0022:\u0022_pendingTime\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022logic\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022name\u0022:\u0022UpdateLogicSubmitted\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022logic\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022UpdateLogicCancelled\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022logic\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022name\u0022:\u0022UpdateLogicDone\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022_newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022OwnerChanged\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"LogicManager","CompilerVersion":"v0.5.4\u002Bcommit.9549d8ff","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000054600000000000000000000000000000000000000000000000000000000000000000400000000000000000000000052dab11c6029862ebf1e65a4d5c30641f5fbd957000000000000000000000000f391ffd0e92f80293e4b7a8e7a69ca797224da6b000000000000000000000000039aa54febe98aaadb91ae2b1db7aa00a82f8571000000000000000000000000a385a32566cbfbc83221d90c6a1670ed8196f9d3","Library":"","SwarmSource":"bzzr://8a990fd4f5d4f318c13652fe0d17bb0257e7e8646c3443ece8b788a41f538c54"}]