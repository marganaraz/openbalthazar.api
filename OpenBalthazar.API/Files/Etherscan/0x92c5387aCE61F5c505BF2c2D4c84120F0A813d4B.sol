[{"SourceCode":"pragma solidity ^0.5.9;\r\n\r\ninterface DPlayCoinInterface {\r\n\t\r\n\tevent Transfer(address indexed from, address indexed to, uint value);\r\n\tevent Approval(address indexed owner, address indexed spender, uint value);\r\n\t\r\n\tfunction name() external view returns (string memory);\r\n\tfunction symbol() external view returns (string memory);\r\n\tfunction decimals() external view returns (uint8);\r\n\t\r\n\tfunction totalSupply() external view returns (uint);\r\n\tfunction balanceOf(address owner) external view returns (uint balance);\r\n\tfunction transfer(address to, uint value) external returns (bool success);\r\n\tfunction transferFrom(address from, address to, uint value) external returns (bool success);\r\n\tfunction approve(address spender, uint value) external returns (bool success);\r\n\tfunction allowance(address owner, address spender) external view returns (uint remaining);\r\n\t\r\n\t// Returns the DC power.\r\n\t// DC \uD30C\uC6CC\uB97C \uBC18\uD658\uD569\uB2C8\uB2E4.\r\n\tfunction getPower(address user) external view returns (uint power);\r\n}\r\n\r\ninterface ERC20 {\r\n\t\r\n\tevent Transfer(address indexed from, address indexed to, uint value);\r\n\tevent Approval(address indexed owner, address indexed spender, uint value);\r\n\t\r\n\tfunction name() external view returns (string memory);\r\n\tfunction symbol() external view returns (string memory);\r\n\tfunction decimals() external view returns (uint8);\r\n\t\r\n\tfunction totalSupply() external view returns (uint);\r\n\tfunction balanceOf(address owner) external view returns (uint balance);\r\n\tfunction transfer(address to, uint value) external returns (bool success);\r\n\tfunction transferFrom(address from, address to, uint value) external returns (bool success);\r\n\tfunction approve(address spender, uint value) external returns (bool success);\r\n\tfunction allowance(address owner, address spender) external view returns (uint remaining);\r\n}\r\n\r\ninterface ERC165 {\r\n    function supportsInterface(bytes4 interfaceID) external view returns (bool);\r\n}\r\n\r\ncontract NetworkChecker {\r\n\t\r\n\taddress constant private MAINNET_MILESTONE_ADDRESS = 0xa6e90A28F446D3639916959B6087F68D9B83fca9;\r\n\taddress constant private KOVAN_MILESTONE_ADDRESS = 0x9a6Dc2a58256239500D96fb6f13D73b70C3d88f9;\r\n\taddress constant private ROPSTEN_MILESTONE_ADDRESS = 0x212cC55dd760Ec5352185A922c61Ac41c8dDB197;\r\n\taddress constant private RINKEBY_MILESTONE_ADDRESS = 0x54d1991a37cbA30E5371F83e8c2B1F762c7096c2;\r\n\t\r\n\tenum Network {\r\n\t\tMainnet,\r\n\t\tKovan,\r\n\t\tRopsten,\r\n\t\tRinkeby,\r\n\t\tUnknown\r\n\t}\r\n\t\r\n\tNetwork public network;\r\n\t\r\n\t// Checks if the given address is a smart contract.\r\n\t// \uC8FC\uC5B4\uC9C4 \uC8FC\uC18C\uAC00 \uC2A4\uB9C8\uD2B8 \uACC4\uC57D\uC778\uC9C0 \uD655\uC778\uD569\uB2C8\uB2E4.\r\n\tfunction checkIsSmartContract(address addr) private view returns (bool) {\r\n\t\tuint32 size;\r\n\t\tassembly { size := extcodesize(addr) }\r\n\t\treturn size \u003E 0;\r\n\t}\r\n\t\r\n\tconstructor() public {\r\n\t\t\r\n\t\t// Checks if the contract runs on the main network.\r\n\t\t// Main \uB124\uD2B8\uC6CC\uD06C\uC778\uC9C0 \uD655\uC778\uD569\uB2C8\uB2E4.\r\n\t\tif (checkIsSmartContract(MAINNET_MILESTONE_ADDRESS) == true) {\r\n\t\t\t(bool success, ) = MAINNET_MILESTONE_ADDRESS.call(abi.encodeWithSignature(\u0022helloMainnet()\u0022));\r\n\t\t\tif (success == true) {\r\n\t\t\t\tnetwork = Network.Mainnet;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// Checks if the contract is in the Kovan network.\r\n\t\t// Kovan \uB124\uD2B8\uC6CC\uD06C\uC778\uC9C0 \uD655\uC778\uD569\uB2C8\uB2E4.\r\n\t\tif (checkIsSmartContract(KOVAN_MILESTONE_ADDRESS) == true) {\r\n\t\t\t(bool success, ) = KOVAN_MILESTONE_ADDRESS.call(abi.encodeWithSignature(\u0022helloKovan()\u0022));\r\n\t\t\tif (success == true) {\r\n\t\t\t\tnetwork = Network.Kovan;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// Checks if the contract is in the Ropsten network.\r\n\t\t// Ropsten \uB124\uD2B8\uC6CC\uD06C\uC778\uC9C0 \uD655\uC778\uD569\uB2C8\uB2E4.\r\n\t\tif (checkIsSmartContract(ROPSTEN_MILESTONE_ADDRESS) == true) {\r\n\t\t\t(bool success, ) = ROPSTEN_MILESTONE_ADDRESS.call(abi.encodeWithSignature(\u0022helloRopsten()\u0022));\r\n\t\t\tif (success == true) {\r\n\t\t\t\tnetwork = Network.Ropsten;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// Checks if the contract is in the Rinkeby network.\r\n\t\t// Rinkeby \uB124\uD2B8\uC6CC\uD06C\uC778\uC9C0 \uD655\uC778\uD569\uB2C8\uB2E4.\r\n\t\tif (checkIsSmartContract(RINKEBY_MILESTONE_ADDRESS) == true) {\r\n\t\t\t(bool success, ) = RINKEBY_MILESTONE_ADDRESS.call(abi.encodeWithSignature(\u0022helloRinkeby()\u0022));\r\n\t\t\tif (success == true) {\r\n\t\t\t\tnetwork = Network.Rinkeby;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// The network is unknown.\r\n\t\t// \uC54C \uC218 \uC5C6\uB294 \uB124\uD2B8\uC6CC\uD06C\r\n\t\tnetwork = Network.Unknown;\r\n\t}\r\n}\r\n\r\n// This library is for preventing overflow problems while calculating numbers.\r\n// \uC22B\uC790 \uACC4\uC0B0 \uC2DC \uC624\uBC84\uD50C\uB85C\uC6B0 \uBB38\uC81C\uB97C \uBC29\uC9C0\uD558\uAE30 \uC704\uD55C \uB77C\uC774\uBE0C\uB7EC\uB9AC\r\nlibrary SafeMath {\r\n\t\r\n\tfunction add(uint a, uint b) pure internal returns (uint c) {\r\n\t\tc = a \u002B b;\r\n\t\tassert(c \u003E= a);\r\n\t\treturn c;\r\n\t}\r\n\t\r\n\tfunction sub(uint a, uint b) pure internal returns (uint c) {\r\n\t\tassert(b \u003C= a);\r\n\t\treturn a - b;\r\n\t}\r\n\t\r\n\tfunction mul(uint a, uint b) pure internal returns (uint c) {\r\n\t\tif (a == 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tc = a * b;\r\n\t\tassert(c / a == b);\r\n\t\treturn c;\r\n\t}\r\n\t\r\n\tfunction div(uint a, uint b) pure internal returns (uint c) {\r\n\t\treturn a / b;\r\n\t}\r\n}\r\n\r\ncontract DPlayCoin is DPlayCoinInterface, ERC20, ERC165, NetworkChecker {\r\n\tusing SafeMath for uint;\r\n\t\r\n\t// Token information\r\n\t// \uD1A0\uD070 \uC815\uBCF4\r\n\tstring constant private NAME = \u0022DPlay Coin\u0022;\r\n\tstring constant private SYMBOL = \u0022DC\u0022;\r\n\tuint8 constant private DECIMALS = 18;\r\n\tuint constant private TOTAL_SUPPLY = 10000000000 * (10 ** uint(DECIMALS));\r\n\t\r\n\tmapping(address =\u003E uint) private balances;\r\n\tmapping(address =\u003E mapping(address =\u003E uint)) private allowed;\r\n\t\r\n\t// The two addresses below are the addresses of the trusted smart contract, and don\u0027t need to be allowed.\r\n\t// \uC544\uB798 \uB450 \uC8FC\uC18C\uB294 \uC2E0\uB8B0\uD558\uB294 \uC2A4\uB9C8\uD2B8 \uACC4\uC57D\uC758 \uC8FC\uC18C\uB85C \uD5C8\uB77D\uBC1B\uC744 \uD544\uC694\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4.\r\n\t\r\n\t// The address of DPlay store\r\n\t// DPlay \uC2A4\uD1A0\uC5B4 \uC8FC\uC18C\r\n\taddress public dplayStore;\r\n\t\r\n\t// The address of DPlay trading post\r\n\t// DPlay \uAD50\uC5ED\uC18C \uC8FC\uC18C\r\n\taddress public dplayTradingPost;\r\n\t\r\n\tconstructor() NetworkChecker() public {\r\n\t\t\r\n\t\tbalances[msg.sender] = TOTAL_SUPPLY;\r\n\t\t\r\n\t\temit Transfer(address(0x0), msg.sender, TOTAL_SUPPLY);\r\n\t}\r\n\t\r\n\t// Sets the address of DPlay store. (Done only once.)\r\n\t// DPlay \uC2A4\uD1A0\uC5B4 \uC8FC\uC18C\uB97C \uC9C0\uC815\uD569\uB2C8\uB2E4. (\uB2E8 \uD55C\uBC88\uB9CC \uAC00\uB2A5\uD569\uB2C8\uB2E4.)\r\n\tfunction setDPlayStoreOnce(address addr) external {\r\n\t\t\r\n\t\t// \uBE44\uC5B4\uC788\uB294 \uC8FC\uC18C\uC778 \uACBD\uC6B0\uC5D0\uB9CC\r\n\t\trequire(dplayStore == address(0));\r\n\t\t\r\n\t\tdplayStore = addr;\r\n\t}\r\n\t\r\n\t// Sets the address of DPlay trading post. (Done only once.)\r\n\t// DPlay \uAD50\uC5ED\uC18C \uC8FC\uC18C\uB97C \uC9C0\uC815\uD569\uB2C8\uB2E4. (\uB2E8 \uD55C\uBC88\uB9CC \uAC00\uB2A5\uD569\uB2C8\uB2E4.)\r\n\tfunction setDPlayTradingPostOnce(address addr) external {\r\n\t\t\r\n\t\t// Only an unused address can be used.\r\n\t\t// \uBE44\uC5B4\uC788\uB294 \uC8FC\uC18C\uC778 \uACBD\uC6B0\uC5D0\uB9CC\r\n\t\trequire(dplayTradingPost == address(0));\r\n\t\t\r\n\t\tdplayTradingPost = addr;\r\n\t}\r\n\t\r\n\t// Checks if the address is misued.\r\n\t// \uC8FC\uC18C\uB97C \uC798\uBABB \uC0AC\uC6A9\uD558\uB294 \uAC83\uC778\uC9C0 \uCCB4\uD06C \r\n\tfunction checkAddressMisused(address target) internal view returns (bool) {\r\n\t\treturn\r\n\t\t\ttarget == address(0) ||\r\n\t\t\ttarget == address(this);\r\n\t}\r\n\t\r\n\t//ERC20: Returns the name of the token.\r\n\t//ERC20: \uD1A0\uD070\uC758 \uC774\uB984 \uBC18\uD658\r\n\tfunction name() external view returns (string memory) {\r\n\t\treturn NAME;\r\n\t}\r\n\t\r\n\t//ERC20: Returns the symbol of the token.\r\n\t//ERC20: \uD1A0\uD070\uC758 \uC2EC\uBCFC \uBC18\uD658\r\n\tfunction symbol() external view returns (string memory) {\r\n\t\treturn SYMBOL;\r\n\t}\r\n\t\r\n\t//ERC20: Returns the decimals of the token.\r\n\t//ERC20: \uD1A0\uD070\uC758 \uC18C\uC218\uC810 \uBC18\uD658\r\n\tfunction decimals() external view returns (uint8) {\r\n\t\treturn DECIMALS;\r\n\t}\r\n\t\r\n\t//ERC20: Returns the total number of tokens.\r\n\t//ERC20: \uC804\uCCB4 \uD1A0\uD070 \uC218 \uBC18\uD658\r\n\tfunction totalSupply() external view returns (uint) {\r\n\t\treturn TOTAL_SUPPLY;\r\n\t}\r\n\t\r\n\t//ERC20: Returns the number of tokens of a specific user.\r\n\t//ERC20: \uD2B9\uC815 \uC720\uC800\uC758 \uD1A0\uD070 \uC218\uB97C \uBC18\uD658\uD569\uB2C8\uB2E4.\r\n\tfunction balanceOf(address user) external view returns (uint balance) {\r\n\t\treturn balances[user];\r\n\t}\r\n\t\r\n\t//ERC20: Transmits tokens to a specific user.\r\n\t//ERC20: \uD2B9\uC815 \uC720\uC800\uC5D0\uAC8C \uD1A0\uD070\uC744 \uC804\uC1A1\uD569\uB2C8\uB2E4.\r\n\tfunction transfer(address to, uint amount) external returns (bool success) {\r\n\t\t\r\n\t\t// Blocks misuse of an address.\r\n\t\t// \uC8FC\uC18C \uC624\uC6A9 \uCC28\uB2E8\r\n\t\trequire(checkAddressMisused(to) != true);\r\n\t\t\r\n\t\trequire(amount \u003C= balances[msg.sender]);\r\n\t\t\r\n\t\tbalances[msg.sender] = balances[msg.sender].sub(amount);\r\n\t\tbalances[to] = balances[to].add(amount);\r\n\t\t\r\n\t\temit Transfer(msg.sender, to, amount);\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\t//ERC20: Grants rights to send the amount of tokens to the spender.\r\n\t//ERC20: spender\uC5D0 amount\uB9CC\uD07C\uC758 \uD1A0\uD070\uC744 \uBCF4\uB0BC \uAD8C\uB9AC\uB97C \uBD80\uC5EC\uD569\uB2C8\uB2E4.\r\n\tfunction approve(address spender, uint amount) external returns (bool success) {\r\n\t\t\r\n\t\tallowed[msg.sender][spender] = amount;\r\n\t\t\r\n\t\temit Approval(msg.sender, spender, amount);\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\t//ERC20: Returns the quantity of tokens to the spender\r\n\t//ERC20: spender\uAC00 \uC778\uCD9C\uD558\uB3C4\uB85D \uD5C8\uB77D \uBC1B\uC740 \uD1A0\uD070\uC758 \uC591\uC744 \uBC18\uD658\uD569\uB2C8\uB2E4.\r\n\tfunction allowance(address user, address spender) external view returns (uint remaining) {\r\n\t\t\r\n\t\tif (\r\n\t\t// DPlay \uC2A4\uD1A0\uC5B4\uC640 \uAD50\uC5ED\uC18C\uB294 \uBAA8\uB4E0 \uD1A0\uD070\uC744 \uC804\uC1A1\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.\r\n\t\tspender == dplayStore ||\r\n\t\tspender == dplayTradingPost) {\r\n\t\t\treturn balances[user];\r\n\t\t}\r\n\t\t\r\n\t\treturn allowed[user][spender];\r\n\t}\r\n\t\r\n\t//ERC20: The allowed spender sends the \u0022amount\u0022 of tokens from the \u0022from\u0022 to the \u0022to\u0022.\r\n\t//ERC20: \uD5C8\uB77D\uB41C spender\uAC00 from\uC73C\uB85C\uBD80\uD130 amount\uB9CC\uD07C\uC758 \uD1A0\uD070\uC744 to\uC5D0\uAC8C \uC804\uC1A1\uD569\uB2C8\uB2E4.\r\n\tfunction transferFrom(address from, address to, uint amount) external returns (bool success) {\r\n\t\t\r\n\t\t// Blocks misuse of an address.\r\n\t\t// \uC8FC\uC18C \uC624\uC6A9 \uCC28\uB2E8\r\n\t\trequire(checkAddressMisused(to) != true);\r\n\t\t\r\n\t\trequire(amount \u003C= balances[from]);\r\n\t\t\r\n\t\trequire(\r\n\t\t\t// DPlay \uC2A4\uD1A0\uC5B4\uC640 \uAD50\uC5ED\uC18C\uB294 \uBAA8\uB4E0 \uD1A0\uD070\uC744 \uC804\uC1A1\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.\r\n\t\t\tmsg.sender == dplayStore ||\r\n\t\t\tmsg.sender == dplayTradingPost ||\r\n\t\t\t\r\n\t\t\tamount \u003C= allowed[from][msg.sender]\r\n\t\t);\r\n\t\t\r\n\t\tbalances[from] = balances[from].sub(amount);\r\n\t\tbalances[to] = balances[to].add(amount);\r\n\t\t\r\n\t\tif (\r\n\t\t\tmsg.sender != dplayStore \u0026\u0026\r\n\t\t\tmsg.sender != dplayTradingPost\r\n\t\t) {\r\n\t\t\tallowed[from][msg.sender] = allowed[from][msg.sender].sub(amount);\r\n\t\t}\r\n\t\t\r\n\t\temit Transfer(from, to, amount);\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\t//ERC165: Checks if the given interface has been implemented.\r\n\t//ERC165: \uC8FC\uC5B4\uC9C4 \uC778\uD130\uD398\uC774\uC2A4\uAC00 \uAD6C\uD604\uB418\uC5B4 \uC788\uB294\uC9C0 \uD655\uC778\uD569\uB2C8\uB2E4.\r\n\tfunction supportsInterface(bytes4 interfaceID) external view returns (bool) {\r\n\t\treturn\r\n\t\t\t// ERC165\r\n\t\t\tinterfaceID == this.supportsInterface.selector ||\r\n\t\t\t// ERC20\r\n\t\t\tinterfaceID == 0x942e8b22 ||\r\n\t\t\tinterfaceID == 0x36372b07;\r\n\t}\r\n\t\r\n\t// Returns the DC power.\r\n\t// DC \uD30C\uC6CC\uB97C \uBC18\uD658\uD569\uB2C8\uB2E4.\r\n\tfunction getPower(address user) external view returns (uint power) {\r\n\t\treturn balances[user];\r\n\t}\r\n\t\r\n\t// Creates DCs for testing.\r\n\t// \uD14C\uC2A4\uD2B8\uC6A9 DC\uB97C \uC0DD\uC131\uD569\uB2C8\uB2E4.\r\n\tfunction createDCForTest(uint amount) external {\r\n\t\tif (network == Network.Mainnet) {\r\n\t\t\trevert();\r\n\t\t} else {\r\n\t\t\tbalances[msg.sender] \u002B= amount;\r\n\t\t}\r\n\t}\r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022interfaceID\u0022,\u0022type\u0022:\u0022bytes4\u0022}],\u0022name\u0022:\u0022supportsInterface\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022name\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022approve\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022totalSupply\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transferFrom\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022addr\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022setDPlayTradingPostOnce\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022decimals\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint8\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022getPower\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022power\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022network\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint8\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022balanceOf\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022balance\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022symbol\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transfer\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022createDCForTest\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022addr\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022setDPlayStoreOnce\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022dplayStore\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022spender\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022allowance\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022remaining\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022dplayTradingPost\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Transfer\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Approval\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"DPlayCoin","CompilerVersion":"v0.5.9\u002Bcommit.e560f70d","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://dd0cf612ea801cb3eb071890f1c6ba7b056fec0ba556eb18a1c800722adf3715"}]