[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2019-10-28\r\n*/\r\n\r\npragma solidity 0.5.0;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b \u003E 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c \u002B a % b); // There is no case in which this doesn\u0027t hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b \u003C= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a \u002B b;\r\n    assert(c \u003E= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract Token{\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n}\r\n\r\n\r\n/**\r\n * @title token token initial distribution\r\n *\r\n * @dev Distribute purchasers, airdrop, reserve, and founder tokens\r\n */\r\ncontract Airdrop { \r\n  using SafeMath for uint256;\r\n  Token public token;\r\n  \r\n  event Airdropped(address _tokenContractAdd, address _recipient, uint256 _tokens);\r\n\r\n  /**\r\n    * @dev perform a transfer of allocations\r\n    * @param _recipient is a list of recipients\r\n    * @param _tokens is list of tokens to sent to recipients\r\n    */\r\n  function airdropTokens(address _tokenContractAdd, address[] memory _recipient, uint256[] memory _tokens) public {\r\n    token = Token(_tokenContractAdd);\r\n    for(uint256 i = 0; i\u003C _recipient.length; i\u002B\u002B)\r\n    {\r\n          require(token.transferFrom(msg.sender, _recipient[i], _tokens[i]));\r\n          emit Airdropped(_tokenContractAdd, _recipient[i], _tokens[i]);\r\n    }\r\n  }\r\n}","ABI":"[{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_tokenContractAdd\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_recipient\u0022,\u0022type\u0022:\u0022address[]\u0022},{\u0022name\u0022:\u0022_tokens\u0022,\u0022type\u0022:\u0022uint256[]\u0022}],\u0022name\u0022:\u0022airdropTokens\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022token\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:false,\u0022name\u0022:\u0022_tokenContractAdd\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022_recipient\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022_tokens\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Airdropped\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"Airdrop","CompilerVersion":"v0.5.0\u002Bcommit.1d4f565a","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://58050fd2653475dbc4aa77ad91b825e84a9fddaaea79d41e3738cb9239867d56"}]