[{"SourceCode":"pragma solidity ^0.5.10;\r\n\r\n// GOA TOKEN \r\n\r\n/* \r\n\r\nDeflationary token to be used in the Eggoa game (name TBD) to be released on Ethereum by mid-2020.\r\n\r\nWhen the Eggoa game releases, token holders will be able to mint unique NFTs by destroying Goa tokens.\r\n(1 GOA = 1 NFT)\r\nAdditionally, Goa tokens may be used as voting rights, as well as other game advantages.\r\n\r\nGoa tokens can be bought directly from the contract, for a rising price proportional to the number of tokens sold.\r\nEach Goa token costs \u002B0.000001 ETH.\r\nToken #2000 will cost 0.002 ETH, token #5000 will cost 0.005 ETH, token #18000 will cost 0.018 ETH, and so on.\r\nContract only sells tokens as integers, but tokens can be traded as decimals.\r\n\r\n----------------------------------------------------------------------------\r\nGoa Token URL = https://eggforce.github.io/goatoken (subject to change)\r\nDiscord link = https://discord.gg/JU8P4Ru (probably permanent)\r\nTweet @ me and take credit for being the one guy who reads smart contracts = @eskaroy\r\n----------------------------------------------------------------------------\r\n\r\n*/\r\n\r\nlibrary SafeMath {\r\n\r\n    function add(uint a, uint b) internal pure returns (uint c) {\r\n        c = a \u002B b;\r\n        require(c \u003E= a);\r\n    }\r\n\r\n    function sub(uint a, uint b) internal pure returns (uint c) {\r\n        require(b \u003C= a);\r\n        c = a - b;\r\n    }\r\n\r\n    function mul(uint a, uint b) internal pure returns (uint c) {\r\n        c = a * b;\r\n        require(a == 0 || c / a == b);\r\n    }\r\n\r\n    function div(uint a, uint b) internal pure returns (uint c) {\r\n        require(b \u003E 0);\r\n        c = a / b;\r\n    }\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// ERC Token Standard #20 Interface\r\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\r\n// ----------------------------------------------------------------------------\r\n\r\ncontract ERC20Interface {\r\n\r\n    function transfer(address to, uint tokens) public returns (bool success);\r\n    function approve(address spender, uint tokens) public returns (bool success);\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint tokens);\r\n    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Contract function to receive approval and execute function in one call\r\n// ----------------------------------------------------------------------------\r\n\r\ncontract ApproveAndCallFallBack {\r\n    function receiveApproval(address from, uint256 tokens, address token, bytes memory data) public;\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Owned contract\r\n// ----------------------------------------------------------------------------\r\n\r\ncontract Owned {\r\n\r\n    address payable public owner;\r\n    address payable public newOwner;\r\n\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner, \u0022must be owner\u0022);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address payable _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner, \u0022must be new owner\u0022);\r\n        \r\n        owner = newOwner;\r\n        newOwner = address(0);\r\n\r\n        emit OwnershipTransferred(owner, newOwner);\r\n    }\r\n}\r\n\r\n// ----------------------------------------------------------------------------\r\n// Standard ERC20 Token contract, with extra functions for minting new tokens\r\n// ----------------------------------------------------------------------------\r\n\r\ncontract GoaToken is ERC20Interface, Owned {\r\n\r\n    using SafeMath for uint;\r\n\r\n    string constant public symbol       = \u0022GOA\u0022;\r\n    string constant public name         = \u0022Goa Token\u0022;\r\n    uint constant public decimals       = 18;\r\n    uint constant public MAX_SUPPLY     = 200000 * 10 ** decimals;\r\n    uint constant public ETH_PER_TOKEN  = 0.000001 ether;\r\n    \r\n    uint public totalSupply; //initially set to 0, tokens are minted through buying from the contract\r\n\tuint public mintSupply; //tracks minted tokens, not affected by burns\r\n\t\r\n\tbool public contractActive; //tokens can only be minted when this is true\r\n\r\n    mapping(address =\u003E uint) public balanceOf; // token balance\r\n    mapping(address =\u003E mapping(address =\u003E uint)) public allowance;\r\n    \r\n    event Minted(address indexed newHolder, uint eth, uint tokens);\r\n    event Burned(address indexed burner, uint tokens);\r\n\r\n    //-- constructor\r\n    constructor() public {\r\n\t\tcontractActive = true;\r\n    }\r\n\r\n    //-- transfer\r\n    // Transfer \u0022tokens\u0022 from token owner\u0027s account to \u0022to\u0022 account\r\n    // Owner\u0027s account must have sufficient balance to transfer\r\n    // 0 value transfers are allowed\r\n\r\n    function transfer(address to, uint tokens) public returns (bool success) {\r\n        balanceOf[msg.sender] = balanceOf[msg.sender].sub(tokens);\r\n        balanceOf[to] = balanceOf[to].add(tokens);\r\n\r\n        emit Transfer(msg.sender, to, tokens);\r\n\r\n        return true;\r\n    }\r\n\r\n    //-- approve\r\n    // Token owner can approve for \u0022spender\u0022 to transferFrom(...) or burn(...) \u0022tokens\u0022\r\n    // from the token owner\u0027s account\r\n    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\r\n    // recommends that there are no checks for the approval double-spend attack\r\n    // as this should be implemented in user interfaces\r\n\r\n    function approve(address spender, uint tokens) public returns (bool success) {\r\n        allowance[msg.sender][spender] = tokens;\r\n\r\n        emit Approval(msg.sender, spender, tokens);\r\n\r\n        return true;\r\n    }\r\n\r\n    //-- transferFrom\r\n    // Transfer \u0022tokens\u0022 tokens from the \u0022from\u0022 account to the \u0022to\u0022 account\r\n    // From account must have sufficient balance to transfer\r\n    // Spender must have sufficient allowance to transfer\r\n    // 0 value transfers are allowed\r\n\r\n    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\r\n        balanceOf[from] = balanceOf[from].sub(tokens);\r\n        allowance[from][msg.sender] = allowance[from][msg.sender].sub(tokens);\r\n        balanceOf[to] = balanceOf[to].add(tokens);\r\n\r\n        emit Transfer(from, to, tokens);\r\n\r\n        return true;\r\n    }\r\n\r\n    //-- approveAndCall\r\n    // Token owner can approve for \u0022spender\u0022 to transferFrom(...) \u0022tokens\u0022 tokens\r\n    // from the token owner\u0027s account. The \u0022spender\u0022 contract function\r\n    // \u0022receiveApproval(...)\u0022\u0022 is then executed\r\n\r\n    function approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success) {\r\n        allowance[msg.sender][spender] = tokens;\r\n\r\n        emit Approval(msg.sender, spender, tokens);\r\n\r\n        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, address(this), data);\r\n\r\n        return true;\r\n    }\r\n\r\n    //-- mint\r\n    // Transfer ETH to receive a given amount of tokens in exchange\r\n    // Token amount must be integers, no decimals\r\n    // Current token cost is determined through computeCost, frontend sets the proper ETH amount to send\r\n\r\n    function mint(uint fullToken) public payable {\r\n        require(contractActive == true, \u0022token emission has been disabled\u0022);\r\n        \r\n        uint _token = fullToken.mul(10 ** decimals);\r\n        uint _newSupply = mintSupply.add(_token);\r\n        require(_newSupply \u003C= MAX_SUPPLY, \u0022no more than 200 000 GOA can be minted\u0022);\r\n\r\n        uint _ethCost = computeCost(fullToken);\r\n        require(msg.value == _ethCost, \u0022wrong ETH amount for tokens\u0022);\r\n        \r\n        owner.transfer(msg.value);\r\n        totalSupply = totalSupply.add(_token);\r\n\t\tmintSupply = _newSupply;\r\n        balanceOf[msg.sender] = balanceOf[msg.sender].add(_token);\r\n        \r\n        emit Minted(msg.sender, msg.value, fullToken);\r\n    }\r\n    \r\n\t//-- burn\r\n\t// Remove fullToken from sender\r\n\t// Lower totalSupply accordingly\r\n\t\r\n\tfunction burn(uint fullToken) public returns (bool success) {\r\n\t\tuint _token = fullToken.mul(10 ** decimals);\r\n\t\trequire(balanceOf[msg.sender] \u003E= _token, \u0022not enough tokens to burn\u0022);\r\n\t\t\r\n\t    totalSupply = totalSupply.sub(_token);\t\r\n\t\tbalanceOf[msg.sender] = balanceOf[msg.sender].sub(_token);\r\n\t\t\r\n\t\temit Burned(msg.sender, fullToken);\r\n\t\t\r\n\t\treturn true;\r\n    }\r\n    \r\n    //-- burnFrom\r\n    // Remove fullToken from account\r\n    // Sender must have fullToken * decimals allowance from account\r\n    // Lower totalSupply accordingly\r\n    \r\n    function burnFrom(address _from, uint fullToken) public returns (bool success) {\r\n        uint _token = fullToken.mul(10 ** decimals);\r\n        require(allowance[_from][msg.sender] \u003E= _token, \u0022allowance too low to burn this many tokens\u0022);\r\n        require(balanceOf[_from] \u003E= _token, \u0022not enough tokens to burn\u0022);\r\n        \r\n        allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(_token);\r\n        balanceOf[_from] = balanceOf[_from].sub(_token);\r\n        totalSupply = totalSupply.sub(_token);\r\n        \r\n        emit Burned(_from, fullToken);\r\n        \r\n        return true;\r\n    }\r\n\t\r\n\t//-- stopEmission\r\n\t// Blocks new tokens from being minted\r\n\t\r\n\tfunction stopEmission() public onlyOwner returns (bool success) {\r\n\t\tcontractActive = false;\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n    //-- computeSum\r\n    // Return (n * n\u002B1) / 2 sum starting at a and ending at b, excluding a\r\n    \r\n    function computeSum(uint256 a, uint256 b) public pure returns(uint256) {\r\n        uint256 _sumA = a.mul(a.add(1)).div(2);\r\n        uint256 _sumB = b.mul(b.add(1)).div(2);\r\n        return _sumB.sub(_sumA);\r\n    }\r\n    \r\n    //-- computeCost\r\n    // Return ETH cost to buy given amount of full tokens (no decimals)\r\n    \r\n    function computeCost(uint256 fullToken) public view returns(uint256) {\r\n        uint256 _intSupply = mintSupply.div(10 ** decimals);\r\n        uint256 _current = fullToken.add(_intSupply);\r\n        uint256 _sum = computeSum(_intSupply, _current);\r\n        return ETH_PER_TOKEN.mul(_sum);\r\n    }\r\n        \r\n    //-- transferAnyERC20Token\r\n    // Owner can transfer out any accidentally sent ERC20 tokens\r\n\r\n    function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\r\n        return ERC20Interface(tokenAddress).transfer(owner, tokens);\r\n    }\r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022a\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022b\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022computeSum\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022pure\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022mintSupply\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022name\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022tokens\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022approve\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022stopEmission\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022totalSupply\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022tokens\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transferFrom\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022decimals\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022MAX_SUPPLY\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022ETH_PER_TOKEN\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022fullToken\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022burn\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022balanceOf\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022acceptOwnership\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022fullToken\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022burnFrom\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022owner\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022symbol\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022fullToken\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022mint\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022tokens\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transfer\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022fullToken\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022computeCost\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022tokens\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022data\u0022,\u0022type\u0022:\u0022bytes\u0022}],\u0022name\u0022:\u0022approveAndCall\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022newOwner\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022tokenAddress\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022tokens\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transferAnyERC20Token\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022success\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022allowance\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022contractActive\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022transferOwnership\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022newHolder\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022eth\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022tokens\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Minted\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022burner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022tokens\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Burned\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022_from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022OwnershipTransferred\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022tokens\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Transfer\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022tokenOwner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022tokens\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Approval\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"GoaToken","CompilerVersion":"v0.5.10\u002Bcommit.5a6ea5b1","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://7fccda132f5b4a6234dd1ef9cc297549b569b4ce27c210912289d457e40b2b88"}]