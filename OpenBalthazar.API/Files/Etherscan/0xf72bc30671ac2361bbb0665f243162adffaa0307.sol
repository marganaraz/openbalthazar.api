[{"SourceCode":"pragma solidity ^ 0.5.8;\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract Dates {\r\n    uint constant DAY_IN_SECONDS = 86400;\r\n\r\n    function getNow() public view returns(uint) {\r\n        return now;\r\n    }\r\n\r\n    function getDelta(uint _date) public view returns(uint) {\r\n        // now - date\r\n        return (now / DAY_IN_SECONDS) - (_date / DAY_IN_SECONDS);\r\n    }\r\n}\r\n\r\n\r\n\r\ncontract EventInterface {\r\n    event Activation(address indexed user);\r\n    event FirstActivation(address indexed user);\r\n    event Refund(address indexed user, uint indexed amount);\r\n    event LossOfReward(address indexed user, uint indexed amount);\r\n    event LevelUp(address indexed user, uint indexed level);\r\n    event AcceptLevel(address indexed user);\r\n    event ToFund(uint indexed amount);\r\n    event ToReferrer(address indexed user, uint indexed amount);\r\n    event HardworkerSeq(address indexed user, uint indexed sequence, uint indexed title);\r\n    event ComandosSeq(address indexed user, uint indexed sequence, uint indexed title);\r\n    event EveryDaySeq(address indexed user);\r\n    event CustomerSeq(address indexed user, uint indexed sequence);\r\n    event DaredevilSeq(address indexed user, uint indexed sequence, uint indexed achievement);\r\n    event NovatorSeq(address indexed user, uint indexed sequence, uint indexed achievement);\r\n    event ScoreConverted(address indexed user, uint indexed eth);\r\n    event ScoreEarned(address indexed user);\r\n}\r\n\r\ncontract Owned {\r\n    address public owner;\r\n    address public oracul;\r\n    uint public cashbox;\r\n    uint public kickback;\r\n    uint public rest;\r\n    address public newOwner;\r\n    uint public lastTxTime;\r\n    uint idleTime = 7776000; // 90 days\r\n\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n    event OraculChanged(address indexed _oracul);\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    modifier onlyOracul {\r\n        require(msg.sender == oracul);\r\n        _;\r\n    }\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = address(0);\r\n    }\r\n    function refundFromCashbox() public onlyOwner {\r\n        msg.sender.transfer(cashbox);\r\n        cashbox = 0;\r\n    }\r\n    function refundFromKickback() public onlyOwner {\r\n        msg.sender.transfer(kickback);\r\n        kickback = 0;\r\n    }\r\n    function refundFromRest() public onlyOwner {\r\n        msg.sender.transfer(rest);\r\n        rest = 0;\r\n    }\r\n    function setOracul(address _newOracul) public onlyOwner {\r\n        oracul = _newOracul;\r\n        emit OraculChanged(_newOracul);\r\n    }\r\n    function suicideContract() public onlyOwner {\r\n        if (now - lastTxTime \u003C  idleTime) {\r\n            revert();\r\n        } else {\r\n            selfdestruct(msg.sender);\r\n        }\r\n    }\r\n}\r\n\r\n\r\ncontract QuestBot is EventInterface, Owned, Dates {\r\n    uint public Fund;\r\n    uint public activationPrice = 40000000000000000;\r\n    uint public activationTime = 28 days;\r\n    uint public comission = 15;\r\n    address[] public members;\r\n    \r\n\r\n    uint public AllScore;\r\n\r\n    struct Hardworker {\r\n        uint time;\r\n        uint seq;\r\n        uint title;\r\n    }\r\n\r\n    struct Comandos {\r\n        uint time;\r\n        uint seq;\r\n        uint count;\r\n        uint title;\r\n    }\r\n\r\n    struct RegularCustomer {\r\n        uint seq;\r\n        uint title;\r\n    }\r\n\r\n    struct Referrals {\r\n        uint daredevil;\r\n        uint novator;\r\n        uint mastermind;\r\n        uint sensei;\r\n        uint guru;\r\n    }\r\n\r\n    struct Info {\r\n        // level =\u003E count\r\n        mapping(uint =\u003E uint) referralsCount;\r\n        address referrer;\r\n        uint level;\r\n        uint line;\r\n        bool isLevelUp;\r\n        uint new_level;\r\n        uint balance;\r\n        uint score;\r\n        uint earned;\r\n        address[] referrals;\r\n        uint activationEnds;\r\n    }\r\n\r\n    struct AllTime {\r\n        uint score;\r\n        uint scoreConverted;\r\n    }\r\n\r\n    struct User {\r\n        Hardworker hardworker;\r\n        Comandos comandos;\r\n        RegularCustomer customer;\r\n        Referrals referrals;\r\n        Info info;\r\n        AllTime alltime;\r\n    }\r\n\r\n    mapping(address =\u003E User) users;\r\n\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n        oracul = msg.sender;\r\n\r\n        users[msg.sender].info.level = 4;\r\n        users[msg.sender].info.referralsCount[1] = 1;\r\n        users[msg.sender].info.line = 1;\r\n        users[msg.sender].info.activationEnds = now \u002B 50000 days;\r\n\r\n        users[msg.sender].hardworker.time = 0;\r\n        users[msg.sender].hardworker.seq = 0;\r\n        users[msg.sender].hardworker.title = 0;\r\n\r\n        users[msg.sender].comandos.time = 0;\r\n        users[msg.sender].comandos.seq = 0;\r\n        users[msg.sender].comandos.count = 0;\r\n        users[msg.sender].comandos.title = 0;\r\n\r\n        users[msg.sender].customer.seq = 0;\r\n        users[msg.sender].customer.title = 0;\r\n\r\n        users[msg.sender].referrals.daredevil = 0;\r\n        users[msg.sender].referrals.novator = 0;\r\n\r\n        lastTxTime = now;\r\n    }\r\n\r\n    function canSuicide() public view returns(bool) {\r\n        if (now - lastTxTime \u003C  idleTime) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n\r\n    // ACHIEVE HANDLERS\r\n    function hardworkerPath(address _user) public {\r\n        uint delta = getDelta(users[_user].hardworker.time);\r\n\r\n        if (delta == 0) {\r\n            return;\r\n        }\r\n\r\n        if (delta == 1) {\r\n            // calculate some stuff\r\n            users[_user].hardworker.time = now;\r\n            users[_user].hardworker.seq\u002B\u002B;\r\n\r\n            if (users[_user].hardworker.seq % 7 == 0 \u0026\u0026 users[_user].hardworker.seq \u003E 0 \u0026\u0026 users[_user].hardworker.seq \u003C 42) {\r\n                users[_user].info.score \u002B= 100;\r\n                users[_user].alltime.score \u002B= 100;\r\n                AllScore \u002B= 100;\r\n                emit ScoreEarned(_user);\r\n                emit HardworkerSeq(_user, users[_user].hardworker.seq, users[_user].hardworker.title);\r\n                return;\r\n            }\r\n\r\n            if (users[_user].hardworker.seq == 42) {\r\n                users[_user].hardworker.title\u002B\u002B;\r\n                users[_user].hardworker.seq = 0;\r\n                users[_user].info.score \u002B= 100;\r\n                users[_user].alltime.score \u002B= 100;\r\n            \r\n                emit ScoreEarned(_user);\r\n                AllScore \u002B= 100;\r\n                emit HardworkerSeq(_user, users[_user].hardworker.seq, users[_user].hardworker.title);\r\n                return;\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (delta \u003E= 2) {\r\n            // reset seq\r\n            users[_user].hardworker.time = now;\r\n            users[_user].hardworker.seq = 1;\r\n            return;\r\n        }\r\n    }\r\n\r\n    function everyDay(address _user) public {\r\n        if (users[_user].comandos.count % 2 == 0 \u0026\u0026 users[_user].comandos.count \u003E 0) {\r\n            users[_user].info.score \u002B= 100;\r\n            users[_user].alltime.score \u002B= 100; \r\n            AllScore \u002B= 100;     \r\n            emit ScoreEarned(_user);\r\n            emit EveryDaySeq(_user);\r\n            return;\r\n        }\r\n    }\r\n\r\n    function comandosPath(address _user) public {\r\n        uint delta = getDelta(users[_user].comandos.time);\r\n\r\n        // Comandos\r\n        /**\r\n            If last activation was yesterday and count less than 2 - reset sequence.\r\n            Set count to one and time to current(because it activation now)\r\n        */\r\n        if (delta == 1) {\r\n            if (users[_user].comandos.count \u003C 2) {\r\n                users[_user].comandos.seq = 0;\r\n            }\r\n            users[_user].comandos.time = now;\r\n            users[_user].comandos.count = 1;\r\n            return;\r\n        }\r\n        /**\r\n            If last activation today - increment count.\r\n            If count \u003E= 2 - increment  sequence and check all.\r\n        */\r\n        if (delta == 0) {\r\n            users[_user].comandos.count\u002B\u002B;\r\n            users[_user].comandos.time = now;\r\n            if (users[_user].comandos.count == 2) {\r\n                users[_user].comandos.seq\u002B\u002B;\r\n\r\n                if (users[_user].comandos.seq % 7 == 0 \u0026\u0026 users[_user].comandos.seq \u003E 0 \u0026\u0026 users[_user].comandos.seq \u003C 42) {\r\n                    users[_user].info.score \u002B= 100;\r\n                    users[_user].alltime.score \u002B= 100;\r\n                    AllScore \u002B= 100;\r\n                    emit ScoreEarned(_user);\r\n                    emit ComandosSeq(_user, users[_user].comandos.seq, users[_user].comandos.title);\r\n                    return;\r\n                }\r\n                if (users[_user].comandos.seq == 42) {\r\n                    users[_user].comandos.title\u002B\u002B;\r\n                    users[_user].info.score \u002B= 100;\r\n                    users[_user].alltime.score \u002B= 100;\r\n                    AllScore \u002B= 100;\r\n                    emit ScoreEarned(_user);\r\n                    users[_user].comandos.seq = 0;\r\n                    emit ComandosSeq(_user, users[_user].comandos.seq, users[_user].comandos.title);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (delta \u003E= 2) {\r\n            // reset seq\r\n            users[_user].comandos.time = now;\r\n            users[_user].comandos.count = 1;\r\n            users[_user].comandos.seq = 0;\r\n            return;\r\n        }\r\n    }\r\n\r\n    function regularCustomer(address _user) public {\r\n        users[_user].info.score \u002B= 100;\r\n        users[_user].alltime.score \u002B= 100;\r\n        AllScore \u002B= 100;\r\n        emit ScoreEarned(_user);\r\n\r\n        if (isActive(_user) == true) {\r\n            users[_user].customer.seq\u002B\u002B;\r\n            if (users[_user].customer.seq == 12) {\r\n                users[_user].customer.title = 1; \r\n\r\n                users[_user].info.score \u002B= 100;\r\n                users[_user].alltime.score \u002B= 100;\r\n\r\n                AllScore \u002B= 100;\r\n                emit ScoreEarned(_user);   \r\n            }\r\n            \r\n        } else {\r\n            users[_user].customer.seq = 1;\r\n        }\r\n        emit CustomerSeq(_user, users[_user].customer.seq);\r\n    }\r\n\r\n    function forDaredevil(address _user) public {\r\n        users[_user].referrals.daredevil\u002B\u002B;\r\n        if (users[_user].referrals.daredevil == 100) {\r\n            users[_user].info.score \u002B= 100;\r\n            users[_user].alltime.score \u002B= 100;\r\n            AllScore \u002B= 100;\r\n            emit ScoreEarned(_user);\r\n            emit DaredevilSeq(_user, users[_user].referrals.daredevil, 1);\r\n            return;\r\n        }\r\n        if (users[_user].referrals.daredevil == 250) {\r\n            users[_user].info.score \u002B= 100;\r\n            users[_user].alltime.score \u002B= 100;\r\n            AllScore \u002B= 100;\r\n            emit ScoreEarned(_user);\r\n            emit DaredevilSeq(_user, users[_user].referrals.daredevil, 2);\r\n            return;\r\n        }\r\n        if (users[_user].referrals.daredevil == 500) {\r\n            users[_user].info.score \u002B= 100;\r\n            users[_user].alltime.score \u002B= 100;\r\n            AllScore \u002B= 100;\r\n            emit ScoreEarned(_user);\r\n            emit DaredevilSeq(_user, users[_user].referrals.daredevil, 3);\r\n            return;\r\n        }\r\n        if (users[_user].referrals.daredevil == 1000) {\r\n            users[_user].info.score \u002B= 100;\r\n            users[_user].alltime.score \u002B= 100;\r\n            AllScore \u002B= 100;     \r\n            emit ScoreEarned(_user);\r\n            emit DaredevilSeq(_user, users[_user].referrals.daredevil, 4);\r\n            return;\r\n        }\r\n        if (users[_user].referrals.daredevil == 1500) {\r\n            users[_user].info.score \u002B= 100;\r\n            users[_user].alltime.score \u002B= 100;\r\n            AllScore \u002B= 100;\r\n            emit ScoreEarned(_user);\r\n            emit DaredevilSeq(_user, users[_user].referrals.daredevil, 5);\r\n            return;\r\n        }\r\n    }\r\n\r\n    function forNovator(address _user) public {\r\n        users[_user].referrals.novator\u002B\u002B;\r\n        if (users[_user].referrals.novator == 25) {\r\n            users[_user].info.score \u002B= 100;\r\n            users[_user].alltime.score \u002B= 100;\r\n            AllScore \u002B= 100;\r\n            emit ScoreEarned(_user);\r\n            emit NovatorSeq(_user, users[_user].referrals.novator, 1);\r\n            return;\r\n        }\r\n        if (users[_user].referrals.novator == 50) {\r\n            users[_user].info.score \u002B= 100;\r\n            users[_user].alltime.score \u002B= 100;\r\n            AllScore \u002B= 100;\r\n            emit ScoreEarned(_user);\r\n            emit NovatorSeq(_user, users[_user].referrals.novator, 2);\r\n            return;\r\n        }\r\n        if (users[_user].referrals.novator == 100) {\r\n            users[_user].info.score \u002B= 100;\r\n            users[_user].alltime.score \u002B= 100;\r\n            AllScore \u002B= 100;\r\n            emit ScoreEarned(_user);\r\n            emit NovatorSeq(_user, users[_user].referrals.novator, 3);\r\n            return;\r\n        }\r\n        if (users[_user].referrals.novator == 200) {\r\n            users[_user].info.score \u002B= 100;\r\n            users[_user].alltime.score \u002B= 100;\r\n            AllScore \u002B= 100;\r\n            emit ScoreEarned(_user);\r\n            emit NovatorSeq(_user, users[_user].referrals.novator, 4);\r\n            return;\r\n        }\r\n        if (users[_user].referrals.novator == 300) {\r\n            users[_user].info.score \u002B= 100;\r\n            users[_user].alltime.score \u002B= 100;\r\n            AllScore \u002B= 100;\r\n            emit ScoreEarned(_user);\r\n            emit NovatorSeq(_user, users[_user].referrals.novator, 5);\r\n            return;\r\n        }\r\n    }\r\n\r\n    // Combined calls for referrer\r\n    function checkReferrerAcv(address _user) public {\r\n        if (isActive(_user) == false) {\r\n            return;\r\n        }\r\n        \r\n        hardworkerPath(_user);\r\n        comandosPath(_user);\r\n        everyDay(_user);\r\n        forDaredevil(_user);\r\n    }\r\n\r\n    // =========== Getters\r\n    function getMembers() public view returns(address[] memory) {\r\n        return members;\r\n    }\r\n\r\n    function getMembersCount() public view returns(uint) {\r\n        return members.length;\r\n    }\r\n\r\n    function getHardworker(address _user) public view returns(Hardworker memory) {\r\n        return users[_user].hardworker;\r\n    }\r\n\r\n    function getComandos(address _user) public view returns(Comandos memory) {\r\n        return users[_user].comandos;\r\n    }\r\n\r\n    function getCustomer(address _user) public view returns(RegularCustomer memory) {\r\n        return users[_user].customer;\r\n    }\r\n\r\n    function getReferrals(address _user) public view returns(uint, uint, uint, uint, uint) {\r\n        return (users[_user].referrals.daredevil, users[_user].referrals.novator, users[_user].referrals.mastermind, users[_user].referrals.sensei, users[_user].referrals.guru);\r\n    }\r\n\r\n    function getScore(address _user) public view returns(uint) {\r\n        return users[_user].info.score;\r\n    }\r\n\r\n    function getAlltime(address _user) public view returns(uint, uint) {\r\n        return (users[_user].alltime.score, users[_user].alltime.scoreConverted);\r\n    }\r\n\r\n    function getPayAmount(address _user) public view returns(uint) {\r\n        if (users[_user].info.earned / 100 * 10 \u003E activationPrice) {\r\n            return users[_user].info.earned / 100 * 10;\r\n        } else {\r\n            return activationPrice;\r\n        }\r\n    }\r\n    \r\n    function getUser(address user) public view returns (address, uint, uint, uint, address[] memory, uint) {\r\n        return (users[user].info.referrer, users[user].info.level, users[user].info.line, users[user].info.balance, users[user].info.referrals, users[user].info.activationEnds);\r\n    }\r\n\r\n    function getEarned(address user) public view returns (uint) {\r\n        return users[user].info.earned;\r\n    }\r\n\r\n    function getActivationEnds(address user) public view returns (uint) {\r\n        return users[user].info.activationEnds;\r\n    }\r\n\r\n    function getReferralsCount(address user, uint level) public view returns (uint) {\r\n        return users[user].info.referralsCount[level];\r\n    }\r\n\r\n    function isLevelUp(address user) public view returns (bool) {\r\n        return users[user].info.new_level \u003E users[user].info.level;\r\n    }\r\n\r\n    function getNewLevel(address user) public view returns (uint) {\r\n        return users[user].info.new_level;\r\n    }\r\n\r\n\r\n\r\n    // =========== Setters\r\n    function setActivationPrice(uint _newActivationPrice) public onlyOracul {\r\n        activationPrice = _newActivationPrice;\r\n    }\r\n\r\n\r\n    // =========== Functions\r\n    function refund() public {\r\n        require(users[msg.sender].info.balance \u003E 0);\r\n        uint _comission = users[msg.sender].info.balance / 1000 * comission;\r\n        uint _balance = users[msg.sender].info.balance - _comission;\r\n        users[msg.sender].info.balance = 0;\r\n        msg.sender.transfer(_balance);\r\n        kickback \u002B= _comission;\r\n        emit Refund(msg.sender, _balance);\r\n        lastTxTime = now;\r\n    }\r\n\r\n    function howMuchConverted(address _user) public view returns(uint) {\r\n        if (AllScore == 0 || Fund == 0 || users[_user].info.score == 0) {\r\n            return 0;\r\n        } else {\r\n            return (Fund / AllScore) * users[_user].info.score \u002B ((Fund % AllScore) * users[_user].info.score);\r\n        }\r\n    }\r\n\r\n    function exchangeRate() public view returns(uint) {\r\n        if (Fund == 0 || AllScore == 0) {\r\n            return 0;\r\n        }\r\n        return Fund / AllScore;\r\n    }\r\n\r\n    function convertScore() public returns(uint) {\r\n        require(users[msg.sender].info.score \u003E 0);\r\n        users[msg.sender].alltime.scoreConverted = users[msg.sender].info.score;\r\n        uint convertedEther = (Fund / AllScore) * users[msg.sender].info.score;\r\n        users[msg.sender].info.balance \u002B= convertedEther;\r\n        users[msg.sender].info.earned \u002B= convertedEther;\r\n        AllScore -= users[msg.sender].info.score;\r\n        Fund -= convertedEther;\r\n        users[msg.sender].info.score = 0;\r\n        emit ScoreConverted(msg.sender, convertedEther);\r\n        lastTxTime = now;\r\n    }\r\n\r\n    function calculateReferrerLevel(address referrer, uint referralLevel) internal {\r\n\r\n        users[referrer].info.referralsCount[referralLevel]\u002B\u002B;\r\n\r\n        if (users[referrer].info.referralsCount[5] == 6 \u0026\u0026 users[referrer].info.level \u003C 6) {\r\n            users[referrer].info.isLevelUp = true;\r\n            users[referrer].info.new_level = 6;\r\n            emit LevelUp(referrer, 6);\r\n\r\n            return;\r\n        }\r\n\r\n        if (users[referrer].info.referralsCount[4] == 12 \u0026\u0026 users[referrer].info.level \u003C 5) {\r\n            users[referrer].info.isLevelUp = true;\r\n            users[referrer].info.new_level = 5;\r\n            emit LevelUp(referrer, 5);\r\n            return;\r\n        }\r\n\r\n        if (users[referrer].info.referralsCount[3] == 9 \u0026\u0026 users[referrer].info.level \u003C 4) {\r\n            users[referrer].info.isLevelUp = true;\r\n            users[referrer].info.new_level = 4;\r\n            emit LevelUp(referrer, 4);\r\n            return;\r\n        }\r\n\r\n        if (users[referrer].info.referralsCount[2] == 6 \u0026\u0026 users[referrer].info.level \u003C 3) {\r\n            users[referrer].info.isLevelUp = true;\r\n            users[referrer].info.new_level = 3;\r\n            emit LevelUp(referrer, 3);\r\n            return;\r\n        }\r\n\r\n        if (users[referrer].info.referralsCount[1] == 3 \u0026\u0026 users[referrer].info.level \u003C 2) {\r\n            users[referrer].info.isLevelUp = true;\r\n            users[referrer].info.new_level = 2;\r\n            emit LevelUp(referrer, 2);\r\n            return;\r\n        }\r\n        \r\n    }\r\n\r\n    function acceptLevel() public {\r\n        require(isActive(msg.sender) == true);\r\n        require(users[msg.sender].info.isLevelUp == true);\r\n        \r\n        users[msg.sender].info.isLevelUp = false;\r\n        users[msg.sender].info.level = users[msg.sender].info.new_level; \r\n\r\n        // Change state of referrer\r\n        if (users[msg.sender].info.level == 2) {\r\n            forNovator(users[msg.sender].info.referrer);\r\n        }\r\n\r\n        calculateReferrerLevel(users[msg.sender].info.referrer, users[msg.sender].info.level);\r\n        users[msg.sender].info.score \u002B= 100;\r\n        AllScore \u002B= 100;\r\n        emit ScoreEarned(msg.sender);\r\n        emit AcceptLevel(msg.sender);\r\n        lastTxTime = now;\r\n    }\r\n\r\n    \r\n\r\n    function extendActivation(address _user) internal {\r\n        if (users[_user].info.activationEnds \u003C now) {\r\n            users[_user].info.activationEnds = now \u002B activationTime;\r\n            if (users[_user].info.level == 0) {\r\n                users[_user].info.level = 1;\r\n            }\r\n        } else {\r\n            users[_user].info.activationEnds = users[_user].info.activationEnds \u002B activationTime;\r\n            if (users[_user].info.level == 0) {\r\n                users[_user].info.level = 1;\r\n            }\r\n        }\r\n        return;\r\n    }\r\n\r\n    function isActive(address _user) public view returns(bool) {\r\n        if (users[_user].info.activationEnds \u003E now) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function canPay(address user) public view returns(bool) {\r\n        if (users[user].info.activationEnds - 3 days \u003C now) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function toFund(uint amount) internal {\r\n        emit ToFund(amount / 2);\r\n        Fund \u002B= amount / 2;\r\n        cashbox \u002B= amount / 2;\r\n\r\n        if (amount % 2 \u003E 0) {\r\n            rest \u002B= amount % 2;\r\n        }\r\n    }\r\n\r\n    // ============== TO REFERRER\r\n    function toReferrer(address user, uint amount, uint control_level) internal {\r\n        // If activated and grower than control level\r\n        if (isActive(user) == true \u0026\u0026 users[user].info.level \u003E= control_level) {\r\n            emit ToReferrer(user, amount);\r\n            users[user].info.balance \u002B= amount;\r\n            users[user].info.earned \u002B= amount;\r\n        } else {\r\n            toFund(amount);\r\n            emit LossOfReward(user, amount);\r\n        }\r\n    }\r\n\r\n    // ==================== Pay!\r\n    function firstPay(address _referrer) public payable {\r\n        require(users[msg.sender].info.line == 0);\r\n        require(users[_referrer].info.line \u003E 0);\r\n        members.push(msg.sender);\r\n\r\n        users[msg.sender].info.referrer = _referrer;\r\n        users[msg.sender].info.line = users[_referrer].info.line \u002B 1;\r\n        users[msg.sender].info.activationEnds = 3 days;\r\n        users[msg.sender].info.new_level = 0;\r\n\r\n        users[_referrer].info.referrals.push(msg.sender);\r\n\r\n        users[msg.sender].hardworker.time = 0;\r\n        users[msg.sender].hardworker.seq = 0;\r\n        users[msg.sender].hardworker.title = 0;\r\n\r\n        users[msg.sender].comandos.time = 0;\r\n        users[msg.sender].comandos.seq = 0;\r\n        users[msg.sender].comandos.count = 0;\r\n        users[msg.sender].comandos.title = 0;\r\n\r\n        users[msg.sender].customer.seq = 0;\r\n        users[msg.sender].customer.title = 0;\r\n\r\n        users[msg.sender].referrals.daredevil = 0;\r\n        users[msg.sender].referrals.novator = 0;\r\n  \r\n        // Is msg.value correct\r\n        if (users[msg.sender].info.earned / 100 * 10 \u003E activationPrice) {\r\n            if (msg.value != users[msg.sender].info.earned / 100 * 10) {\r\n                revert();\r\n            }\r\n        } else {\r\n            if (msg.value != activationPrice) {\r\n                revert();\r\n            }\r\n        }\r\n\r\n        // Is activation needed?\r\n        if (canPay(msg.sender) == false) {\r\n            revert();\r\n        }\r\n\r\n        // Its just another activation(prolongation)\r\n        users[msg.sender].info.earned = 0;\r\n        // Extend activation series\r\n        extendActivation(msg.sender);\r\n        \r\n        \r\n        if (users[msg.sender].info.line == 2) {\r\n            toReferrer(users[msg.sender].info.referrer, msg.value / 100 * 40, 1);\r\n            toFund(msg.value / 100 * 30 \u002B msg.value / 100 * 20 \u002B msg.value / 100 * 10);\r\n        }\r\n\r\n        if (users[msg.sender].info.line == 3) {\r\n            toReferrer(users[msg.sender].info.referrer, msg.value / 100 * 40, 1);\r\n            toReferrer(users[users[msg.sender].info.referrer].info.referrer, msg.value / 100 * 30, 2);\r\n            toFund(msg.value / 100 * 20 \u002B msg.value / 100 * 10);\r\n        }\r\n\r\n        if (users[msg.sender].info.line == 4) {\r\n            toReferrer(users[msg.sender].info.referrer, msg.value / 100 * 40, 1);\r\n            toReferrer(users[users[msg.sender].info.referrer].info.referrer, msg.value / 100 * 30, 2);\r\n            toReferrer(users[users[users[msg.sender].info.referrer].info.referrer].info.referrer, msg.value / 100 * 20, 3);\r\n            toFund(msg.value / 100 * 10);\r\n        }\r\n\r\n        if (users[msg.sender].info.line \u003E= 5) {\r\n            toReferrer(users[msg.sender].info.referrer, msg.value / 100 * 40, 1);\r\n            toReferrer(users[users[msg.sender].info.referrer].info.referrer, msg.value / 100 * 30, 2);\r\n            toReferrer(users[users[users[msg.sender].info.referrer].info.referrer].info.referrer, msg.value / 100 * 20, 3);\r\n            toReferrer(users[users[users[users[msg.sender].info.referrer].info.referrer].info.referrer].info.referrer, msg.value / 100 * 10, 4);\r\n        }\r\n        \r\n        calculateReferrerLevel(users[msg.sender].info.referrer, 1);\r\n        checkReferrerAcv(users[msg.sender].info.referrer);\r\n        emit FirstActivation(msg.sender);\r\n        emit AcceptLevel(msg.sender);\r\n        lastTxTime = now;\r\n    }\r\n\r\n\r\n    function pay() public payable {\r\n        // Is user exist\r\n        if (users[msg.sender].info.line \u003C 2) {\r\n            revert();\r\n        }\r\n\r\n\r\n        // Is msg.value correct\r\n        if (users[msg.sender].info.earned / 100 * 10 \u003E activationPrice) {\r\n            if (msg.value != users[msg.sender].info.earned / 100 * 10) {\r\n                revert();\r\n            }\r\n        } else {\r\n            if (msg.value != activationPrice) {\r\n                revert();\r\n            }\r\n        }\r\n\r\n        // Is activation needed?\r\n        if (canPay(msg.sender) == false) {\r\n            revert();\r\n        }\r\n\r\n        // Its just another activation(prolongation)\r\n        users[msg.sender].info.earned = 0;\r\n        // Extend activation series\r\n        regularCustomer(msg.sender);\r\n        extendActivation(msg.sender);\r\n        \r\n        emit Activation(msg.sender);\r\n        \r\n        if (users[msg.sender].info.line == 2) {\r\n            toReferrer(users[msg.sender].info.referrer, msg.value / 100 * 40, 1);\r\n            toFund(msg.value / 100 * 30 \u002B msg.value / 100 * 20 \u002B msg.value / 100 * 10);\r\n        }\r\n\r\n        if (users[msg.sender].info.line == 3) {\r\n            toReferrer(users[msg.sender].info.referrer, msg.value / 100 * 40, 1);\r\n            toReferrer(users[users[msg.sender].info.referrer].info.referrer, msg.value / 100 * 30, 2);\r\n            toFund(msg.value / 100 * 20 \u002B msg.value / 100 * 10);\r\n        }\r\n\r\n        if (users[msg.sender].info.line == 4) {\r\n            toReferrer(users[msg.sender].info.referrer, msg.value / 100 * 40, 1);\r\n            toReferrer(users[users[msg.sender].info.referrer].info.referrer, msg.value / 100 * 30, 2);\r\n            toReferrer(users[users[users[msg.sender].info.referrer].info.referrer].info.referrer, msg.value / 100 * 20, 3);\r\n            toFund(msg.value / 100 * 10);\r\n        }\r\n\r\n        if (users[msg.sender].info.line \u003E= 5) {\r\n            toReferrer(users[msg.sender].info.referrer, msg.value / 100 * 40, 1);\r\n            toReferrer(users[users[msg.sender].info.referrer].info.referrer, msg.value / 100 * 30, 2);\r\n            toReferrer(users[users[users[msg.sender].info.referrer].info.referrer].info.referrer, msg.value / 100 * 20, 3);\r\n            toReferrer(users[users[users[users[msg.sender].info.referrer].info.referrer].info.referrer].info.referrer, msg.value / 100 * 10, 4);\r\n        }\r\n        lastTxTime = now;\r\n    }\r\n    // ==================== Fallback!\r\n    function() external payable {\r\n        if (msg.value == 1000000000) {\r\n            refund();\r\n            return;\r\n        }\r\n        if (msg.value == 2000000000) {\r\n            convertScore();\r\n            return;\r\n        }\r\n        pay();\r\n    }\r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getMembersCount\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022getActivationEnds\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022oracul\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022pay\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022comission\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022suicideContract\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022exchangeRate\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022getReferrals\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022AllScore\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022kickback\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022getNewLevel\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022forNovator\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022checkReferrerAcv\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_date\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022getDelta\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022refund\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022canPay\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022members\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022refundFromCashbox\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022Fund\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022getUser\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address[]\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_newActivationPrice\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022setActivationPrice\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_referrer\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022firstPay\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022acceptLevel\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022acceptOwnership\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022everyDay\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022hardworkerPath\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022getEarned\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022convertScore\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022isLevelUp\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022owner\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022getPayAmount\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getMembers\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address[]\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022isActive\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022cashbox\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022activationPrice\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022comandosPath\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022refundFromRest\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022getComandos\u0022,\u0022outputs\u0022:[{\u0022components\u0022:[{\u0022name\u0022:\u0022time\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022seq\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022count\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022title\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022tuple\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022refundFromKickback\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022lastTxTime\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022getAlltime\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022howMuchConverted\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022level\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022getReferralsCount\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getNow\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022rest\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022getCustomer\u0022,\u0022outputs\u0022:[{\u0022components\u0022:[{\u0022name\u0022:\u0022seq\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022title\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022tuple\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022canSuicide\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_newOracul\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022setOracul\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022getScore\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022newOwner\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022activationTime\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022forDaredevil\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022transferOwnership\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022regularCustomer\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022getHardworker\u0022,\u0022outputs\u0022:[{\u0022components\u0022:[{\u0022name\u0022:\u0022time\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022seq\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022title\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022tuple\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022fallback\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022_from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022OwnershipTransferred\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022_oracul\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022OraculChanged\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022Activation\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022FirstActivation\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Refund\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022LossOfReward\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022level\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022LevelUp\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022AcceptLevel\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022ToFund\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022ToReferrer\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022sequence\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022title\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022HardworkerSeq\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022sequence\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022title\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022ComandosSeq\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022EveryDaySeq\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022sequence\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022CustomerSeq\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022sequence\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022achievement\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022DaredevilSeq\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022sequence\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022achievement\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022NovatorSeq\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022eth\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022ScoreConverted\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022user\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022ScoreEarned\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"QuestBot","CompilerVersion":"v0.5.8\u002Bcommit.23d335f2","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://60220381918b0d459d5e6849a0aeec2f67059c60fc61c3c71b7c23d566218f77"}]