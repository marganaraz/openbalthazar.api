[{"SourceCode":"pragma solidity ^0.5.1;\r\n\r\ncontract Lotto {\r\n\r\n    struct Round {\r\n        uint entries;               // number of total entries in the round\r\n        address[] activePlayers;    // list of active players (can be multiple of same player)\r\n        uint256 ticketCost;         // cost of one ticket in the lotto\r\n        bool drawn;                 // has the lotto been drawn yet?\r\n        uint256 fee;                // fee to go to hosts\r\n        bytes32 hashOfSecret;       // hash of the secret\r\n        bytes32 secret;             // what is the secret\r\n        uint256 closesOn;           // entries close on block #\r\n        uint256 winner;             // winner of round\r\n        uint256 prizePool;\r\n    }\r\n\r\n    address payable drawer;\r\n    uint256 public roundCount;\r\n    mapping(address =\u003E uint256) public owed;  // how much is that address owed (from winnings)\r\n    Round[] public rounds;  // list of rounds\r\n\r\n    constructor () public {\r\n        drawer = msg.sender;\r\n        roundCount = 0;\r\n    }\r\n\r\n    modifier isDrawer {\r\n        require(msg.sender==drawer);\r\n        _;\r\n    }\r\n    \r\n    function Drawer() public view returns (address _drawer){\r\n        _drawer = drawer;\r\n    }\r\n    \r\n    function createRound(uint256 _ticketCost, uint256 _fee, bytes32 _hashOfSecret, uint256 _closesOn) public isDrawer {\r\n        require(_closesOn \u003E block.number);\r\n        Round memory round;\r\n        round.ticketCost = _ticketCost;\r\n        round.fee = _fee;\r\n        round.hashOfSecret = _hashOfSecret;\r\n        round.closesOn = _closesOn;\r\n        rounds.push(round);\r\n        roundCount\u002B\u002B;\r\n    }\r\n    \r\n    function getBlockNumber() public view returns (uint256 bn){ bn = block.number; }\r\n    \r\n    function buyTicket(uint256 _roundNumber) public payable {\r\n        require(block.number \u003C rounds[_roundNumber].closesOn); // this is crucial for two reasons\r\n        require(msg.value == rounds[_roundNumber].ticketCost);\r\n        require(!rounds[_roundNumber].drawn);\r\n        rounds[_roundNumber].entries\u002B\u002B;\r\n        rounds[_roundNumber].activePlayers.push(msg.sender);\r\n        rounds[_roundNumber].prizePool \u002B= (rounds[_roundNumber].ticketCost-rounds[_roundNumber].fee);\r\n    }    \r\n    \r\n    function checkHash(bytes32 testSecret) public pure returns(bytes32 hout) { hout = sha256(abi.encodePacked(testSecret)); }\r\n    function checkWinner(bytes32 testSecret, uint256 testEntries) public pure returns (uint256 testWinner) {\r\n        testWinner = uint256(testSecret) % testEntries;\r\n    }\r\n    \r\n    function checkRoundWinner(uint256 round) public view returns(address win){\r\n        require(rounds[round].drawn);\r\n        win = rounds[round].activePlayers[rounds[round].winner];\r\n    }\r\n    \r\n    function drawWinner(uint256 _roundNumber, bytes32 secret) public isDrawer {\r\n        require(rounds[_roundNumber].entries\u003E0);\r\n        require(block.number \u003E= rounds[_roundNumber].closesOn);\r\n        require(!rounds[_roundNumber].drawn);\r\n        require(sha256(abi.encodePacked(secret))==(rounds[_roundNumber].hashOfSecret));\r\n        uint256 winner = checkWinner(secret,rounds[_roundNumber].entries);\r\n        rounds[_roundNumber].drawn = true;\r\n        rounds[_roundNumber].winner = winner;\r\n        rounds[_roundNumber].secret = secret;\r\n        owed[rounds[_roundNumber].activePlayers[winner]] \u002B= rounds[_roundNumber].prizePool;\r\n        drawer.transfer(rounds[_roundNumber].ticketCost*rounds[_roundNumber].entries-rounds[_roundNumber].prizePool);\r\n    }\r\n    \r\n    function collectPrize() public {\r\n        require(owed[msg.sender]\u003E0);\r\n        msg.sender.transfer(owed[msg.sender]);\r\n        owed[msg.sender] = 0;\r\n    }\r\n    \r\n    function sendPrize(address payable _who) public {\r\n        require(owed[_who]\u003E0);\r\n        _who.transfer(owed[_who]);\r\n        owed[_who] = 0;\r\n    }\r\n}","ABI":"[{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_ticketCost\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_fee\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022_hashOfSecret\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022name\u0022:\u0022_closesOn\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022createRound\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022roundCount\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_who\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022sendPrize\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022Drawer\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022_drawer\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getBlockNumber\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022bn\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_roundNumber\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022buyTicket\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022rounds\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022entries\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022ticketCost\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022drawn\u0022,\u0022type\u0022:\u0022bool\u0022},{\u0022name\u0022:\u0022fee\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022hashOfSecret\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022name\u0022:\u0022secret\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022name\u0022:\u0022closesOn\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022winner\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022prizePool\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022testSecret\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022name\u0022:\u0022testEntries\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022checkWinner\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022testWinner\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022pure\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022collectPrize\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_roundNumber\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022secret\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022drawWinner\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022testSecret\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022checkHash\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022hout\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022pure\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022owed\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022round\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022checkRoundWinner\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022win\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022}]","ContractName":"Lotto","CompilerVersion":"v0.5.1\u002Bcommit.c8a2cb62","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://7108561f3243e48e6cd71a09ae3a8c9cf4d58f4272c0513ebf1313dbefce04bf"}]