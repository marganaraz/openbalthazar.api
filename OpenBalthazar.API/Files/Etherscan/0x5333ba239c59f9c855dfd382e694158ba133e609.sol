[{"SourceCode":"// File: zeppelin-solidity/contracts/ownership/Ownable.sol\r\n\r\npragma solidity ^0.4.24;\r\n\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \u0022user permissions\u0022.\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipRenounced(address indexed previousOwner);\r\n  event OwnershipTransferred(\r\n    address indexed previousOwner,\r\n    address indexed newOwner\r\n  );\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original \u0060owner\u0060 of the contract to the sender\r\n   * account.\r\n   */\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to relinquish control of the contract.\r\n   * @notice Renouncing to ownership will leave the contract without an owner.\r\n   * It will not be possible to call the functions with the \u0060onlyOwner\u0060\r\n   * modifier anymore.\r\n   */\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipRenounced(owner);\r\n    owner = address(0);\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param _newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address _newOwner) public onlyOwner {\r\n    _transferOwnership(_newOwner);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers control of the contract to a newOwner.\r\n   * @param _newOwner The address to transfer ownership to.\r\n   */\r\n  function _transferOwnership(address _newOwner) internal {\r\n    require(_newOwner != address(0));\r\n    emit OwnershipTransferred(owner, _newOwner);\r\n    owner = _newOwner;\r\n  }\r\n}\r\n\r\n// File: zeppelin-solidity/contracts/math/SafeMath.sol\r\n\r\npragma solidity ^0.4.24;\r\n\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\r\n  /**\r\n  * @dev Multiplies two numbers, throws on overflow.\r\n  */\r\n  function mul(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\r\n    // Gas optimization: this is cheaper than asserting \u0027a\u0027 not being zero, but the\r\n    // benefit is lost if \u0027b\u0027 is also tested.\r\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\r\n    if (_a == 0) {\r\n      return 0;\r\n    }\r\n\r\n    c = _a * _b;\r\n    assert(c / _a == _b);\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two numbers, truncating the quotient.\r\n  */\r\n  function div(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n    // assert(_b \u003E 0); // Solidity automatically throws when dividing by 0\r\n    // uint256 c = _a / _b;\r\n    // assert(_a == _b * c \u002B _a % _b); // There is no case in which this doesn\u0027t hold\r\n    return _a / _b;\r\n  }\r\n\r\n  /**\r\n  * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 _a, uint256 _b) internal pure returns (uint256) {\r\n    assert(_b \u003C= _a);\r\n    return _a - _b;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two numbers, throws on overflow.\r\n  */\r\n  function add(uint256 _a, uint256 _b) internal pure returns (uint256 c) {\r\n    c = _a \u002B _b;\r\n    assert(c \u003E= _a);\r\n    return c;\r\n  }\r\n}\r\n\r\n// File: contracts/TokenExpress.sol\r\n\r\npragma solidity ^0.4.25;\r\n\r\n\r\n\r\ncontract TokenExpress is Ownable {\r\n    event Deposit(bytes32 indexed escrowId, address indexed sender, uint256 amount);\r\n    event Send(bytes32 indexed escrowId, address indexed recipient, uint256 amount);\r\n    event Recovery(bytes32 indexed escrowId, address indexed sender, uint256 amount);\r\n\r\n    using SafeMath for uint256;\r\n\r\n    // \u30E6\u30FC\u30B6\u306B\u8CA0\u62C5\u3057\u3066\u3082\u3089\u3046\u624B\u6570\u6599\uFF08wei\uFF09\r\n    uint256 fee = 1000000;\r\n\r\n    // \u30E6\u30FC\u30B6\u304C\u56DE\u53CE\u3067\u304D\u308B\u3088\u3046\u306B\u306A\u308B\u307E\u3067\u306E\u6642\u9593\uFF08\u6642\u9593\uFF09\r\n    uint256 lockTime = 14 * 24;\r\n\r\n    // \u30AA\u30FC\u30CA\u30FC\u4EE5\u5916\u306B\u7BA1\u7406\u6A29\u9650\u304C\u3042\u308B\u30E6\u30FC\u30B6\r\n    address administrator = 0x0;\r\n\r\n    // \u9001\u91D1\u60C5\u5831\u3092\u4FDD\u5B58\u3059\u308B\u69CB\u9020\u4F53\r\n    struct TransferInfo {\r\n        address from;\r\n        address to;\r\n        uint256 amount;\r\n        uint256 date;\r\n        bool    sent;\r\n    }\r\n\r\n    // \u30C7\u30DD\u30B8\u30C3\u30C8\u60C5\u5831\r\n    mapping (bytes32 =\u003E TransferInfo) private _transferInfo;\r\n\r\n    /**\r\n     * \u30B3\u30F3\u30B9\u30C8\u30E9\u30AF\u30BF\r\n     */\r\n    constructor () public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n     * \u30C7\u30DD\u30B8\u30C3\u30C8\u3092\u884C\u3046\r\n     * \u5F15\u6570\uFF11\uFF1A\u30B7\u30B9\u30C6\u30E0\u3067\u767A\u884C\u3055\u308C\u305FID\r\n     * \u5F15\u6570\uFF12\uFF1A\u9001\u91D1\u984D\uFF08wei \u3067\u6307\u5B9A\uFF09\r\n     * \u5F15\u6570\uFF13\uFF1A\u9001\u91D1\u5148\u30A2\u30C9\u30EC\u30B9\r\n     * \u203B \u9001\u91D1\u984D\uFF0B\u624B\u6570\u6599\u5206\u306EETH\u3092\u9001\u3063\u3066\u3082\u3089\u3046\u5FC5\u8981\u304C\u3042\u308B\r\n     *\r\n     * df121a97\r\n     */\r\n    function etherDeposit(bytes32 id, uint256 amount) payable public {\r\n        // \u65E2\u306BID\u304C\u767B\u9332\u3055\u308C\u3066\u3044\u305F\u3089\u5909\u66F4\u306F\u4E0D\u53EF\r\n        require(_transferInfo[id].from == 0x0, \u0022ID is already exists.\u0022);\r\n\r\n        // \u5B9F\u969B\u306B\u9001\u3089\u308C\u305F ether \u304C\u9001\u91D1\u984D\uFF0B\u624B\u6570\u6599\u3088\u308A\u3082\u4F4E\u3051\u308C\u3070\u30A8\u30E9\u30FC\r\n        require(amount \u002B fee \u003C= msg.value, \u0022Value is too low.\u0022);\r\n\r\n        // \u9001\u91D1\u60C5\u5831\u3092\u767B\u9332\u3059\u308B\r\n        _transferInfo[id].from   = msg.sender;\r\n        _transferInfo[id].to     = 0x0;\r\n        _transferInfo[id].amount = amount;\r\n        _transferInfo[id].date   = block.timestamp;\r\n        emit Deposit(id, msg.sender, amount);\r\n    }\r\n\r\n    /**\r\n     * \u9001\u91D1\u3092\u884C\u3046\r\n     * \u5F15\u6570\uFF11\uFF1A\u30B7\u30B9\u30C6\u30E0\u3067\u767A\u884C\u3055\u308C\u305FID\r\n     *\r\n     * 3af19adb\r\n     */\r\n    function etherSend(bytes32 id, address to) public {\r\n        // ID\u304C\u767B\u9332\u3055\u308C\u3066\u3044\u306A\u3051\u308C\u3070\u30A8\u30E9\u30FC\r\n        require(_transferInfo[id].from != 0x0, \u0022ID error.\u0022);\r\n\r\n        // \u65E2\u306B\u9001\u91D1\u30FB\u56DE\u53CE\u3055\u308C\u3066\u3044\u308C\u3070\u30A8\u30E9\u30FC\r\n        require(_transferInfo[id].sent == false, \u0022Already sent.\u0022);\r\n\r\n        // \u9001\u91D1\u5148\u304C\u4E0D\u6B63\u306A\u30A2\u30C9\u30EC\u30B9\u306A\u3089\u30A8\u30E9\u30FC\r\n        require(to != 0x0, \u0022Address error.\u0022);\r\n\r\n        // \u9001\u91D1\u6307\u793A\u3092\u3057\u305F\u30A2\u30C9\u30EC\u30B9\u304C\u3001\u30AA\u30FC\u30CA\u30FC\u304B\u7BA1\u7406\u8005\u304B\u30C7\u30DD\u30B8\u30C3\u30C8\u8005\u4EE5\u5916\u3060\u3063\u305F\u3089\u30A8\u30E9\u30FC\r\n        require(msg.sender == owner || msg.sender == administrator || msg.sender == _transferInfo[id].from, \u0022Invalid address.\u0022);\r\n\r\n        to.transfer(_transferInfo[id].amount);\r\n        _transferInfo[id].to = to;\r\n        _transferInfo[id].sent = true;\r\n        emit Send(id, to, _transferInfo[id].amount);\r\n    }\r\n\r\n    /**\r\n     * \u56DE\u53CE\u3092\u884C\u3046\r\n     * \u5F15\u6570\uFF11\uFF1A\u30B7\u30B9\u30C6\u30E0\u3067\u767A\u884C\u3055\u308C\u305FID\r\n     *\r\n     * 6b87124e\r\n     */\r\n    function etherRecovery(bytes32 id) public {\r\n        // ID\u304C\u767B\u9332\u3055\u308C\u3066\u3044\u306A\u3051\u308C\u3070\u30A8\u30E9\u30FC\r\n        require(_transferInfo[id].from != 0x0, \u0022ID error.\u0022);\r\n\r\n        // \u65E2\u306B\u9001\u91D1\u30FB\u56DE\u53CE\u3055\u308C\u3066\u3044\u308C\u3070\u30A8\u30E9\u30FC\r\n        require(_transferInfo[id].sent == false, \u0022Already recoveried.\u0022);\r\n\r\n        // \u30ED\u30C3\u30AF\u30BF\u30A4\u30E0\u3092\u904E\u304E\u3066\u4ECA\u3051\u308C\u3070\u30A8\u30E9\u30FC\r\n        require(_transferInfo[id].date \u002B lockTime * 60 * 60 \u003C= block.timestamp, \u0022Locked.\u0022);\r\n\r\n        address to = _transferInfo[id].from;\r\n        to.transfer(_transferInfo[id].amount);\r\n        _transferInfo[id].sent = true;\r\n        emit Recovery(id, _transferInfo[id].from, _transferInfo[id].amount);\r\n    }\r\n\r\n    /**\r\n     * \u6307\u5B9A\u3057\u305FID\u306E\u60C5\u5831\u3092\u8FD4\u3059\r\n     * onlyOwner \u306B\u3057\u305F\u65B9\u304C\u826F\u3044\u304B\u3082\r\n     */\r\n    function etherInfo(bytes32 id) public view returns (address, address, uint256, bool) {\r\n        return (_transferInfo[id].from, _transferInfo[id].to, _transferInfo[id].amount, _transferInfo[id].sent);\r\n    }\r\n\r\n    /**\r\n     * \u30AA\u30FC\u30CA\u30FC\u4EE5\u5916\u306E\u7BA1\u7406\u8005\u3092\u8A2D\u5B9A\u3059\u308B\r\n     * \u5F15\u6570\uFF11\uFF1A\u7BA1\u7406\u8005\u306E\u30A2\u30C9\u30EC\u30B9\r\n     *\r\n     *\r\n     */\r\n    function setAdmin(address _admin) onlyOwner public {\r\n        administrator = _admin;\r\n    }\r\n\r\n    /**\r\n     * \u30AA\u30FC\u30CA\u30FC\u4EE5\u5916\u306E\u7BA1\u7406\u8005\u3092\u53D6\u5F97\u3059\u308B\r\n     */\r\n    function getAdmin() public view returns (address) {\r\n        return administrator;\r\n    }\r\n\r\n    /**\r\n     * \u624B\u6570\u6599\u306E\u5024\u3092\u5909\u66F4\u3059\u308B\r\n     * \u5F15\u6570\uFF11\uFF1A\u624B\u6570\u6599\u306E\u5024\uFF08wei\uFF09\r\n     *\r\n     * 69fe0e2d\r\n     */\r\n    function setFee(uint256 _fee) onlyOwner public {\r\n        fee = _fee;\r\n    }\r\n\r\n    /**\r\n     * \u624B\u6570\u6599\u306E\u5024\u3092\u8FD4\u3059\r\n     */\r\n    function getFee() public view returns (uint256) {\r\n        return fee;\r\n    }\r\n\r\n    /**\r\n     * \u30ED\u30C3\u30AF\u671F\u9593\u3092\u5909\u66F4\u3059\u308B\r\n     * \u5F15\u6570\uFF11\uFF1A\u30ED\u30C3\u30AF\u671F\u9593\uFF08\u6642\u9593\uFF09\r\n     *\r\n     * ae04d45d\r\n     */\r\n    function setLockTime(uint256 _lockTime) onlyOwner public {\r\n        lockTime = _lockTime;\r\n    }\r\n\r\n    /**\r\n     * \u30ED\u30C3\u30AF\u671F\u9593\u306E\u5024\u3092\u8FD4\u3059\r\n     */\r\n    function getLockTime() public view returns (uint256) {\r\n        return lockTime;\r\n    }\r\n\r\n    /**\r\n     * \u30B3\u30F3\u30C8\u30E9\u30AF\u30C8\u306E\u6B8B\u9AD8\u78BA\u8A8D\r\n     */\r\n    function getBalance() public view returns (uint256) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    /**\r\n     * \u30AA\u30FC\u30CA\u30FC\u306B\u3088\u308B Ether \u306E\u56DE\u53CE\r\n     * \u5F15\u6570\uFF11\uFF1A\u9001\u308A\u5148\u30A2\u30C9\u30EC\u30B9\r\n     * \u5F15\u6570\uFF12\uFF1B\u9001\u91D1\u984D\r\n     *\r\n     * 3ef5e35f\r\n     */\r\n    function sendEtherToOwner(address to, uint256 amount) onlyOwner public {\r\n        to.transfer(amount);\r\n    }\r\n\r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getBalance\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022sendEtherToOwner\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022id\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022etherDeposit\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:true,\u0022stateMutability\u0022:\u0022payable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_fee\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022setFee\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022id\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022etherRecovery\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getAdmin\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_admin\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022setAdmin\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022renounceOwnership\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022id\u0022,\u0022type\u0022:\u0022bytes32\u0022}],\u0022name\u0022:\u0022etherInfo\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022},{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022owner\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_lockTime\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022setLockTime\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getLockTime\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022id\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022name\u0022:\u0022to\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022etherSend\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getFee\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022transferOwnership\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022escrowId\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022sender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Deposit\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022escrowId\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022recipient\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Send\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022escrowId\u0022,\u0022type\u0022:\u0022bytes32\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022sender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022amount\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Recovery\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022previousOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022OwnershipRenounced\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022previousOwner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022OwnershipTransferred\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"TokenExpress","CompilerVersion":"v0.4.26\u002Bcommit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://ed28b19d3431f85a7a8eb52dcd352633a70a661bdc97d3c47c58d48ee4173f3e"}]