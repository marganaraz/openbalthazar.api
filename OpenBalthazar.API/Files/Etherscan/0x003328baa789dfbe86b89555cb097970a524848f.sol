[{"SourceCode":"pragma solidity ^0.5.8;\r\npragma experimental ABIEncoderV2;\r\n\r\ninterface ERC20Interface {\r\n    function allowance(address, address) external view returns (uint);\r\n    function balanceOf(address) external view returns (uint);\r\n    function approve(address, uint) external;\r\n    function transfer(address, uint) external returns (bool);\r\n    function transferFrom(address, address, uint) external returns (bool);\r\n    function deposit() external payable;\r\n    function withdraw(uint) external;\r\n}\r\n\r\n\r\ncontract SoloMarginContract {\r\n\r\n    struct Info {\r\n        address owner;  // The address that owns the account\r\n        uint256 number; // A nonce that allows a single address to control many accounts\r\n    }\r\n\r\n\r\n    struct Wei {\r\n        bool sign; // true if positive\r\n        uint256 value;\r\n    }\r\n\r\n    struct Price {\r\n        uint256 value;\r\n    }\r\n\r\n    struct TotalPar {\r\n        uint128 borrow;\r\n        uint128 supply;\r\n    }\r\n\r\n    struct Index {\r\n        uint96 borrow;\r\n        uint96 supply;\r\n        uint32 lastUpdate;\r\n    }\r\n\r\n    function getMarketPrice(uint256 marketId) public view returns (Price memory);\r\n    function getAccountWei(Info memory account, uint256 marketId) public view returns (Wei memory);\r\n    function getMarketTotalPar(uint256 marketId) public view returns (TotalPar memory);\r\n    function getMarketCurrentIndex(uint256 marketId) public view returns (Index memory);\r\n}\r\n\r\ninterface RegistryInterface {\r\n    function proxies(address owner) external view returns (address);\r\n}\r\n\r\n\r\ncontract Helpers {\r\n\r\n    /**\r\n     * @dev get Dydx Solo Address\r\n    */\r\n    function getSoloAddress() public pure returns (address addr) {\r\n        addr = 0x1E0447b19BB6EcFdAe1e4AE1694b0C3659614e4e;\r\n    }\r\n\r\n    function getInstaRegistry() public pure returns (address addr) {\r\n        addr = 0x498b3BfaBE9F73db90D252bCD4Fa9548Cd0Fd981;\r\n    }\r\n\r\n    /**\r\n    * @dev getting acccount arg\r\n    */\r\n    function getAccountArgs(address owner) internal pure returns (SoloMarginContract.Info[] memory) {\r\n        SoloMarginContract.Info[] memory accounts = new SoloMarginContract.Info[](1);\r\n        accounts[0] = (SoloMarginContract.Info(owner, 0));\r\n        return accounts;\r\n    }\r\n\r\n    struct DydxData {\r\n        SoloMarginContract.Price tokenPrice;\r\n        SoloMarginContract.Wei balanceOfUser;\r\n        SoloMarginContract.Wei balanceOfWallet;\r\n        SoloMarginContract.TotalPar marketTotalPar;\r\n        SoloMarginContract.Index marketCurrentIndex;\r\n    }\r\n}\r\n\r\n\r\ncontract InstaDydxRead is Helpers {\r\n    function getDydxUserData(address owner, uint[] memory marketId) public view returns(DydxData[] memory) {\r\n        SoloMarginContract solo = SoloMarginContract(getSoloAddress());\r\n        address userWallet = RegistryInterface(getInstaRegistry()).proxies(owner);\r\n        DydxData[] memory tokensData = new DydxData[](marketId.length);\r\n        for (uint i = 0; i \u003C marketId.length; i\u002B\u002B) {\r\n            uint id = marketId[i];\r\n            tokensData[i] = DydxData(\r\n                solo.getMarketPrice(id),\r\n                solo.getAccountWei(getAccountArgs(owner)[0], id),\r\n                solo.getAccountWei(getAccountArgs(userWallet)[0], id),\r\n                solo.getMarketTotalPar(id),\r\n                solo.getMarketCurrentIndex(id)\r\n            );\r\n        }\r\n        return tokensData;\r\n    }\r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022internalType\u0022:\u0022uint256[]\u0022,\u0022name\u0022:\u0022marketId\u0022,\u0022type\u0022:\u0022uint256[]\u0022}],\u0022name\u0022:\u0022getDydxUserData\u0022,\u0022outputs\u0022:[{\u0022components\u0022:[{\u0022components\u0022:[{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022internalType\u0022:\u0022struct SoloMarginContract.Price\u0022,\u0022name\u0022:\u0022tokenPrice\u0022,\u0022type\u0022:\u0022tuple\u0022},{\u0022components\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022sign\u0022,\u0022type\u0022:\u0022bool\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022internalType\u0022:\u0022struct SoloMarginContract.Wei\u0022,\u0022name\u0022:\u0022balanceOfUser\u0022,\u0022type\u0022:\u0022tuple\u0022},{\u0022components\u0022:[{\u0022internalType\u0022:\u0022bool\u0022,\u0022name\u0022:\u0022sign\u0022,\u0022type\u0022:\u0022bool\u0022},{\u0022internalType\u0022:\u0022uint256\u0022,\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022internalType\u0022:\u0022struct SoloMarginContract.Wei\u0022,\u0022name\u0022:\u0022balanceOfWallet\u0022,\u0022type\u0022:\u0022tuple\u0022},{\u0022components\u0022:[{\u0022internalType\u0022:\u0022uint128\u0022,\u0022name\u0022:\u0022borrow\u0022,\u0022type\u0022:\u0022uint128\u0022},{\u0022internalType\u0022:\u0022uint128\u0022,\u0022name\u0022:\u0022supply\u0022,\u0022type\u0022:\u0022uint128\u0022}],\u0022internalType\u0022:\u0022struct SoloMarginContract.TotalPar\u0022,\u0022name\u0022:\u0022marketTotalPar\u0022,\u0022type\u0022:\u0022tuple\u0022},{\u0022components\u0022:[{\u0022internalType\u0022:\u0022uint96\u0022,\u0022name\u0022:\u0022borrow\u0022,\u0022type\u0022:\u0022uint96\u0022},{\u0022internalType\u0022:\u0022uint96\u0022,\u0022name\u0022:\u0022supply\u0022,\u0022type\u0022:\u0022uint96\u0022},{\u0022internalType\u0022:\u0022uint32\u0022,\u0022name\u0022:\u0022lastUpdate\u0022,\u0022type\u0022:\u0022uint32\u0022}],\u0022internalType\u0022:\u0022struct SoloMarginContract.Index\u0022,\u0022name\u0022:\u0022marketCurrentIndex\u0022,\u0022type\u0022:\u0022tuple\u0022}],\u0022internalType\u0022:\u0022struct Helpers.DydxData[]\u0022,\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022tuple[]\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getInstaRegistry\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022addr\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022pure\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022getSoloAddress\u0022,\u0022outputs\u0022:[{\u0022internalType\u0022:\u0022address\u0022,\u0022name\u0022:\u0022addr\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022pure\u0022,\u0022type\u0022:\u0022function\u0022}]","ContractName":"InstaDydxRead","CompilerVersion":"v0.5.12\u002Bcommit.7709ece9","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://4af03f4c36a4a6261ee0e0d9010eed9292c110d85a089805aeeddaccbf48c825"}]