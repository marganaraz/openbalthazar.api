[{"SourceCode":"{\u0022CentralAsianAssetBlockchain.sol\u0022:{\u0022content\u0022:\u0022pragma solidity 0.4.19;\\r\\n\\r\\nimport \\u0027SafeMath.sol\\u0027;\\r\\nimport \\u0027Erc20.sol\\u0027;\\r\\n\\r\\ncontract CentralAsianAssetBlockchain is ERC20 {\\r\\n  using SafeMath for uint;\\r\\n\\r\\n    string internal _name;\\r\\n    string internal _symbol;\\r\\n    uint8 internal _decimals;\\r\\n    uint256 internal _totalSupply;\\r\\n\\r\\n    mapping (address =\\u003e uint256) internal balances;\\r\\n    mapping (address =\\u003e mapping (address =\\u003e uint256)) internal allowed;\\r\\n\\r\\n    function CentralAsianAssetBlockchain(string name, string symbol, uint8 decimals, uint256 totalSupply) public {\\r\\n        _symbol = symbol;\\r\\n        _name = name;\\r\\n        _decimals = decimals;\\r\\n        _totalSupply = totalSupply;\\r\\n        balances[msg.sender] = totalSupply;\\r\\n    }\\r\\n\\r\\n    function name()\\r\\n        public\\r\\n        view\\r\\n        returns (string) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    function symbol()\\r\\n        public\\r\\n        view\\r\\n        returns (string) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    function decimals()\\r\\n        public\\r\\n        view\\r\\n        returns (uint8) {\\r\\n        return _decimals;\\r\\n    }\\r\\n\\r\\n    function totalSupply()\\r\\n        public\\r\\n        view\\r\\n        returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n   function transfer(address _to, uint256 _value) public returns (bool) {\\r\\n     require(_to != address(0));\\r\\n     require(_value \\u003c= balances[msg.sender]);\\r\\n     balances[msg.sender] = SafeMath.sub(balances[msg.sender], _value);\\r\\n     balances[_to] = SafeMath.add(balances[_to], _value);\\r\\n     Transfer(msg.sender, _to, _value);\\r\\n     return true;\\r\\n   }\\r\\n\\r\\n  function balanceOf(address _owner) public view returns (uint256 balance) {\\r\\n    return balances[_owner];\\r\\n   }\\r\\n\\r\\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\\r\\n    require(_to != address(0));\\r\\n     require(_value \\u003c= balances[_from]);\\r\\n     require(_value \\u003c= allowed[_from][msg.sender]);\\r\\n\\r\\n    balances[_from] = SafeMath.sub(balances[_from], _value);\\r\\n     balances[_to] = SafeMath.add(balances[_to], _value);\\r\\n     allowed[_from][msg.sender] = SafeMath.sub(allowed[_from][msg.sender], _value);\\r\\n    Transfer(_from, _to, _value);\\r\\n     return true;\\r\\n   }\\r\\n\\r\\n   function approve(address _spender, uint256 _value) public returns (bool) {\\r\\n     allowed[msg.sender][_spender] = _value;\\r\\n     Approval(msg.sender, _spender, _value);\\r\\n     return true;\\r\\n   }\\r\\n\\r\\n  function allowance(address _owner, address _spender) public view returns (uint256) {\\r\\n     return allowed[_owner][_spender];\\r\\n   }\\r\\n\\r\\n   function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\\r\\n     allowed[msg.sender][_spender] = SafeMath.add(allowed[msg.sender][_spender], _addedValue);\\r\\n     Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\\r\\n     return true;\\r\\n   }\\r\\n\\r\\n  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\\r\\n     uint oldValue = allowed[msg.sender][_spender];\\r\\n     if (_subtractedValue \\u003e oldValue) {\\r\\n       allowed[msg.sender][_spender] = 0;\\r\\n     } else {\\r\\n       allowed[msg.sender][_spender] = SafeMath.sub(oldValue, _subtractedValue);\\r\\n    }\\r\\n     Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\\r\\n     return true;\\r\\n   }\\r\\n\\r\\n}\\r\\n\u0022},\u0022Erc20.sol\u0022:{\u0022content\u0022:\u0022pragma solidity 0.4.19;\\r\\n\\r\\ninterface ERC20 {\\r\\n  function balanceOf(address who) public view returns (uint256);\\r\\n  function transfer(address to, uint256 value) public returns (bool);\\r\\n  function allowance(address owner, address spender) public view returns (uint256);\\r\\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\\r\\n  function approve(address spender, uint256 value) public returns (bool);\\r\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\u0022},\u0022SafeMath.sol\u0022:{\u0022content\u0022:\u0022pragma solidity 0.4.19;\\r\\n\\r\\nlibrary SafeMath {\\r\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    if (a == 0) {\\r\\n      return 0;\\r\\n    }\\r\\n    uint256 c = a * b;\\r\\n    assert(c / a == b);\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    // assert(b \\u003e 0); // Solidity automatically throws when dividing by 0\\r\\n    uint256 c = a / b;\\r\\n    // assert(a == b * c \u002B a % b); // There is no case in which this doesn\\u0027t hold\\r\\n    return c;\\r\\n  }\\r\\n\\r\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    assert(b \\u003c= a);\\r\\n    return a - b;\\r\\n  }\\r\\n\\r\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n    uint256 c = a \u002B b;\\r\\n    assert(c \\u003e= a);\\r\\n    return c;\\r\\n  }\\r\\n}\\r\\n\u0022}}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022name\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022approve\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022totalSupply\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transferFrom\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022decimals\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint8\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_subtractedValue\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022decreaseApproval\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022balanceOf\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022balance\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022symbol\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022string\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022transfer\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_addedValue\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022increaseApproval\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022bool\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022_spender\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022allowance\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[{\u0022name\u0022:\u0022name\u0022,\u0022type\u0022:\u0022string\u0022},{\u0022name\u0022:\u0022symbol\u0022,\u0022type\u0022:\u0022string\u0022},{\u0022name\u0022:\u0022decimals\u0022,\u0022type\u0022:\u0022uint8\u0022},{\u0022name\u0022:\u0022totalSupply\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022from\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022to\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Transfer\u0022,\u0022type\u0022:\u0022event\u0022},{\u0022anonymous\u0022:false,\u0022inputs\u0022:[{\u0022indexed\u0022:true,\u0022name\u0022:\u0022owner\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:true,\u0022name\u0022:\u0022spender\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022indexed\u0022:false,\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022Approval\u0022,\u0022type\u0022:\u0022event\u0022}]","ContractName":"CentralAsianAssetBlockchain","CompilerVersion":"v0.4.19\u002Bcommit.c4cbbb05","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000005f5e100000000000000000000000000000000000000000000000000000000000000001e43656e7472616c20417369616e20417373657420426c6f636b636861696e000000000000000000000000000000000000000000000000000000000000000000034341420000000000000000000000000000000000000000000000000000000000","Library":"","SwarmSource":"bzzr://367aa529f1ecadbe527ee8333b2aa813f9f7368b77ce18a9ed09e7e8b6401de5"}]