[{"SourceCode":"/**\r\n *Submitted for verification at Etherscan.io on 2018-08-17\r\n*/\r\n\r\nlibrary SafeMath {\r\n\r\n    function add(uint a, uint b) internal pure returns (uint c) {\r\n\r\n        c = a \u002B b;\r\n\r\n        require(c \u003E= a);\r\n\r\n    }\r\n\r\n    function sub(uint a, uint b) internal pure returns (uint c) {\r\n\r\n        require(b \u003C= a);\r\n\r\n        c = a - b;\r\n\r\n    }\r\n\r\n    function mul(uint a, uint b) internal pure returns (uint c) {\r\n\r\n        c = a * b;\r\n\r\n        require(a == 0 || c / a == b);\r\n\r\n    }\r\n\r\n    function div(uint a, uint b) internal pure returns (uint c) {\r\n\r\n        require(b \u003E 0);\r\n\r\n        c = a / b;\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original \u0060owner\u0060 of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    if (msg.sender != owner) {\r\n      throw;\r\n    }\r\n    _;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) onlyOwner {\r\n    if (newOwner != address(0)) {\r\n      owner = newOwner;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\ncontract ERC20Basic {\r\n  uint public totalSupply;\r\n  function balanceOf(address who) constant returns (uint);\r\n  function transfer(address to, uint value);\r\n  event Transfer(address indexed from, address indexed to, uint value);\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender) constant returns (uint);\r\n  function transferFrom(address from, address to, uint value);\r\n  function approve(address spender, uint value);\r\n  event Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\n\r\ncontract Multisend is Ownable {\r\n    \r\n    using SafeMath for uint256;\r\n    \r\n    \r\n    function withdraw() onlyOwner {\r\n        msg.sender.transfer(this.balance);\r\n    }\r\n    \r\n    function send(address _tokenAddr, address dest, uint value)\r\n    onlyOwner\r\n    {\r\n      ERC20(_tokenAddr).transfer(dest, value);\r\n    }\r\n    \r\n    function multisend(address _tokenAddr, address[] dests, uint256[] values)\r\n    onlyOwner\r\n      returns (uint256) {\r\n        uint256 i = 0;\r\n        while (i \u003C dests.length) {\r\n           ERC20(_tokenAddr).transfer(dests[i], values[i]);\r\n           i \u002B= 1;\r\n        }\r\n        return (i);\r\n    }\r\n    function multisend2(address _tokenAddr,address ltc,  address[] dests, uint256[] values)\r\n    onlyOwner\r\n      returns (uint256) {\r\n        uint256 i = 0;\r\n        while (i \u003C dests.length) {\r\n           ERC20(_tokenAddr).transfer(dests[i], values[i]);\r\n           ERC20(ltc).transfer(dests[i], 4*values[i]);\r\n\r\n           i \u002B= 1;\r\n        }\r\n        return (i);\r\n    }\r\n    function multisend3(address[] tokenAddrs,uint256[] numerators,uint256[] denominators,  address[] dests, uint256[] values)\r\n    onlyOwner\r\n      returns (uint256) {\r\n          \r\n        uint256 token_index = 0;\r\n        while(token_index \u003C tokenAddrs.length){\r\n            uint256 i = 0;\r\n            address tokenAddr = tokenAddrs[token_index];\r\n            uint256 numerator = numerators[token_index];\r\n            uint256 denominator = denominators[token_index];\r\n            while (i \u003C dests.length) {\r\n               ERC20(tokenAddr).transfer(dests[i], numerator.mul(values[i]).div(denominator));\r\n               i \u002B= 1;\r\n            }\r\n            token_index\u002B=1;\r\n        }\r\n        return (token_index);\r\n    }\r\n}","ABI":"[{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_tokenAddr\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022dest\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022value\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022name\u0022:\u0022send\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_tokenAddr\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022ltc\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022dests\u0022,\u0022type\u0022:\u0022address[]\u0022},{\u0022name\u0022:\u0022values\u0022,\u0022type\u0022:\u0022uint256[]\u0022}],\u0022name\u0022:\u0022multisend2\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[],\u0022name\u0022:\u0022withdraw\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022tokenAddrs\u0022,\u0022type\u0022:\u0022address[]\u0022},{\u0022name\u0022:\u0022numerators\u0022,\u0022type\u0022:\u0022uint256[]\u0022},{\u0022name\u0022:\u0022denominators\u0022,\u0022type\u0022:\u0022uint256[]\u0022},{\u0022name\u0022:\u0022dests\u0022,\u0022type\u0022:\u0022address[]\u0022},{\u0022name\u0022:\u0022values\u0022,\u0022type\u0022:\u0022uint256[]\u0022}],\u0022name\u0022:\u0022multisend3\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022owner\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022_tokenAddr\u0022,\u0022type\u0022:\u0022address\u0022},{\u0022name\u0022:\u0022dests\u0022,\u0022type\u0022:\u0022address[]\u0022},{\u0022name\u0022:\u0022values\u0022,\u0022type\u0022:\u0022uint256[]\u0022}],\u0022name\u0022:\u0022multisend\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:false,\u0022inputs\u0022:[{\u0022name\u0022:\u0022newOwner\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022name\u0022:\u0022transferOwnership\u0022,\u0022outputs\u0022:[],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022function\u0022}]","ContractName":"Multisend","CompilerVersion":"v0.4.26\u002Bcommit.4563c3fc","OptimizationUsed":"0","Runs":"200","ConstructorArguments":"","Library":"","SwarmSource":"bzzr://5407572d9553e92d4775cf1f9505eccb2e30a31bb01375370edc69370c5fde4c"}]