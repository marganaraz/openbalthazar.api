[{"SourceCode":"// File: contracts/external/DappHub/interfaces/IMedian.sol\r\n\r\n/*\r\n    Copyright 2019 Set Labs Inc.\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \u0022License\u0022);\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \u0022AS IS\u0022 BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n*/\r\n\r\npragma solidity 0.5.7;\r\n\r\n\r\n/**\r\n * @title IMedian\r\n * @author Set Protocol\r\n *\r\n * Interface for operating with a price feed Medianizer contract\r\n */\r\ninterface IMedian {\r\n\r\n    /**\r\n     * Returns the current price set on the medianizer. Throws if the price is set to 0 (initialization)\r\n     *\r\n     * @return  Current price of asset represented in hex as bytes32\r\n     */\r\n    function read()\r\n        external\r\n        view\r\n        returns (bytes32);\r\n\r\n    /**\r\n     * Returns the current price set on the medianizer and whether the value has been initialized\r\n     *\r\n     * @return  Current price of asset represented in hex as bytes32, and whether value is non-zero\r\n     */\r\n    function peek()\r\n        external\r\n        view\r\n        returns (bytes32, bool);\r\n}\r\n\r\n// File: contracts/meta-oracles/LegacyMakerOracleAdapter.sol\r\n\r\n/*\r\n    Copyright 2019 Set Labs Inc.\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \u0022License\u0022);\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \u0022AS IS\u0022 BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n*/\r\n\r\npragma solidity 0.5.7;\r\n\r\n\r\n\r\n/**\r\n * @title LegacyMakerOracleAdapter\r\n * @author Set Protocol\r\n *\r\n * Coerces bytes outputs from MakerDAO\u0027s legacy medianizers into uint256 for use in\r\n * Set OracleProxy system\r\n */\r\ncontract LegacyMakerOracleAdapter {\r\n\r\n    /* ============ State Variables ============ */\r\n    IMedian public medianizerInstance;\r\n\r\n    /* ============ Constructor ============ */\r\n    /*\r\n     * Set address of medianizer being adapted from bytes to uint256\r\n     *\r\n     * @param  _medianizerAddress    The address of medianizer being adapted from bytes to uint256\r\n     */\r\n    constructor(\r\n        IMedian _medianizerAddress\r\n    )\r\n        public\r\n    {\r\n        medianizerInstance =_medianizerAddress;\r\n    }\r\n\r\n    /* ============ External ============ */\r\n\r\n    /*\r\n     * Reads value of medianizer and coerces return to uint256\r\n     *\r\n     * @returns         Maker medianizer price in uint256\r\n     */\r\n    function read()\r\n        external\r\n        view\r\n        returns (uint256)\r\n    {\r\n        // Read value of medianizer and coerce to uint256\r\n        return uint256(medianizerInstance.read());\r\n    }\r\n}","ABI":"[{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022read\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022uint256\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022constant\u0022:true,\u0022inputs\u0022:[],\u0022name\u0022:\u0022medianizerInstance\u0022,\u0022outputs\u0022:[{\u0022name\u0022:\u0022\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022view\u0022,\u0022type\u0022:\u0022function\u0022},{\u0022inputs\u0022:[{\u0022name\u0022:\u0022_medianizerAddress\u0022,\u0022type\u0022:\u0022address\u0022}],\u0022payable\u0022:false,\u0022stateMutability\u0022:\u0022nonpayable\u0022,\u0022type\u0022:\u0022constructor\u0022}]","ContractName":"LegacyMakerOracleAdapter","CompilerVersion":"v0.5.7\u002Bcommit.6da8b019","OptimizationUsed":"1","Runs":"200","ConstructorArguments":"000000000000000000000000729d19f657bd0614b4985cf1d82531c67569197b","Library":"","SwarmSource":"bzzr://cffea6a1b2267088b4720b9cdf99ddc50c225ee9f99b8ac15568ddba25dcf39b"}]